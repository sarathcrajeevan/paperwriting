import {
    isEditMode
} from 'pro-gallery-lib';
var VideoScrollHelperWrapper = /** @class */ (function() {
    function VideoScrollHelperWrapper(setPlayingIdxState) {
        this.left = 0;
        this.top = 0;
        this.setPlayingIdxState = setPlayingIdxState;
        this.handleEvent = function() {};
        this.onScroll = this.onScroll.bind(this);
        this.trigger = {
            SCROLL: this.onScroll,
            INIT_SCROLL: function() {},
        };
        this.stop = function() {};
        this.initializePlayState = function() {};
    }
    VideoScrollHelperWrapper.prototype.onScroll = function(_a) {
        var top = _a.top,
            left = _a.left;
        this.top = top || this.top;
        this.left = left || this.left;
    };
    VideoScrollHelperWrapper.prototype.initVideoScrollHelperIfNeeded = function(galleryStructureData, items) {
        var _this = this;
        if (items.some(function(item) {
                return (item.metaData && item.metaData.type === 'video') ||
                    (item.metadata && item.metadata.type === 'video');
            })) {
            var videoScrollHelperConfig_1 = {
                setPlayingVideos: isEditMode() ? function() {} : this.setPlayingIdxState,
            };
            import (
                /* webpackChunkName: "proGallery_videoScrollHelper" */
                './videoScrollHelper.js')
            .then(function(VideoScrollHelper) {
                    Object.assign(_this, new VideoScrollHelper.default(videoScrollHelperConfig_1));
                    _this.updateGalleryStructure(galleryStructureData);
                    _this.onScroll({
                        top: _this.top,
                        left: _this.left
                    });
                })
                .catch(function(e) {
                    console.error('Failed to load videoScrollHelper. error: ' + e);
                });
        }
    };
    VideoScrollHelperWrapper.prototype.updateGalleryStructure = function(scrollHelperNewGalleryStructure, shouldTryToInit, items) {
        if (shouldTryToInit) {
            this.initVideoScrollHelperIfNeeded(scrollHelperNewGalleryStructure, items);
        }
    };
    return VideoScrollHelperWrapper;
}());
export default VideoScrollHelperWrapper;
//# sourceMappingURL=videoScrollHelperWrapper.js.map