import {
    __assign,
    __extends,
    __rest
} from "tslib";
/* eslint-disable prettier/prettier */
import React from 'react';
import {
    utils,
    defaultOptions
} from 'pro-gallery-lib';
import ProGallery from './proGallery/proGallery';
var GalleryRenderer = /** @class */ (function(_super) {
    __extends(GalleryRenderer, _super);

    function GalleryRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GalleryRenderer.prototype.render = function() {
        var _a = this.props,
            id = _a.id,
            options = _a.options,
            eventsListener = _a.eventsListener,
            customComponents = _a.customComponents,
            otherProps = __rest(_a, ["id", "options", "eventsListener", "customComponents"]);
        var _eventsListener = function(eventName, eventData) {
            return typeof eventsListener === 'function' && eventsListener(eventName, eventData);
        };
        var _options = __assign(__assign({}, defaultOptions), options); //TODOVER3 can we remove the default options?? blueprints should take care of it
        var galleryRendererProps = __assign(__assign({}, otherProps), {
            options: _options,
            eventsListener: _eventsListener,
            id: id || 'default-dom-id',
            customComponents: customComponents || {}
        });
        utils.logPlaygroundLink(galleryRendererProps.options);
        if (galleryRendererProps.options &&
            galleryRendererProps.items &&
            galleryRendererProps.container &&
            galleryRendererProps.structure) {
            return React.createElement(ProGallery, __assign({}, galleryRendererProps));
        } else {
            return null;
        }
    };
    return GalleryRenderer;
}(React.Component));
export default GalleryRenderer;
/* eslint-enable prettier/prettier */
//# sourceMappingURL=rendererIndex.js.map