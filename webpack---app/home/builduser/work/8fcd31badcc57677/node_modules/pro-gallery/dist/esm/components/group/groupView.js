import {
    __assign,
    __extends
} from "tslib";
import React from 'react';
import itemView from '../item/itemView.js';
var GroupView = /** @class */ (function(_super) {
    __extends(GroupView, _super);

    function GroupView(props) {
        var _this = _super.call(this, props) || this;
        _this.displayName = 'GroupView';
        _this.dom = [];
        _this.state = {};
        return _this;
    }
    GroupView.prototype.createDom = function(visible) {
        var _this = this;
        return this.props.items.map(function(item) {
            return React.createElement(itemView, __assign({}, item.renderProps(__assign(__assign({}, _this.props.galleryConfig), {
                visible: visible
            }))));
        });
    };
    GroupView.prototype.shouldRender = function() {
        var items = this.props.items;
        if (!items || !items.length || !items[0]) {
            return false;
        }
        return true;
    };
    GroupView.prototype.isVisible = function() {
        var _a = this.props,
            items = _a.items,
            galleryConfig = _a.galleryConfig;
        if (this.props.allowLoop) {
            var idx = items[items.length - 1].idx;
            var activeIndex = galleryConfig.activeIndex,
                totalItemsCount = galleryConfig.totalItemsCount;
            var distance = activeIndex - idx;
            var padding = Math.floor(totalItemsCount / 2);
            return Math.abs(distance) <= padding;
        }
        return true;
    };
    GroupView.prototype.render = function() {
        return this.shouldRender() ? (React.createElement("div", {
            key: "group_" + this.props.idx + "_" + this.props.items[0].id,
            "data-hook": 'group-view',
            "aria-hidden": this.props.ariaHidden
        }, this.createDom(this.isVisible()))) : null;
    };
    return GroupView;
}(React.Component));
export default GroupView;
//# sourceMappingURL=groupView.js.map