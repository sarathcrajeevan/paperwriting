/* eslint-disable */
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BookingsServer = void 0;
var http_1 = require("@wix/ambassador/runtime/http");
var BookingsServer = function(baseUrl, httpClientConfig) {
    var httpClient = new http_1.AmbassadorHTTPClient(baseUrl, httpClientConfig);
    return {
        Availability: function() {
            return function(headers) {
                var service = {
                    isAvailable: function(isAvailableRequest) {
                        return httpClient.invoke('GET', '/v1/availability', isAvailableRequest, headers);
                    },
                    lock: function(lockRequest) {
                        return httpClient.invoke('POST', '/v1/availability/lock', lockRequest, headers);
                    },
                    unlock: function(unlockRequest) {
                        return httpClient.invoke('POST', '/v1/availability/unlock', unlockRequest, headers);
                    },
                };
                service.isAvailable.__http_method = 'GET';
                service.isAvailable.__http_url = '/v1/availability';
                service.lock.__http_method = 'POST';
                service.lock.__http_url = '/v1/availability/lock';
                service.unlock.__http_method = 'POST';
                service.unlock.__http_url = '/v1/availability/unlock';
                return service;
            };
        },
        Bookings: function() {
            return function(headers) {
                var service = {
                    book: function(bookRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/book', bookRequest, headers);
                    },
                    cancel: function(cancelBookingRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{id}/cancel', cancelBookingRequest, headers);
                    },
                    checkout: function(checkoutBookingRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{bookingId}/checkout', checkoutBookingRequest, headers);
                    },
                    confirm: function(confirmBookingRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/requests/{id}/confirm', confirmBookingRequest, headers);
                    },
                    createInvoice: function(createInvoiceRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{booking_id}/createInvoice', createInvoiceRequest, headers);
                    },
                    createOrder: function(createOrderRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{booking_id}/createOrder', createOrderRequest, headers);
                    },
                    decline: function(declineBookingRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/requests/{id}/decline', declineBookingRequest, headers);
                    },
                    markAsPaid: function(markAsPaidRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{booking_id}/markAsPaid', markAsPaidRequest, headers);
                    },
                    reschedule: function(rescheduleRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{booking_id}/reschedule', rescheduleRequest, headers);
                    },
                    setAttendance: function(setAttendanceRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{booking_id}/setAttendance', setAttendanceRequest, headers);
                    },
                    update: function(updateBookingRequest) {
                        return httpClient.invoke('PATCH', '/v1/bookings', updateBookingRequest, headers);
                    },
                    updateCustomerInfo: function(updateCustomerInfoRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/{booking_id}/updateCustomerInfo', updateCustomerInfoRequest, headers);
                    },
                };
                service.book.__http_method = 'POST';
                service.book.__http_url = '/v1/bookings/book';
                service.cancel.__http_method = 'POST';
                service.cancel.__http_url = '/v1/bookings/{id}/cancel';
                service.checkout.__http_method = 'POST';
                service.checkout.__http_url = '/v1/bookings/{bookingId}/checkout';
                service.confirm.__http_method = 'POST';
                service.confirm.__http_url = '/v1/bookings/requests/{id}/confirm';
                service.createInvoice.__http_method = 'POST';
                service.createInvoice.__http_url = '/v1/bookings/{booking_id}/createInvoice';
                service.createOrder.__http_method = 'POST';
                service.createOrder.__http_url = '/v1/bookings/{booking_id}/createOrder';
                service.decline.__http_method = 'POST';
                service.decline.__http_url = '/v1/bookings/requests/{id}/decline';
                service.markAsPaid.__http_method = 'POST';
                service.markAsPaid.__http_url = '/v1/bookings/{booking_id}/markAsPaid';
                service.reschedule.__http_method = 'POST';
                service.reschedule.__http_url = '/v1/bookings/{booking_id}/reschedule';
                service.setAttendance.__http_method = 'POST';
                service.setAttendance.__http_url = '/v1/bookings/{booking_id}/setAttendance';
                service.update.__http_method = 'PATCH';
                service.update.__http_url = '/v1/bookings';
                service.updateCustomerInfo.__http_method = 'POST';
                service.updateCustomerInfo.__http_url = '/v1/bookings/{booking_id}/updateCustomerInfo';
                return service;
            };
        },
        BookingsBo: function() {
            return function(headers) {
                var service = {
                    testCallScopedExperiment: function(testCallScopedExperimentRequest) {
                        return httpClient.invoke('GET', '/v1/testExperiment', testCallScopedExperimentRequest, headers);
                    },
                    testPermission: function(testPermissionRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/test/permission', testPermissionRequest, headers);
                    },
                    testPermissions: function(testPermissionsRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/test/permissions', testPermissionsRequest, headers);
                    },
                };
                service.testCallScopedExperiment.__http_method = 'GET';
                service.testCallScopedExperiment.__http_url = '/v1/testExperiment';
                service.testPermission.__http_method = 'POST';
                service.testPermission.__http_url = '/v1/bookings/test/permission';
                service.testPermissions.__http_method = 'POST';
                service.testPermissions.__http_url = '/v1/bookings/test/permissions';
                return service;
            };
        },
        BookingsReader: function() {
            return function(headers) {
                var service = {
                    list: function(listBookingsRequest) {
                        return httpClient.invoke('GET', '/v1/bookings', listBookingsRequest, headers);
                    },
                    query: function(queryBookingsRequest) {
                        return httpClient.invoke('POST', '/v1/bookings/query', queryBookingsRequest, headers);
                    },
                };
                service.list.__http_method = 'GET';
                service.list.__http_url = '/v1/bookings';
                service.query.__http_method = 'POST';
                service.query.__http_url = '/v1/bookings/query';
                return service;
            };
        },
    };
};
exports.BookingsServer = BookingsServer;
exports.BookingsServer.__transport = 'http';
__exportStar(require("./types"), exports);
//# sourceMappingURL=http.js.map