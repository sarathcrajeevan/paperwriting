/* tslint:disable */
/* eslint:disable */
/**
 * @typedef {Object} dummy801Params
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1-yes
 * @property {string} member_chosen - the member_id whose Followers page was opened
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - members_page, profile_widget,
 * @property {string} page_name - followers, following
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: dummy. Evid: 801.
 * Event description: Event triggered when Followers / Following page is opened.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1-yes
 *
 * member_chosen - Type: string. Desc: the member_id whose Followers page was opened
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: members_page, profile_widget,
 *
 * page_name - Type: string. Desc: followers, following
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {dummy801Params} params The parameters for this event.
 * @return {Object} LogObject
**/
export var dummy801 = function(params) {
    return {
        evid: 801,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} actionButtonClickedParams
 * @property {string} action_type - share, report, delete, block, moderator
 * @property {GUID} app_id - app_id
 * @property {string} formOrigin - where it was opened
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_chosen - the member_id the action was performed on
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} referralInfo - referral_info
 * @property {string} role - member role (owner, writer, member)
 * @property {string} scope - who did the action
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Action button clicked. Evid: 811.
 * Event description: Event triggered when clicking on action button.

 * action_type - Type: string. Desc: share, report, delete, block, moderator
 *
 * app_id - Type: guid. Desc: app_id
 *
 * formOrigin - Type: string. Desc: where it was opened
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_chosen - Type: string. Desc: the member_id the action was performed on
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * referralInfo - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * scope - Type: string. Desc: who did the action
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {actionButtonClickedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var actionButtonClicked = function(params) {
    return {
        evid: 811,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} followButtonClickedUouParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_followed - 1 - follow, 0 - not follow
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_followed - the member_id that was followed
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - member being followed role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Follow button clicked (UoU). Evid: 810.
 * Event description: Event triggered when clicking on follow button.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_followed - Type: bool. Desc: 1 - follow, 0 - not follow
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_followed - Type: string. Desc: the member_id that was followed
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: member being followed role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {followButtonClickedUouParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var followButtonClickedUou = function(params) {
    return {
        evid: 810,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} maChatOpenedParams
 * @property {GUID} instance_id - null
 * @property {GUID} messaged_member_id - site_member_id of messaged member
 * @property {GUID} biToken - null
 * @property {string} origin - Origin from where chat was opened
 * @property {GUID} visitor_id - null
 **/
/**
 * Name: MA Chat opened. Evid: 817.
 * Event description: Ma chat opened..

 * instance_id - Type: guid.
 *
 * messaged_member_id - Type: guid. Desc: site_member_id of messaged member
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: Origin from where chat was opened
 *
 * visitor_id - Type: guid.
 * @param {maChatOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var maChatOpened = function(params) {
    return {
        evid: 817,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} memberSharedAProfileParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_chosen - the member_id whose profile was shared
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Member shared a profile. Evid: 807.
 * Event description: Event triggered when member shared his profile on social networks.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_chosen - Type: string. Desc: the member_id whose profile was shared
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {memberSharedAProfileParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var memberSharedAProfile = function(params) {
    return {
        evid: 807,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} blockedMembersListOpenParams
 * @property {GUID} instance_id - instance_id
 * @property {number} membersCount - count of blocked members
 * @property {GUID} biToken - msid
 * @property {string} referralinfo - where User came from
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Blocked Members List Open. Evid: 843.
 * Event description: Event triggered when blocked members list opens.

 * instance_id - Type: guid. Desc: instance_id
 *
 * membersCount - Type: numeric. Desc: count of blocked members
 *
 * biToken - Type: guid. Desc: msid
 *
 * referralinfo - Type: string. Desc: where User came from
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {blockedMembersListOpenParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blockedMembersListOpen = function(params) {
    return {
        evid: 843,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} memberLeftCommunityAttemptParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} referralInfo - changes location
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Member left community-> attempt. Evid: 802.
 * Event description: Event triggered when member clicked on the leave community button.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * referralInfo - Type: string. Desc: changes location
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {memberLeftCommunityAttemptParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var memberLeftCommunityAttempt = function(params) {
    return {
        evid: 802,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} memberLeftCommunityLeftAfterPopupParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} referralInfo - changes location
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Member left community-> left after popup. Evid: 803.
 * Event description: Event triggered when member clicked on the leave community button in the 'sure you want to leave' popup.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * referralInfo - Type: string. Desc: changes location
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {memberLeftCommunityLeftAfterPopupParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var memberLeftCommunityLeftAfterPopup = function(params) {
    return {
        evid: 803,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} aboutSectionReadMoreClickParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {GUID} viewedMemberId - viewed site member id
 * @property {GUID} visitor_id - null
 **/
/**
 * Name: About section "read more" click. Evid: 819.
 * Event description: read more click to expand About description.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * viewedMemberId - Type: guid. Desc: viewed site member id
 *
 * visitor_id - Type: guid.
 * @param {aboutSectionReadMoreClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var aboutSectionReadMoreClick = function(params) {
    return {
        evid: 819,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} aboutSectionPublishedParams
 * @property {GUID} app_id - app_id
 * @property {boolean} dividerUsed - 1 if divider used 0 if not
 * @property {boolean} emojiUsed - 1 if emoji used 0 if not
 * @property {boolean} first_publish - 1 if first time user published 0 if not
 * @property {boolean} gifUsed - 1 if gif used 0 if not
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - where the edit was done - 'profile','me tab'
 * @property {boolean} photoAttached - 1 if photo attached 0 if not
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {boolean} videoAttached - 1 if video attached 0 if not
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: About section published. Evid: 806.
 * Event description: Event triggered when member published his About section.

 * app_id - Type: guid. Desc: app_id
 *
 * dividerUsed - Type: bool. Desc: 1 if divider used 0 if not
 *
 * emojiUsed - Type: bool. Desc: 1 if emoji used 0 if not
 *
 * first_publish - Type: bool. Desc: 1 if first time user published 0 if not
 *
 * gifUsed - Type: bool. Desc: 1 if gif used 0 if not
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: where the edit was done - 'profile','me tab'
 *
 * photoAttached - Type: bool. Desc: 1 if photo attached 0 if not
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * videoAttached - Type: bool. Desc: 1 if video attached 0 if not
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {aboutSectionPublishedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var aboutSectionPublished = function(params) {
    return {
        evid: 806,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} membersPageSearchParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {number} result_count_members - result count
 * @property {string} role - member role (owner, writer, member)
 * @property {string} search_term - the term the user typed
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Members page search. Evid: 813.
 * Event description: Event triggered when members page view was searched.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * result_count_members - Type: numeric. Desc: result count
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * search_term - Type: string. Desc: the term the user typed
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {membersPageSearchParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var membersPageSearch = function(params) {
    return {
        evid: 813,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} profileWidgetEditedParams
 * @property {GUID} app_id - app_id
 * @property {string} contactsFieldsChanges - null
 * @property {boolean} cover_photo_change - flag if cover photo was changed
 * @property {string} customFieldsChanged - null
 * @property {boolean} default_color_change - Flag if default color changed
 * @property {boolean} default_picture_change - flag if default picture changed
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {boolean} nameChanged - 1 if UoU changed his name, 0 didn't
 * @property {boolean} name_changed - 1 if UoU changed his name, 0 didn't
 * @property {boolean} photo_changed - 1 if UoU changed his photo, 0 didn't
 * @property {string} privacyAllMembers - list fields that privacy was changed to all members
 * @property {boolean} privacyChanged - flag if privacy setting was changed
 * @property {string} privacyOnlyMe - list fields that privacy was changed to only me
 * @property {string} role - member role (owner, writer, member)
 * @property {string} saveOrigin - null
 * @property {GUID} site_member_id - site_member_id
 * @property {string} socialFieldsChanged - list of fields changed
 * @property {string} systemFieldsChanged - null
 * @property {boolean} titleChanged - 1 if UoU changed his name, 0 didn't
 * @property {boolean} urlChanged - 1 if UoU changed url slug, 0 didn't
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Profile edited. Evid: 815.
 * Event description: Event triggered when UoU edited his Profile Widget.

 * app_id - Type: guid. Desc: app_id
 *
 * contactsFieldsChanges - Type: string.
 *
 * cover_photo_change - Type: bool. Desc: flag if cover photo was changed
 *
 * customFieldsChanged - Type: string.
 *
 * default_color_change - Type: bool. Desc: Flag if default color changed
 *
 * default_picture_change - Type: bool. Desc: flag if default picture changed
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * nameChanged - Type: bool. Desc: 1 if UoU changed his name, 0 didn't
 *
 * name_changed - Type: bool. Desc: 1 if UoU changed his name, 0 didn't
 *
 * photo_changed - Type: bool. Desc: 1 if UoU changed his photo, 0 didn't
 *
 * privacyAllMembers - Type: string. Desc: list fields that privacy was changed to all members
 *
 * privacyChanged - Type: bool. Desc: flag if privacy setting was changed
 *
 * privacyOnlyMe - Type: string. Desc: list fields that privacy was changed to only me
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * saveOrigin - Type: string.
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * socialFieldsChanged - Type: string. Desc: list of fields changed
 *
 * systemFieldsChanged - Type: string.
 *
 * titleChanged - Type: bool. Desc: 1 if UoU changed his name, 0 didn't
 *
 * urlChanged - Type: bool. Desc: 1 if UoU changed url slug, 0 didn't
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {profileWidgetEditedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var profileWidgetEdited = function(params) {
    return {
        evid: 815,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} membersPageFilterParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} sort_by - role, num of posts, etc'
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Members page filter. Evid: 816.
 * Event description: Event triggered when members page view is filtered.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * sort_by - Type: string. Desc: role, num of posts, etc'
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {membersPageFilterParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var membersPageFilter = function(params) {
    return {
        evid: 816,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} myAccountPrivacySettingsChangedParams
 * @property {string} fieldName - name o the field that privacy setting was changed
 * @property {string} fieldType - field type: standard, custom, social
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} value - value that was changed to: only_me, all_members
 * @property {GUID} visitor_id - null
 **/
/**
 * Name: My Account Privacy Settings Changed. Evid: 840.
 * Event description: Triggered when "My Account" Custom/Standard/Social field privacy changes.

 * fieldName - Type: string. Desc: name o the field that privacy setting was changed
 *
 * fieldType - Type: string. Desc: field type: standard, custom, social
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * value - Type: string. Desc: value that was changed to: only_me, all_members
 *
 * visitor_id - Type: guid.
 * @param {myAccountPrivacySettingsChangedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var myAccountPrivacySettingsChanged = function(params) {
    return {
        evid: 840,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} maMiscClickUouParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} referralInfo - identifier of a button, link
 * @property {GUID} visitor_id - null
 **/
/**
 * Name: MA Misc Click UoU. Evid: 841.
 * Event description: Buttons/links/etc clicks at random places..

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * referralInfo - Type: string. Desc: identifier of a button, link
 *
 * visitor_id - Type: guid.
 * @param {maMiscClickUouParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var maMiscClickUou = function(params) {
    return {
        evid: 841,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} membersPageSortParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} sort_by - role, num of posts, etc'
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Members page sort. Evid: 812.
 * Event description: Event triggered when members page view is sorted.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * sort_by - Type: string. Desc: role, num of posts, etc'
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {membersPageSortParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var membersPageSort = function(params) {
    return {
        evid: 812,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} membersTpaLoadedUouParams
 * @property {GUID} app_id - app_id
 * @property {GUID} currentPageId - widget guid that triggered profile widget open
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1-yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - members_page, profile_widget,
 * @property {string} page_name - followers, following
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 * @property {string} widget_id - widget_id
 * @property {string} widget_name - widget_name
 **/
/**
 * Name: members TPA loaded (UoU). Evid: 814.
 * Event description: Event triggered when a member TPA was successfully  loaded.

 * app_id - Type: guid. Desc: app_id
 *
 * currentPageId - Type: guid. Desc: widget guid that triggered profile widget open
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1-yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: members_page, profile_widget,
 *
 * page_name - Type: string. Desc: followers, following
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 *
 * widget_id - Type: string. Desc: widget_id
 *
 * widget_name - Type: string. Desc: widget_name
 * @param {membersTpaLoadedUouParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var membersTpaLoadedUou = function(params) {
    return {
        evid: 814,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} memberJoinedCommunityJoinedAfterPopUpUouParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} referralinfo - changes location
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Member joined community-> joined after pop up (UoU). Evid: 805.
 * Event description: Event triggered when member clicked on the join community button in the 'sure you want to join' popup.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * referralinfo - Type: string. Desc: changes location
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {memberJoinedCommunityJoinedAfterPopUpUouParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var memberJoinedCommunityJoinedAfterPopUpUou = function(params) {
    return {
        evid: 805,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} memberJoinedCommunityAttemptParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} referralInfo - changes location
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Member joined community-> attempt. Evid: 804.
 * Event description: Event triggered when member clicked on the join community button.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * referralInfo - Type: string. Desc: changes location
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {memberJoinedCommunityAttemptParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var memberJoinedCommunityAttempt = function(params) {
    return {
        evid: 804,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} membersAreaMenuItemsClickParams
 * @property {GUID} appId - app_id of menu item (null if page is custom)
 * @property {GUID} instance_id - null
 * @property {boolean} isOwner - flag if owner or not
 * @property {string} menuItemName - menu item name of clicked component
 * @property {string} menuLocation - location of menu: login bar/members area
 * @property {GUID} biToken - null
 * @property {string} sectionId - widget identifier - section id (null if page is custom)
 * @property {GUID} visitor_id - null
 **/
/**
 * Name: Members area menu items click. Evid: 818.
 * Event description: events for Users And UoU menu items click for members area.

 * appId - Type: guid. Desc: app_id of menu item (null if page is custom)
 *
 * instance_id - Type: guid.
 *
 * isOwner - Type: bool. Desc: flag if owner or not
 *
 * menuItemName - Type: string. Desc: menu item name of clicked component
 *
 * menuLocation - Type: string. Desc: location of menu: login bar/members area
 *
 * biToken - Type: guid.
 *
 * sectionId - Type: string. Desc: widget identifier - section id (null if page is custom)
 *
 * visitor_id - Type: guid.
 * @param {membersAreaMenuItemsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var membersAreaMenuItemsClick = function(params) {
    return {
        evid: 818,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} dummy800Params
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - null
 * @property {string} member_id - member_id
 * @property {GUID} biToken - null
 * @property {boolean} nameChanged - 1 if UoU changed his name, 0 didn't
 * @property {boolean} photo_changed - 1 if UoU changed his photo, 0 didn't
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} visitor_id - null
 **/
/**
 * Name: dummy. Evid: 800.
 * Event description: Event triggered when UoU edited his Profile Widget.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid.
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid.
 *
 * nameChanged - Type: bool. Desc: 1 if UoU changed his name, 0 didn't
 *
 * photo_changed - Type: bool. Desc: 1 if UoU changed his photo, 0 didn't
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * visitor_id - Type: guid.
 * @param {dummy800Params} params The parameters for this event.
 * @return {Object} LogObject
**/
export var dummy800 = function(params) {
    return {
        evid: 800,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} memberUpdatedPersonalDetailsParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: Member updated personal details. Evid: 808.
 * Event description: Event triggered when member updated personal details.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {memberUpdatedPersonalDetailsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var memberUpdatedPersonalDetails = function(params) {
    return {
        evid: 808,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
/**
 * @typedef {Object} allMembersPageOpenedParams
 * @property {GUID} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_social - 0 - no, 1 - yes
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {GUID} visitor_id - visitor_id
 **/
/**
 * Name: All members page opened. Evid: 809.
 * Event description: Event triggered when the Members page opened.

 * app_id - Type: guid. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_social - Type: bool. Desc: 0 - no, 1 - yes
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * visitor_id - Type: guid. Desc: visitor_id
 * @param {allMembersPageOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var allMembersPageOpened = function(params) {
    return {
        evid: 809,
        src: 69,
        endpoint: 'members-app-uou',
        params: params
    };
};
//# sourceMappingURL=index.js.map