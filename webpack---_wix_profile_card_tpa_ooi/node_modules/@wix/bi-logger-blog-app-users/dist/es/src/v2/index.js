/* tslint:disable */
/* eslint:disable */
/**
 * @typedef {Object} oneAppSharePostButtonClick1316Params
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - post page, view post etc.
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp share post button click. Evid: 1316.
 * Event description: user clicked on share button in oneapp top bar.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: post page, view post etc.
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppSharePostButtonClick1316Params} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppSharePostButtonClick1316 = function(params) {
    return {
        evid: 1316,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageCategoriesButtonInThreeDotsClickedParams
 * @property {string} button_name - button name in three dots categories menu
 * @property {string} category_id - category_id
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} translation_id - translation id
 **/
/**
 * Name: OneApp Manage Categories button in three dots clicked. Evid: 1311.
 * Event description: Button in categories three dots meniu clicked.

 * button_name - Type: string. Desc: button name in three dots categories menu
 *
 * category_id - Type: string. Desc: category_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * translation_id - Type: string. Desc: translation id
 * @param {oneAppManageCategoriesButtonInThreeDotsClickedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageCategoriesButtonInThreeDotsClicked = function(params) {
    return {
        evid: 1311,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} widgetAddClickAppBuilderParams
 * @property {string} element_type - recent post, custom feed, wix code
 * @property {GUID} id - unique widget id to connect to other events
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - Add Panel/6th button
 * @property {string} widget_id - widget_id
 **/
/**
 * Name: widget add click (app builder). Evid: 701.
 * Event description: user clicks to add widget.

 * element_type - Type: string. Desc: recent post, custom feed, wix code
 *
 * id - Type: guid. Desc: unique widget id to connect to other events
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: Add Panel/6th button
 *
 * widget_id - Type: string. Desc: widget_id
 * @param {widgetAddClickAppBuilderParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var widgetAddClickAppBuilder = function(params) {
    return {
        evid: 701,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationLearnMoreClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Learn more click. Evid: 383.
 * Event description: triggered when users click on Maybe Learn more click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationLearnMoreClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationLearnMoreClick = function(params) {
    return {
        evid: 383,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogFeedRenamedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} name - The new feed name
 * @property {string} old_name - The updated value
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: Blog Feed Renamed. Evid: 374.
 * Event description: When the user renames the Main blog feed from the BM.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * name - Type: string. Desc: The new feed name
 *
 * old_name - Type: string. Desc: The updated value
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {blogFeedRenamedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogFeedRenamed = function(params) {
    return {
        evid: 374,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppOpenedAllPostsAnalyticsParams
 * @property {string} filter_name - The analytics Period (1D, 7D, 28D, all time)
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} role - user role
 **/
/**
 * Name: OneApp Opened All Posts Analytics. Evid: 1318.
 * Event description: Whenever a user opens Post Analytics (all posts).

 * filter_name - Type: string. Desc: The analytics Period (1D, 7D, 28D, all time)
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * role - Type: string. Desc: user role
 * @param {oneAppOpenedAllPostsAnalyticsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppOpenedAllPostsAnalytics = function(params) {
    return {
        evid: 1318,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} updateBlogModalShownParams
 * @property {GUID} instance_id - null
 * @property {string} modal_name - "Upgrade to the new blog".; "Magic Migration Blog Out of date"; "Magic Migration Blog Out of date - update options"
 * @property {GUID} biToken - null
 * @property {boolean} new_blog_valid - TRUE if new Blog is installed (nice to have)
 * @property {string} origin - origin - 6th button or right after opening Editor or some other place
 **/
/**
 * Name: Magic Migration: Update blog modals (incl. success). Evid: 405.
 * Event description: Whenver the user sees the migration option - Migration message shown.

 * instance_id - Type: guid.
 *
 * modal_name - Type: string. Desc: "Upgrade to the new blog".; "Magic Migration Blog Out of date"; "Magic Migration Blog Out of date - update options"
 *
 * biToken - Type: guid.
 *
 * new_blog_valid - Type: bool. Desc: TRUE if new Blog is installed (nice to have)
 *
 * origin - Type: string. Desc: origin - 6th button or right after opening Editor or some other place
 * @param {updateBlogModalShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var updateBlogModalShown = function(params) {
    return {
        evid: 405,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppSharePostButtonTypeClickParams
 * @property {string} button_name - sends via sms, share via social, copy invite link etc..
 * @property {GUID} instance_id - instance id
 * @property {GUID} biToken - biToken
 * @property {string} origin - post page, view post etc.
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp share post button type click. Evid: 442.
 * Event description: user clicked on share button type (sends sms, share social, copy link etc..) in oneapp.

 * button_name - Type: string. Desc: sends via sms, share via social, copy invite link etc..
 *
 * instance_id - Type: guid. Desc: instance id
 *
 * biToken - Type: guid. Desc: biToken
 *
 * origin - Type: string. Desc: post page, view post etc.
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppSharePostButtonTypeClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppSharePostButtonTypeClick = function(params) {
    return {
        evid: 442,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} authorOfflineDeletedParams
 * @property {GUID} author_id - Author id which was created
 * @property {string} author_role - Currently "Offline", might be reused later
 * @property {boolean} has_picture - TRUE if a picture is assigned for created author (nice to have)
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 **/
/**
 * Name: Author (offline) deleted. Evid: 367.
 * Event description: Deleted an offline author.

 * author_id - Type: guid. Desc: Author id which was created
 *
 * author_role - Type: string. Desc: Currently "Offline", might be reused later
 *
 * has_picture - Type: bool. Desc: TRUE if a picture is assigned for created author (nice to have)
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 * @param {authorOfflineDeletedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var authorOfflineDeleted = function(params) {
    return {
        evid: 367,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postSoftDeleteParams
 * @property {GUID} instance_id - null
 * @property {string} language - for multilingual
 * @property {string} language_id - the post stable if of the translated post
 * @property {GUID} biToken - null
 * @property {string} origin - post page, post editor, drafts
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post stable id
 **/
/**
 * Name: Post soft delete. Evid: 333.
 * Event description: When a post is moved to trash.

 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: for multilingual
 *
 * language_id - Type: string. Desc: the post stable if of the translated post
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: post page, post editor, drafts
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 * @param {postSoftDeleteParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postSoftDelete = function(params) {
    return {
        evid: 333,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oldBlogGfppShownParams
 * @property {GUID} instance_id - null
 * @property {boolean} is_mobile - TRUE if it's mobile editor
 * @property {GUID} biToken - null
 * @property {string} widget_app - the name of widget/app - Blog Feed Single Post Page Featured Post Posts Lists Custom Feed Ticker Posts Gallery Tag Cloud Categories Archive
 **/
/**
 * Name: Magic Migration: Old Blog GFPP shown. Evid: 403.
 * Event description: Shown of old blog gfpp.

 * instance_id - Type: guid.
 *
 * is_mobile - Type: bool. Desc: TRUE if it's mobile editor
 *
 * biToken - Type: guid.
 *
 * widget_app - Type: string. Desc: the name of widget/app - Blog Feed Single Post Page Featured Post Posts Lists Custom Feed Ticker Posts Gallery Tag Cloud Categories Archive
 * @param {oldBlogGfppShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oldBlogGfppShown = function(params) {
    return {
        evid: 403,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} addBlogAppTypeOfBlogModalSelectionParams
 * @property {string} action - close or next
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} option - values: wix blog or members area
 **/
/**
 * Name: Add blog app - members area install modal selection. Evid: 330.
 * Event description: Whenever the user adds the blog app to a site, the type of modal is displayed. This event records the user selection on the type of blog modal..

 * action - Type: string. Desc: close or next
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * option - Type: string. Desc: values: wix blog or members area
 * @param {addBlogAppTypeOfBlogModalSelectionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var addBlogAppTypeOfBlogModalSelection = function(params) {
    return {
        evid: 330,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} editorSettingsPostPageBlogFeedShortcutsParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - blog feed settings / post feed settings
 * @property {string} role - role
 * @property {string} tab_name - tab name inside post settings
 **/
/**
 * Name: editor - Settings Post Page / Blog Feed Shortcuts. Evid: 349.
 * Event description: user clicks on Post Page tab inside the blog feed settings.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: blog feed settings / post feed settings
 *
 * role - Type: string. Desc: role
 *
 * tab_name - Type: string. Desc: tab name inside post settings
 * @param {editorSettingsPostPageBlogFeedShortcutsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var editorSettingsPostPageBlogFeedShortcuts = function(params) {
    return {
        evid: 349,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppHappyMomentBannersParams
 * @property {string} action - closed, CTA - add banner, CTA - share
 * @property {string} banner_name - banner name - add banner to mobile, share your blog
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp Happy moment banners. Evid: 1315.
 * Event description: User did an action with a banner in Blog Manage.

 * action - Type: string. Desc: closed, CTA - add banner, CTA - share
 *
 * banner_name - Type: string. Desc: banner name - add banner to mobile, share your blog
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppHappyMomentBannersParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppHappyMomentBanners = function(params) {
    return {
        evid: 1315,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} shareAfterPublishModalActionParams
 * @property {string} action - action user chose in modal (Not right now, close X, Facebook, Preview, Twitter, copy url, etc)
 * @property {boolean} dont_show_again - user marked don't show again
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} post_id - post_id
 * @property {string} role - Role of the user - writer or admin
 **/
/**
 * Name: Share after publish modal action. Evid: 316.
 * Event description: User chose action in Share after publish modal.

 * action - Type: string. Desc: action user chose in modal (Not right now, close X, Facebook, Preview, Twitter, copy url, etc)
 *
 * dont_show_again - Type: bool. Desc: user marked don't show again
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: Role of the user - writer or admin
 * @param {shareAfterPublishModalActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var shareAfterPublishModalAction = function(params) {
    return {
        evid: 316,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} updateBlogModalActionParams
 * @property {string} action - action - close, learn more, update now
 * @property {string} choice - Content update/Content and design update
 * @property {string} choise - Content update/Content and design update - if user has both blogs (NOT USED)
 * @property {GUID} instance_id - null
 * @property {string} modal_name - "Upgrade to the new blog".; "Magic Migration Blog Out of date"; "Magic Migration Blog Out of date - update options"
 * @property {GUID} biToken - null
 * @property {boolean} new_blog_valid - if the site has new blog installed
 * @property {string} origin - origin (nice to have if we get any)
 **/
/**
 * Name: Magic Migration: Update blog action. Evid: 406.
 * Event description: Action on migration message (shown - evid 405).

 * action - Type: string. Desc: action - close, learn more, update now
 *
 * choice - Type: string. Desc: Content update/Content and design update
 *
 * choise - Type: string. Desc: Content update/Content and design update - if user has both blogs (NOT USED)
 *
 * instance_id - Type: guid.
 *
 * modal_name - Type: string. Desc: "Upgrade to the new blog".; "Magic Migration Blog Out of date"; "Magic Migration Blog Out of date - update options"
 *
 * biToken - Type: guid.
 *
 * new_blog_valid - Type: bool. Desc: if the site has new blog installed
 *
 * origin - Type: string. Desc: origin (nice to have if we get any)
 * @param {updateBlogModalActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var updateBlogModalAction = function(params) {
    return {
        evid: 406,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} magicMigrationStartParams
 * @property {string} error_message - null
 * @property {GUID} instance_id - null
 * @property {string} migration_step - migration step error occuried
 * @property {GUID} biToken - null
 **/
/**
 * Name: Magic Migration: Client Migration Failed after posts copied (error message). Evid: 409.
 * Event description: Magic Migration Failed after copied posts, error message.

 * error_message - Type: string.
 *
 * instance_id - Type: guid.
 *
 * migration_step - Type: string. Desc: migration step error occuried
 *
 * biToken - Type: guid.
 * @param {magicMigrationStartParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var magicMigrationStart = function(params) {
    return {
        evid: 409,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} bm3DotsClick334Params
 * @property {GUID} instance_id - null
 * @property {string} language - language
 * @property {GUID} biToken - null
 * @property {string} role - role
 * @property {string} source - post BO section name: published, overview
 * @property {string} tabName - tab name
 * @property {string} translation_id - translation id
 **/
/**
 * Name: Post List BM 3 dots click. Evid: 334.
 * Event description: Triggered when the user clicks on the 3 dots menu, on the post list within the Business Manager (BM).

 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid.
 *
 * role - Type: string. Desc: role
 *
 * source - Type: string. Desc: post BO section name: published, overview
 *
 * tabName - Type: string. Desc: tab name
 *
 * translation_id - Type: string. Desc: translation id
 * @param {bm3DotsClick334Params} params The parameters for this event.
 * @return {Object} LogObject
**/
export var bm3DotsClick334 = function(params) {
    return {
        evid: 334,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} bulkActionsOptionChosenParams
 * @property {string} action - Restore, Delete, Add Category
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {number} postsCount - Number of posts selected
 * @property {string} tabName - Posts or Drafts
 **/
/**
 * Name: BO: Bulk actions - option chosen. Evid: 346.
 * Event description: User did bulk action in Blog BO.

 * action - Type: string. Desc: Restore, Delete, Add Category
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * postsCount - Type: numeric. Desc: Number of posts selected
 *
 * tabName - Type: string. Desc: Posts or Drafts
 * @param {bulkActionsOptionChosenParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var bulkActionsOptionChosen = function(params) {
    return {
        evid: 346,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postHistoryRevisionRestoredSuccessfullyParams
 * @property {GUID} instance_id - instance
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - examples: related_posts, paid_plans etc..
 * @property {string} post_id - post_id if applicable
 * @property {string} original_revision_id - post original revision id
 * @property {string} revisionId - post revision id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} role - role
 * @property {string} translation_id - translation id
 **/
/**
 * Name: Post history - revision restored successfully. Evid: 436.
 * Event description: When the revision was successfully restored.

 * instance_id - Type: guid. Desc: instance
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - examples: related_posts, paid_plans etc..
 *
 * post_id - Type: string. Desc: post_id if applicable
 *
 * original_revision_id - Type: string. Desc: post original revision id
 *
 * revisionId - Type: string. Desc: post revision id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * role - Type: string. Desc: role
 *
 * translation_id - Type: string. Desc: translation id
 * @param {postHistoryRevisionRestoredSuccessfullyParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postHistoryRevisionRestoredSuccessfully = function(params) {
    return {
        evid: 436,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationMigrationFailedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} migration_status - First time, In progress, Done, Failed (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Migration failed. Evid: 396.
 * Event description: triggered when Migration fails.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * migration_status - Type: string. Desc: First time, In progress, Done, Failed (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationMigrationFailedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationMigrationFailed = function(params) {
    return {
        evid: 396,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} adiBlogSettingsOpenedParams
 * @property {boolean} adi_blog_settings_opened - 1 - ADI Blog settings opened
 * @property {GUID} instance_id - instance_id
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} role - Role of user - writer or admin
 **/
/**
 * Name: ADI Blog settings opened. Evid: 326.
 * Event description: User opened blog settings in ADI.

 * adi_blog_settings_opened - Type: bool. Desc: 1 - ADI Blog settings opened
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * role - Type: string. Desc: Role of user - writer or admin
 * @param {adiBlogSettingsOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var adiBlogSettingsOpened = function(params) {
    return {
        evid: 326,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppOpenedSinglePostAnalyticsClickParams
 * @property {string} filter_name - The analytics Period (1D, 7D, 28D, all time)
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - Most Recent Post, Most Viewed Posts, All Posts
 * @property {string} post_id - post id
 **/
/**
 * Name: OneApp Opened single post analytics click. Evid: 1317.
 * Event description: whenever a user opens a post from the analytics screen.

 * filter_name - Type: string. Desc: The analytics Period (1D, 7D, 28D, all time)
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: Most Recent Post, Most Viewed Posts, All Posts
 *
 * post_id - Type: string. Desc: post id
 * @param {oneAppOpenedSinglePostAnalyticsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppOpenedSinglePostAnalyticsClick = function(params) {
    return {
        evid: 1317,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppWidgetClickParams
 * @property {string} click_name - the label on the object clicked
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} post_id - post id - null if the click was not on a post
 * @property {GUID} post_stable_id - post stable id - null if the click was not on a post
 * @property {string} role - member role (owner, writer, member)
 * @property {string} widget_name - widget name
 **/
/**
 * Name: OneApp - Widget click. Evid: 1340.
 * Event description: Tracks what the user clicked on any widget on the app.

 * click_name - Type: string. Desc: the label on the object clicked
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * post_id - Type: string. Desc: post id - null if the click was not on a post
 *
 * post_stable_id - Type: guid. Desc: post stable id - null if the click was not on a post
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * widget_name - Type: string. Desc: widget name
 * @param {oneAppWidgetClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppWidgetClick = function(params) {
    return {
        evid: 1340,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationUpdateUrlsModalOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} migration_status - First time, In progress, Done (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Update URLs modal opened. Evid: 391.
 * Event description: triggered when Migration Update URLs modal actually open.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * migration_status - Type: string. Desc: First time, In progress, Done (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationUpdateUrlsModalOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationUpdateUrlsModalOpened = function(params) {
    return {
        evid: 391,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationPostCopyingStatusParams
 * @property {string} error_message - error message if unsuscessfull
 * @property {GUID} instance_id - null
 * @property {boolean} migration_succeed - 1 - yes / 0 - no
 * @property {GUID} bi_token - msid
 * @property {GUID} biToken - null
 * @property {number} num_posts_total - the number of total posts to copy
 * @property {number} num_posts_unsucc - the number of posts that weren't copied
 * @property {string} posts_with_too_large_content -
 * @property {number} too_large_post_count - null
 **/
/**
 * Name: Migration -> Post Copying Status. Evid: 401.
 * Event description: Triggered when the migration completes both successfully or failed..

 * error_message - Type: string. Desc: error message if unsuscessfull
 *
 * instance_id - Type: guid.
 *
 * migration_succeed - Type: bool. Desc: 1 - yes / 0 - no
 *
 * bi_token - Type: guid. Desc: msid
 *
 * biToken - Type: guid.
 *
 * num_posts_total - Type: numeric. Desc: the number of total posts to copy
 *
 * num_posts_unsucc - Type: numeric. Desc: the number of posts that weren't copied
 *
 * posts_with_too_large_content - Type: string.
 *
 * too_large_post_count - Type: numeric.
 * @param {migrationPostCopyingStatusParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationPostCopyingStatus = function(params) {
    return {
        evid: 401,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesSelectTemplateFromListClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} templateCategory - template category
 * @property {string} template_id - the template id clicked
 * @property {string} template_name - template name
 **/
/**
 * Name: Post templates: select template from list click. Evid: 424.
 * Event description: triggered when click on a template from the list.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * templateCategory - Type: string. Desc: template category
 *
 * template_id - Type: string. Desc: the template id clicked
 *
 * template_name - Type: string. Desc: template name
 * @param {postTemplatesSelectTemplateFromListClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesSelectTemplateFromListClick = function(params) {
    return {
        evid: 424,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationImportPageFirstStepOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} migration_status - First time, In progress, Done (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Import page first step opened. Evid: 384.
 * Event description: triggered when Migration Import page first step actually open.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * migration_status - Type: string. Desc: First time, In progress, Done (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationImportPageFirstStepOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationImportPageFirstStepOpened = function(params) {
    return {
        evid: 384,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} customizeChooseCategoriesClickWixReadsParams
 * @property {string} click_name - choose now, customise
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: Customize/choose categories click (Wix reads). Evid: 1329.
 * Event description: When the user clicks on the Customise or Choose now links on the main screen on wix reads, that link will take the user to the "Edit Categories" screen.

 * click_name - Type: string. Desc: choose now, customise
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {customizeChooseCategoriesClickWixReadsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var customizeChooseCategoriesClickWixReads = function(params) {
    return {
        evid: 1329,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postUnscheduledParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} post_id - post_id
 * @property {string} role - role
 **/
/**
 * Name: post unscheduled. Evid: 337.
 * Event description: When the user unschedules a post.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: role
 * @param {postUnscheduledParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postUnscheduled = function(params) {
    return {
        evid: 337,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} errorMessageShowParams
 * @property {number} error_code - http code
 * @property {string} error_message - error message
 * @property {string} error_type - Error type
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} type - The way it was displayed: Tooltip, Modal, toast etc..
 **/
/**
 * Name: error message show. Evid: 372.
 * Event description: whenever an error message is shown (tooltip, modal).

 * error_code - Type: numeric. Desc: http code
 *
 * error_message - Type: string. Desc: error message
 *
 * error_type - Type: string. Desc: Error type
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * type - Type: string. Desc: The way it was displayed: Tooltip, Modal, toast etc..
 * @param {errorMessageShowParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var errorMessageShow = function(params) {
    return {
        evid: 372,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postEditorAddRemoveMediaElementParams
 * @property {string} action_type - Add or Remove
 * @property {string} adding_method - Click or drag n drop
 * @property {GUID} instance_id - instance_id
 * @property {string} media_content - the added media content if applicable (links, file name, html code)
 * @property {string} mediaOrigin - upload, embed, giphy  etc..
 * @property {string} media_type - image, video etc..
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} origin - sidebar or composer
 * @property {string} role - Role of the user - writer or admin
 * @property {string} tab_name - image, video, gallery, gif, html code (maybe not necessary)
 **/
/**
 * Name: Post Editor - Add/Remove Media Element. Evid: 379.
 * Event description: When the user clicks the "+" in the post editor (sidebar or text area).

 * action_type - Type: string. Desc: Add or Remove
 *
 * adding_method - Type: string. Desc: Click or drag n drop
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * media_content - Type: string. Desc: the added media content if applicable (links, file name, html code)
 *
 * mediaOrigin - Type: string. Desc: upload, embed, giphy  etc..
 *
 * media_type - Type: string. Desc: image, video etc..
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: sidebar or composer
 *
 * role - Type: string. Desc: Role of the user - writer or admin
 *
 * tab_name - Type: string. Desc: image, video, gallery, gif, html code (maybe not necessary)
 * @param {postEditorAddRemoveMediaElementParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postEditorAddRemoveMediaElement = function(params) {
    return {
        evid: 379,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageSearchClickedParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp Manage search clicked. Evid: 1307.
 * Event description: After clicking on search in OneApp manage.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppManageSearchClickedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageSearchClicked = function(params) {
    return {
        evid: 1307,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppWixReadsScreenOpenParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - holds the child app (forum/blog) instance_id. or the members instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 * @property {string} screenName - home, explore
 * @property {GUID} site_member_id - site member id
 * @property {GUID} visitor_id - visitor id
 **/
/**
 * Name: OneApp - wix reads - screen open. Evid: 1319.
 * Event description: triggered when user sees the home or the explore tabs in wix reads.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: holds the child app (forum/blog) instance_id. or the members instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * screenName - Type: string. Desc: home, explore
 *
 * site_member_id - Type: guid. Desc: site member id
 *
 * visitor_id - Type: guid. Desc: visitor id
 * @param {oneAppWixReadsScreenOpenParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppWixReadsScreenOpen = function(params) {
    return {
        evid: 1319,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} helperActionParams
 * @property {string} action - action in helper (close, learn more)
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} name - name of helper
 **/
/**
 * Name: helper_action. Evid: 364.
 * Event description: Action on helper_showed (for custom feed confusion currently, can be reused later for others if needed) - close or learn more.

 * action - Type: string. Desc: action in helper (close, learn more)
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * name - Type: string. Desc: name of helper
 * @param {helperActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var helperAction = function(params) {
    return {
        evid: 364,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppWixReadsPostPublishedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} category_ids - category_ids. JSON array string
 * @property {number} character_count - The number of characters on the post
 * @property {string} galleries - will sent as array - [{ layout: 'masonry', count: 5}, { layout: 'whatever', count: 10 }]
 * @property {number} giphy_count - count of used  giphy gifs
 * @property {number} image_count - image_count in the post
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_edited - 0 - new post / 1 - edit (to know if its posted for first time)
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_msid - The msid where the post was published originally
 * @property {string} original_post_id - The original post id
 * @property {string} paid_plan_id - Array of paid plan ids
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site member id
 * @property {boolean} used_html - 0 - didnt used html component / 1 - used html component
 * @property {number} video_count - video_count in the post
 **/
/**
 * Name: OneApp - Wix Reads Post published. Evid: 1322.
 * Event description: triggered when post published in oneapp Wix Reads.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * category_ids - Type: string. Desc: category_ids. JSON array string
 *
 * character_count - Type: numeric. Desc: The number of characters on the post
 *
 * galleries - Type: string. Desc: will sent as array - [{ layout: 'masonry', count: 5}, { layout: 'whatever', count: 10 }]
 *
 * giphy_count - Type: numeric. Desc: count of used  giphy gifs
 *
 * image_count - Type: numeric. Desc: image_count in the post
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_edited - Type: bool. Desc: 0 - new post / 1 - edit (to know if its posted for first time)
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_msid - Type: guid. Desc: The msid where the post was published originally
 *
 * original_post_id - Type: string. Desc: The original post id
 *
 * paid_plan_id - Type: string. Desc: Array of paid plan ids
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site member id
 *
 * used_html - Type: bool. Desc: 0 - didnt used html component / 1 - used html component
 *
 * video_count - Type: numeric. Desc: video_count in the post
 * @param {oneAppWixReadsPostPublishedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppWixReadsPostPublished = function(params) {
    return {
        evid: 1322,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesDropDownClickOnCategoriesParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {GUID} site_member_id - site_member_id
 **/
/**
 * Name: Post Templates: Drop down click on categories. Evid: 431.
 * Event description: Triggered when the user clicks on drop down 'All Categories' in PostTemplates.

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * site_member_id - Type: guid. Desc: site_member_id
 * @param {postTemplatesDropDownClickOnCategoriesParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesDropDownClickOnCategories = function(params) {
    return {
        evid: 431,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesDropDownClickOnPublishPostParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 **/
/**
 * Name: Post Templates: Drop down click on 'Publish post'. Evid: 428.
 * Event description: Triggered when the user clicks on drop down in BM 'Publish post'.

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 * @param {postTemplatesDropDownClickOnPublishPostParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesDropDownClickOnPublishPost = function(params) {
    return {
        evid: 428,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppCategoryPage3DotsClickParams
 * @property {string} category_id - category_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - category page
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp - Category page 3 dots click. Evid: 1330.
 * Event description: When the user clicks on the 3 dots button on the category page in OneApp.

 * category_id - Type: string. Desc: category_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: category page
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppCategoryPage3DotsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppCategoryPage3DotsClick = function(params) {
    return {
        evid: 1330,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} userRedirectClickGenericEventParams
 * @property {string} going_to - Redirection to
 * @property {string} going_from - Redirection from
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} name - Redirection name
 * @property {string} origin - origin
 * @property {string} role - role
 **/
/**
 * Name: User redirect click (generic event). Evid: 427.
 * Event description: Generic redirect event, where user clicks on one place (in Editor, BM, etc) and gets directed to another place (for example to increase a discoverability of some settings).

 * going_to - Type: string. Desc: Redirection to
 *
 * going_from - Type: string. Desc: Redirection from
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * name - Type: string. Desc: Redirection name
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 * @param {userRedirectClickGenericEventParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var userRedirectClickGenericEvent = function(params) {
    return {
        evid: 427,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} shareAfterPublishModalShownParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} post_id - post_id
 * @property {string} role - Role of the user - writer or admin
 **/
/**
 * Name: Share after publish modal shown. Evid: 315.
 * Event description: Share after publish modal shown for user.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: Role of the user - writer or admin
 * @param {shareAfterPublishModalShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var shareAfterPublishModalShown = function(params) {
    return {
        evid: 315,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} newCategoryAddedToBlogParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {number} category_count - current amount of categories i the blog
 * @property {string} category_id - category_id
 * @property {string} community_id - community_id (instance of members app)
 * @property {boolean} image - image for category was added (OneApp only)
 * @property {GUID} instance_id - instance_id
 * @property {string} language - The category language
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} label - the category name
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor, avdanced_post_settings
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 * @property {boolean} seo_description - category description in seo settings was added (OneApp only)
 * @property {boolean} seo_name - category name was under seo settings (OneApp only)
 * @property {string} translation_id - the Id of category that was translated
 **/
/**
 * Name: new category added to blog. Evid: 311.
 * Event description: triggered when a new category added in the app settings.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * category_count - Type: numeric. Desc: current amount of categories i the blog
 *
 * category_id - Type: string. Desc: category_id
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * image - Type: bool. Desc: image for category was added (OneApp only)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: The category language
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * label - Type: string. Desc: the category name
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor, avdanced_post_settings
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * seo_description - Type: bool. Desc: category description in seo settings was added (OneApp only)
 *
 * seo_name - Type: bool. Desc: category name was under seo settings (OneApp only)
 *
 * translation_id - Type: string. Desc: the Id of category that was translated
 * @param {newCategoryAddedToBlogParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var newCategoryAddedToBlog = function(params) {
    return {
        evid: 311,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postSettingsChangesSidebarParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_published - Is post published (1-published)
 * @property {string} language - the post language
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} property - The changed property (excerpt, author etc..)
 * @property {string} property_value - The value of the changed property
 * @property {string} role - Role of user - writer or admin
 * @property {string} tab_name - SEO, Settings, Categories
 * @property {string} translation_id - translation id
 **/
/**
 * Name: Post settings changes - sidebar. Evid: 345.
 * Event description: This event tracks all post settings changes made by the user. For each property changed one event is emitted..

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_published - Type: bool. Desc: Is post published (1-published)
 *
 * language - Type: string. Desc: the post language
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * property - Type: string. Desc: The changed property (excerpt, author etc..)
 *
 * property_value - Type: string. Desc: The value of the changed property
 *
 * role - Type: string. Desc: Role of user - writer or admin
 *
 * tab_name - Type: string. Desc: SEO, Settings, Categories
 *
 * translation_id - Type: string. Desc: translation id
 * @param {postSettingsChangesSidebarParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postSettingsChangesSidebar = function(params) {
    return {
        evid: 345,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} advancedPostSettingsTabOpenParams
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} platform - Where event took place - live site or business manager
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post_stable_id
 * @property {string} role - Role of the user - writer or admin
 * @property {string} tab_name - Which tab was opened in post settings
 **/
/**
 * Name: Advanced post settings tab open. Evid: 324.
 * Event description: Left sidebar tab opened in post editor.

 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * platform - Type: string. Desc: Where event took place - live site or business manager
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post_stable_id
 *
 * role - Type: string. Desc: Role of the user - writer or admin
 *
 * tab_name - Type: string. Desc: Which tab was opened in post settings
 * @param {advancedPostSettingsTabOpenParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var advancedPostSettingsTabOpen = function(params) {
    return {
        evid: 324,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postPageWidthOfPostChangedParams
 * @property {string} buildertype - In which editor changed was made: mobile, desktop
 * @property {string} eventmeta - eventmeta
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - editor
 * @property {string} referral_info - not working: referral_info
 * @property {string} role - role
 * @property {number} width - width of post after change (not very trustful, as there are some mismatches with enabled full width)
 **/
/**
 * Name: post page - width of post changed. Evid: 309.
 * Event description: Width of post changed in post page
width field itself is not very trustful, as it's calculated the other way around if "full width" is enabled and we can't know if it's enabled.

 * buildertype - Type: string. Desc: In which editor changed was made: mobile, desktop
 *
 * eventmeta - Type: string. Desc: eventmeta
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: editor
 *
 * referral_info - Type: string. Desc: not working: referral_info
 *
 * role - Type: string. Desc: role
 *
 * width - Type: numeric. Desc: width of post after change (not very trustful, as there are some mismatches with enabled full width)
 * @param {postPageWidthOfPostChangedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postPageWidthOfPostChanged = function(params) {
    return {
        evid: 309,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationGetStartedClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Get started click. Evid: 381.
 * Event description: triggered when users click on get started.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationGetStartedClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationGetStartedClick = function(params) {
    return {
        evid: 381,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postHistoryPostHistoryScreenClicksParams
 * @property {string} click_name - null
 * @property {GUID} instance_id - instance
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - examples: related_posts, paid_plans etc..
 * @property {string} post_id - post_id if applicable
 * @property {string} revisionId - revision id
 * @property {GUID} post_stable_id - null
 * @property {number} revision_count - the number of revisions displayed
 * @property {string} role - role
 * @property {string} translation_id - translation id
 **/
/**
 * Name: Post history - post history screen clicks. Evid: 435.


 * click_name - Type: string.
 *
 * instance_id - Type: guid. Desc: instance
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - examples: related_posts, paid_plans etc..
 *
 * post_id - Type: string. Desc: post_id if applicable
 *
 * revisionId - Type: string. Desc: revision id
 *
 * post_stable_id - Type: guid.
 *
 * revision_count - Type: numeric. Desc: the number of revisions displayed
 *
 * role - Type: string. Desc: role
 *
 * translation_id - Type: string. Desc: translation id
 * @param {postHistoryPostHistoryScreenClicksParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postHistoryPostHistoryScreenClicks = function(params) {
    return {
        evid: 435,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppGenericButtonClickParams
 * @property {string} button_name - the button name
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - post page
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp generic button click. Evid: 1326.
 * Event description: the user clicked on a button.

 * button_name - Type: string. Desc: the button name
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: post page
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppGenericButtonClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppGenericButtonClick = function(params) {
    return {
        evid: 1326,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} imageSettingsPanelInPostEditorOpenedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 **/
/**
 * Name: image settings panel in post editor opened. Evid: 362.
 * Event description: image settings panel in post editor opened.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 * @param {imageSettingsPanelInPostEditorOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var imageSettingsPanelInPostEditorOpened = function(params) {
    return {
        evid: 362,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppSharePostCopyUrlClickParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - msid
 * @property {string} origin - after publish
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp share post (copy url) click. Evid: 1314.
 * Event description: user copied url to clipboard (clicked share post).

 * instance_id - Type: guid.
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: after publish
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppSharePostCopyUrlClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppSharePostCopyUrlClick = function(params) {
    return {
        evid: 1314,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oldBlogGfppClickParams
 * @property {GUID} instance_id - null
 * @property {boolean} is_mobile - TRUE if it's mobile editor
 * @property {GUID} biToken - null
 * @property {string} name - gfpp name - Update, Manage Blog, Help
 * @property {string} widget_app - the name of widget/app - Blog Feed Single Post Page Featured Post Posts Lists Custom Feed Ticker Posts Gallery Tag Cloud Categories Archive
 **/
/**
 * Name: Magic Migration: Old Blog GFPP click. Evid: 404.
 * Event description: Click on old blog gfpp.

 * instance_id - Type: guid.
 *
 * is_mobile - Type: bool. Desc: TRUE if it's mobile editor
 *
 * biToken - Type: guid.
 *
 * name - Type: string. Desc: gfpp name - Update, Manage Blog, Help
 *
 * widget_app - Type: string. Desc: the name of widget/app - Blog Feed Single Post Page Featured Post Posts Lists Custom Feed Ticker Posts Gallery Tag Cloud Categories Archive
 * @param {oldBlogGfppClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oldBlogGfppClick = function(params) {
    return {
        evid: 404,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postHistoryViewPostHistoryClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} translation_id - translation id
 **/
/**
 * Name: Post history - view post history click. Evid: 433.
 * Event description: triggered when click on view post history CTA.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * translation_id - Type: string. Desc: translation id
 * @param {postHistoryViewPostHistoryClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postHistoryViewPostHistoryClick = function(params) {
    return {
        evid: 433,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} draftSavedParams
 * @property {number} character_count - Character count in post
 * @property {GUID} instance_id - null
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - null
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} post_title - post title
 * @property {string} role - member role (owner, writer, member)
 * @property {string} translation_id - the post_stable_id of the post that was translated
 **/
/**
 * Name: Draft saved (Web, BO). Evid: 313.
 * Event description: triggered when a post draft is saved each time (Web Only).

 * character_count - Type: numeric. Desc: Character count in post
 *
 * instance_id - Type: guid.
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * post_title - Type: string. Desc: post title
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * translation_id - Type: string. Desc: the post_stable_id of the post that was translated
 * @param {draftSavedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var draftSaved = function(params) {
    return {
        evid: 313,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesFilterTemplateByCategoryParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} templateCategory - template category
 **/
/**
 * Name: Post templates: Filter template by category. Evid: 425.
 * Event description: triggered when click on a template category from the drop down list.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * templateCategory - Type: string. Desc: template category
 * @param {postTemplatesFilterTemplateByCategoryParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesFilterTemplateByCategory = function(params) {
    return {
        evid: 425,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogSettingsEditSeoBlogTagsClickParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} referrer - referrer
 * @property {string} role - role
 **/
/**
 * Name: Blog settings - Edit SEO Blog Tags click  (to be deleted). Evid: 371.
 * Event description: triggered when the user clicks on the edit button on the Blog settings screen, under the SEO settings section..

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * referrer - Type: string. Desc: referrer
 *
 * role - Type: string. Desc: role
 * @param {blogSettingsEditSeoBlogTagsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogSettingsEditSeoBlogTagsClick = function(params) {
    return {
        evid: 371,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesWriteNewPostFromTemplateClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 **/
/**
 * Name: Post templates: write new post from template click. Evid: 423.
 * Event description: triggered when click on write new post from template.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 * @param {postTemplatesWriteNewPostFromTemplateClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesWriteNewPostFromTemplateClick = function(params) {
    return {
        evid: 423,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogLoadedInEditorParams
 * @property {string} blog_view - Blog Feed or Post Page
 * @property {string} editor_view_mode - Computer/Mobile
 * @property {GUID} instance_id - null
 * @property {boolean} isPreview - Is it in Preview mode (if not, it's Editor)
 * @property {GUID} biToken - null
 * @property {string} role - role
 **/
/**
 * Name: Blog loaded in Editor. Evid: 399.
 * Event description: Once blog app loaded in Editor, used for AB test exposure. NOTE: When the Page post is selected and whenever the user switches the view, the event gets triggered 2 times one with Blog feed and another with Post view..

 * blog_view - Type: string. Desc: Blog Feed or Post Page
 *
 * editor_view_mode - Type: string. Desc: Computer/Mobile
 *
 * instance_id - Type: guid.
 *
 * isPreview - Type: bool. Desc: Is it in Preview mode (if not, it's Editor)
 *
 * biToken - Type: guid.
 *
 * role - Type: string. Desc: role
 * @param {blogLoadedInEditorParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogLoadedInEditor = function(params) {
    return {
        evid: 399,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postPagePostPageOpenedParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - blog_feed, page_preview
 * @property {string} referrer - The place from which this was opened
 * @property {string} role - role
 **/
/**
 * Name: Editor - post page opened. Evid: 350.
 * Event description: Post page opened in editor.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: blog_feed, page_preview
 *
 * referrer - Type: string. Desc: The place from which this was opened
 *
 * role - Type: string. Desc: role
 * @param {postPagePostPageOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postPagePostPageOpened = function(params) {
    return {
        evid: 350,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageCategoriesEditCategoryOpenedParams
 * @property {string} category_id - category_id
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} translation_id - translation id
 **/
/**
 * Name: OneApp Manage Categories edit category opened. Evid: 1313.
 * Event description: Clicked on add new category button in OneApp.

 * category_id - Type: string. Desc: category_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * translation_id - Type: string. Desc: translation id
 * @param {oneAppManageCategoriesEditCategoryOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageCategoriesEditCategoryOpened = function(params) {
    return {
        evid: 1313,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blog6thButtonWasOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first_time_view - 1 - onboarding view 0 -blog manager
 * @property {GUID} biToken - msid
 * @property {string} origin - 6th button or Add panel
 **/
/**
 * Name: blog 6th button - was opened. Evid: 320.
 * Event description: triggered when 6th button content is opened in the 6th button or the Add panel in the editor.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first_time_view - Type: bool. Desc: 1 - onboarding view 0 -blog manager
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: 6th button or Add panel
 * @param {blog6thButtonWasOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blog6thButtonWasOpened = function(params) {
    return {
        evid: 320,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppEditCategoryParams
 * @property {string} category_description - category description
 * @property {string} category_id - category id
 * @property {string} category_image - category image
 * @property {string} category_name - category label
 * @property {string} categoryTitle - category title
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - from where did the user get to this screen
 * @property {string} role - member role (owner, writer, member)
 * @property {string} translation_id - translation_id
 **/
/**
 * Name: OneApp - Edit Category. Evid: 1333.
 * Event description: User edited a category.

 * category_description - Type: string. Desc: category description
 *
 * category_id - Type: string. Desc: category id
 *
 * category_image - Type: string. Desc: category image
 *
 * category_name - Type: string. Desc: category label
 *
 * categoryTitle - Type: string. Desc: category title
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: from where did the user get to this screen
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * translation_id - Type: string. Desc: translation_id
 * @param {oneAppEditCategoryParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppEditCategory = function(params) {
    return {
        evid: 1333,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} editorSettingsOpenedParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - post_page, blog_feed
 * @property {string} referrer - from which place it was opened
 * @property {string} role - role
 * @property {string} view_mode - Desktop , Mobile. NOTE: Any Null values are desktop
 **/
/**
 * Name: editor settings opened. Evid: 351.
 * Event description: Settings opened.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: post_page, blog_feed
 *
 * referrer - Type: string. Desc: from which place it was opened
 *
 * role - Type: string. Desc: role
 *
 * view_mode - Type: string. Desc: Desktop , Mobile. NOTE: Any Null values are desktop
 * @param {editorSettingsOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var editorSettingsOpened = function(params) {
    return {
        evid: 351,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} bm3DotsClick341Params
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} source - post BO section name: published, overview
 **/
/**
 * Name: BM 3 dots / More Actions click. Evid: 341.
 * Event description: Triggered when the user clicks on the 3 dots menu.

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * source - Type: string. Desc: post BO section name: published, overview
 * @param {bm3DotsClick341Params} params The parameters for this event.
 * @return {Object} LogObject
**/
export var bm3DotsClick341 = function(params) {
    return {
        evid: 341,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} addBlogAppDisplayTypeOfBlogModalParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 **/
/**
 * Name: Add blog app - show members area modal (with options to install). Evid: 329.
 * Event description: Whenever the user adds the blog app to a site. This event records if the type of blog modal was displayed..

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 * @param {addBlogAppDisplayTypeOfBlogModalParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var addBlogAppDisplayTypeOfBlogModal = function(params) {
    return {
        evid: 329,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} editorSettingsDesignTabParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - msid
 * @property {string} origin - Post Page Settings, app settings (feed)
 * @property {string} property - The property changed e.g. playback speed,
 * @property {string} property_value - the setting value. eg. True,
 * @property {string} role - role
 * @property {string} section - The section where the changes occurred, i.e. Blog Menu, Posts, Buttons
 * @property {boolean} toggle - Deprecate
 * @property {string} view_mode - desktop, mobile. NOTE: any Null values belong to desktop
 **/
/**
 * Name: editor - settings design tab. Evid: 356.
 * Event description: Actions on tab inside settings.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Post Page Settings, app settings (feed)
 *
 * property - Type: string. Desc: The property changed e.g. playback speed,
 *
 * property_value - Type: string. Desc: the setting value. eg. True,
 *
 * role - Type: string. Desc: role
 *
 * section - Type: string. Desc: The section where the changes occurred, i.e. Blog Menu, Posts, Buttons
 *
 * toggle - Type: bool. Desc: Deprecate
 *
 * view_mode - Type: string. Desc: desktop, mobile. NOTE: any Null values belong to desktop
 * @param {editorSettingsDesignTabParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var editorSettingsDesignTab = function(params) {
    return {
        evid: 356,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppPostPreviewParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - where was the preview triggered: post list, post editor
 * @property {string} post_id - post id
 * @property {string} preview_type - the preview type: desktop, mobile browser, wix app
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp - Post preview. Evid: 1341.
 * Event description: Triggered when user previews a post on the owners app.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: where was the preview triggered: post list, post editor
 *
 * post_id - Type: string. Desc: post id
 *
 * preview_type - Type: string. Desc: the preview type: desktop, mobile browser, wix app
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppPostPreviewParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppPostPreview = function(params) {
    return {
        evid: 1341,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppBlogPageSettingsScreenOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - from where did the user get to this screen
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp - Blog Page settings screen opened. Evid: 1331.
 * Event description: User opens the blog Page screen settings.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: from where did the user get to this screen
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppBlogPageSettingsScreenOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppBlogPageSettingsScreenOpened = function(params) {
    return {
        evid: 1331,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postEditorAddMediaElementClickParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} origin - sidebar or text area
 * @property {string} role - Role of the user - writer or admin
 * @property {string} tab_name - Which tab was opened in post settings
 **/
/**
 * Name: Post Editor - Add Media Element Click. Evid: 378.
 * Event description: When the user clicks the "+" in the post editor (sidebar or text area).

 * instance_id - Type: guid. Desc: instance_id
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: sidebar or text area
 *
 * role - Type: string. Desc: Role of the user - writer or admin
 *
 * tab_name - Type: string. Desc: Which tab was opened in post settings
 * @param {postEditorAddMediaElementClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postEditorAddMediaElementClick = function(params) {
    return {
        evid: 378,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} clickOnTooltipParams
 * @property {string} click_name - click name
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} text - the tooltip text
 * @property {string} tooltip_name - tooltip name
 **/
/**
 * Name: click on tooltip. Evid: 414.
 * Event description: Fired when the user clicks a link inside a tooltip.

 * click_name - Type: string. Desc: click name
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * text - Type: string. Desc: the tooltip text
 *
 * tooltip_name - Type: string. Desc: tooltip name
 * @param {clickOnTooltipParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var clickOnTooltip = function(params) {
    return {
        evid: 414,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageFilterPostsClickParams
 * @property {string} filter - Which filter in Wix App is used: Analytics/posts/drafts
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tab_name - Published/Dratfs
 **/
/**
 * Name: OneApp Manage filter posts click. Evid: 1305.
 * Event description: Click on filter post in OneApp (to choose your own or written by others posts).

 * filter - Type: string. Desc: Which filter in Wix App is used: Analytics/posts/drafts
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tab_name - Type: string. Desc: Published/Dratfs
 * @param {oneAppManageFilterPostsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageFilterPostsClick = function(params) {
    return {
        evid: 1305,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} advancedPostSettingsOpenParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_published - Is post published (1-published)
 * @property {GUID} biToken - MSID
 * @property {string} platform - Was opened in back office/live site
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} role - Role of the user - writer or admin
 **/
/**
 * Name: Advanced post settings open. Evid: 328.
 * Event description: Advanced post settings opened.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_published - Type: bool. Desc: Is post published (1-published)
 *
 * biToken - Type: guid. Desc: MSID
 *
 * platform - Type: string. Desc: Was opened in back office/live site
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * role - Type: string. Desc: Role of the user - writer or admin
 * @param {advancedPostSettingsOpenParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var advancedPostSettingsOpen = function(params) {
    return {
        evid: 328,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppModalOptionClickParams
 * @property {string} action_name - the option the user clicked / selected on the modal
 * @property {GUID} instance_id - instance
 * @property {string} modal_name - modal name
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - the previous screen/modal
 * @property {string} role - role
 * @property {GUID} visitor_id - visitor
 **/
/**
 * Name: OneApp - Modal option click. Evid: 1321.
 * Event description: Generic event to track clicks within a modal in OneApp.

 * action_name - Type: string. Desc: the option the user clicked / selected on the modal
 *
 * instance_id - Type: guid. Desc: instance
 *
 * modal_name - Type: string. Desc: modal name
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - the previous screen/modal
 *
 * role - Type: string. Desc: role
 *
 * visitor_id - Type: guid. Desc: visitor
 * @param {oneAppModalOptionClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppModalOptionClick = function(params) {
    return {
        evid: 1321,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} helperShowedParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} name - name of helper
 **/
/**
 * Name: helper_showed. Evid: 363.
 * Event description: Helper was showed (for custom feed confusion currently, can be reused later for others if needed).

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * name - Type: string. Desc: name of helper
 * @param {helperShowedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var helperShowed = function(params) {
    return {
        evid: 363,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneappBlogSearchTextEnteredParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tab_name - Posts, Categories, Authors, Tags
 * @property {string} text - Text entered in a search
 **/
/**
 * Name: Oneapp - Blog search text entered. Evid: 1336.
 * Event description: After text was entered in search.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tab_name - Type: string. Desc: Posts, Categories, Authors, Tags
 *
 * text - Type: string. Desc: Text entered in a search
 * @param {oneappBlogSearchTextEnteredParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneappBlogSearchTextEntered = function(params) {
    return {
        evid: 1336,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postScheduledParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} category_ids - category_ids. JSON array string
 * @property {number} character_count - The number of characters on the post
 * @property {string} galleries - will sent as array - [{ layout: 'masonry', count: 5}, { layout: 'whatever', count: 10 }]
 * @property {number} giphy_count - count of used  giphy gifs
 * @property {number} image_count - image_count in the post
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_edited - 0 - new post / 1 - edit (to know if its posted for first time)
 * @property {boolean} is_rescheduled - TRUE if rescheduled
 * @property {string} member_id - NOT USED: member_id
 * @property {GUID} biToken - null
 * @property {number} offset - the user timezone offset relative to UTC (in minutes)
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 * @property {DateTime} scheduled_date - The date when the post must be published (UTC)
 * @property {boolean} used_html - 0 - didnt used html component / 1 - used html component
 * @property {number} video_count - video_count in the post
 **/
/**
 * Name: post scheduled. Evid: 336.
 * Event description: triggered when a post is scheduled..

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * category_ids - Type: string. Desc: category_ids. JSON array string
 *
 * character_count - Type: numeric. Desc: The number of characters on the post
 *
 * galleries - Type: string. Desc: will sent as array - [{ layout: 'masonry', count: 5}, { layout: 'whatever', count: 10 }]
 *
 * giphy_count - Type: numeric. Desc: count of used  giphy gifs
 *
 * image_count - Type: numeric. Desc: image_count in the post
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_edited - Type: bool. Desc: 0 - new post / 1 - edit (to know if its posted for first time)
 *
 * is_rescheduled - Type: bool. Desc: TRUE if rescheduled
 *
 * member_id - Type: string. Desc: NOT USED: member_id
 *
 * biToken - Type: guid.
 *
 * offset - Type: numeric. Desc: the user timezone offset relative to UTC (in minutes)
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * scheduled_date - Type: datetime. Desc: The date when the post must be published (UTC)
 *
 * used_html - Type: bool. Desc: 0 - didnt used html component / 1 - used html component
 *
 * video_count - Type: numeric. Desc: video_count in the post
 * @param {postScheduledParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postScheduled = function(params) {
    return {
        evid: 336,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blog6thButtonOnBoardingScreenClickParams
 * @property {string} button_name - 'find out more' or 'add now'
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first_time_view - 1 - onboarding view 0 -blog manager
 * @property {GUID} biToken - msid
 * @property {string} origin - 6th button or Add panel
 **/
/**
 * Name: blog 6th button - On boarding screen click. Evid: 321.
 * Event description: triggered when clicking inside the blog 6th button.

 * button_name - Type: string. Desc: 'find out more' or 'add now'
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first_time_view - Type: bool. Desc: 1 - onboarding view 0 -blog manager
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: 6th button or Add panel
 * @param {blog6thButtonOnBoardingScreenClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blog6thButtonOnBoardingScreenClick = function(params) {
    return {
        evid: 321,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} multilingualHoverTranslateGlobeParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} tabName - tab name: published, drafts, trash,  categories
 **/
/**
 * Name: Multilingual - hover translate globe. Evid: 418.
 * Event description: triggered when user hovers on the translate globe..

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * tabName - Type: string. Desc: tab name: published, drafts, trash,  categories
 * @param {multilingualHoverTranslateGlobeParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var multilingualHoverTranslateGlobe = function(params) {
    return {
        evid: 418,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postPageMigrationModalOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} role - role
 **/
/**
 * Name: Post page Migration  modal opened. Evid: 354.
 * Event description: triggered when Migration post page modal was opened (modal where user can click a button to migrate).

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: role
 * @param {postPageMigrationModalOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postPageMigrationModalOpened = function(params) {
    return {
        evid: 354,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postsBm3DotsParams
 * @property {string} action - view post, duplicate post, revert to draft, turn off commenting, move to trash, preview draft, duplicate draft
 * @property {GUID} instance_id - null
 * @property {string} language - the language ML
 * @property {string} language_id - the post_ stable id of the original post
 * @property {GUID} biToken - null
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} role - role
 * @property {string} tabName - Posts or Drafts
 **/
/**
 * Name: Posts BM 3 dots - option clicked. Evid: 331.
 * Event description: Whenever a user clicks one of the options from the 3 dots menu, in the Business Manager.

 * action - Type: string. Desc: view post, duplicate post, revert to draft, turn off commenting, move to trash, preview draft, duplicate draft
 *
 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: the language ML
 *
 * language_id - Type: string. Desc: the post_ stable id of the original post
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * role - Type: string. Desc: role
 *
 * tabName - Type: string. Desc: Posts or Drafts
 * @param {postsBm3DotsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postsBm3Dots = function(params) {
    return {
        evid: 331,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} buisinessManagerClickThatDirectsOutOfBmParams
 * @property {string} click_name - click name
 * @property {string} destination - where is the user being routed to, Editor, app market
 * @property {GUID} instance_id - instance
 * @property {string} language - Language
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 **/
/**
 * Name: Buisiness Manager: click that directs out of BM. Evid: 437.
 * Event description: When the user clicks on a CTA within the BM, that leads to another page outside blog scope. eg. Editor, App market etc...

 * click_name - Type: string. Desc: click name
 *
 * destination - Type: string. Desc: where is the user being routed to, Editor, app market
 *
 * instance_id - Type: guid. Desc: instance
 *
 * language - Type: string. Desc: Language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 * @param {buisinessManagerClickThatDirectsOutOfBmParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var buisinessManagerClickThatDirectsOutOfBm = function(params) {
    return {
        evid: 437,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppConnectPlanToPostParams
 * @property {GUID} instance_id - null
 * @property {string} language - language
 * @property {GUID} biToken - null
 * @property {string} paid_plan_id - Array paid plan Ids
 * @property {string} post_ids - Array of posts
 * @property {string} role - role
 * @property {string} translation_id - translation id
 **/
/**
 * Name: OneApp - connect plan to post. Evid: 1325.
 * Event description: triggered in OneApp when the user connects a plan to a post(s).

 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid.
 *
 * paid_plan_id - Type: string. Desc: Array paid plan Ids
 *
 * post_ids - Type: string. Desc: Array of posts
 *
 * role - Type: string. Desc: role
 *
 * translation_id - Type: string. Desc: translation id
 * @param {oneAppConnectPlanToPostParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppConnectPlanToPost = function(params) {
    return {
        evid: 1325,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationCopiedSuccessModalOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} migration_status - First time, In progress, Done (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Copied success modal opened. Evid: 386.
 * Event description: triggered when Migration Copied success modal opened actually open.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * migration_status - Type: string. Desc: First time, In progress, Done (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationCopiedSuccessModalOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationCopiedSuccessModalOpened = function(params) {
    return {
        evid: 386,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} actionChoseInBmMoreActionsMenuParams
 * @property {string} actionName - Action name chose inside menu
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} source - post BO section name: published, overview
 **/
/**
 * Name: Action chose in BM  More Actions menu. Evid: 344.
 * Event description: Triggered when the user clicks action under more actions menu in blog BO. For click on More actions itself, see event 69:341.

 * actionName - Type: string. Desc: Action name chose inside menu
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * source - Type: string. Desc: post BO section name: published, overview
 * @param {actionChoseInBmMoreActionsMenuParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var actionChoseInBmMoreActionsMenu = function(params) {
    return {
        evid: 344,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} writeNewPostClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 **/
/**
 * Name: write new post click. Evid: 308.
 * Event description: triggered when click on write new post CTA.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 * @param {writeNewPostClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var writeNewPostClick = function(params) {
    return {
        evid: 308,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogManagerOpenedBoParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {string} destination - blog manager destination name
 * @property {GUID} instance_id - instance_id
 * @property {string} language - the language if ML
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} referrer - the place from which it was open
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} version - the biz manager version (null values mean the v1)
 **/
/**
 * Name: blog manager opened (BO). Evid: 301.
 * Event description: triggered when blog manager actually open!.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * destination - Type: string. Desc: blog manager destination name
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: the language if ML
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * referrer - Type: string. Desc: the place from which it was open
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * version - Type: string. Desc: the biz manager version (null values mean the v1)
 * @param {blogManagerOpenedBoParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogManagerOpenedBo = function(params) {
    return {
        evid: 301,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} editorSettingsTabOpenedParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Place settings was changed in: blog_feed, post_page
 * @property {string} referrer - from which place it was opened
 * @property {string} role - role
 * @property {string} tab_name - tab name inside post settings
 * @property {string} view_mode - desktop, mobile. NOTE: any Null values belong to desktop
 **/
/**
 * Name: editor - settings tab opened. Evid: 352.
 * Event description: Tab inside settings opened.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Place settings was changed in: blog_feed, post_page
 *
 * referrer - Type: string. Desc: from which place it was opened
 *
 * role - Type: string. Desc: role
 *
 * tab_name - Type: string. Desc: tab name inside post settings
 *
 * view_mode - Type: string. Desc: desktop, mobile. NOTE: any Null values belong to desktop
 * @param {editorSettingsTabOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var editorSettingsTabOpened = function(params) {
    return {
        evid: 352,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} editorCustomizeLayoutButtonClickParams
 * @property {GUID} instance_id - instance
 * @property {string} layout - the selected layout
 * @property {GUID} biToken - msid
 * @property {string} origin - post list, blog feed
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: Editor - Customize Layout button click. Evid: 420.
 * Event description: User clicked customize layout from the while editing the blog or post feed.

 * instance_id - Type: guid. Desc: instance
 *
 * layout - Type: string. Desc: the selected layout
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: post list, blog feed
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {editorCustomizeLayoutButtonClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var editorCustomizeLayoutButtonClick = function(params) {
    return {
        evid: 420,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesSeeMoreTemplatesClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - null
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - null
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - null
 **/
/**
 * Name: Post templates: See more templates click. Evid: 438.
 * Event description: triggered when click on write new post from template.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid.
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string.
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid.
 * @param {postTemplatesSeeMoreTemplatesClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesSeeMoreTemplatesClick = function(params) {
    return {
        evid: 438,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} adiBlogSettingsToggleClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_enabled - 1 - enabled, 0 - disabled
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} role - Role of user - writer or admin
 * @property {string} toggle_name - Name of the toggle in blog settings
 **/
/**
 * Name: ADI Blog settings toggle click. Evid: 327.
 * Event description: Which settings user chose on Settings panel in ADI.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_enabled - Type: bool. Desc: 1 - enabled, 0 - disabled
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * role - Type: string. Desc: Role of user - writer or admin
 *
 * toggle_name - Type: string. Desc: Name of the toggle in blog settings
 * @param {adiBlogSettingsToggleClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var adiBlogSettingsToggleClick = function(params) {
    return {
        evid: 327,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} tagCreatedParams
 * @property {GUID} instance_id - null
 * @property {string} language - language
 * @property {GUID} biToken - null
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {GUID} tag_guid - tag stable id
 * @property {string} tagid - tag_id
 * @property {string} tag_name - tag label
 * @property {string} translation_id - translation_id
 **/
/**
 * Name: Tag Created. Evid: 314.
 * Event description: triggered whenever the user removes a tag from the post..

 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * tag_guid - Type: guid. Desc: tag stable id
 *
 * tagid - Type: string. Desc: tag_id
 *
 * tag_name - Type: string. Desc: tag label
 *
 * translation_id - Type: string. Desc: translation_id
 * @param {tagCreatedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var tagCreated = function(params) {
    return {
        evid: 314,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageFilterPostsSaveClickParams
 * @property {string} filter - Which filter in Wix App is used: Analytics/posts/drafts
 * @property {string} filter_name - "My Posts"/"Posts by Others"/"All Posts"
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp Manage filter posts click. Evid: 1306.
 * Event description: Click on filter post in OneApp (to choose your own or written by others posts).

 * filter - Type: string. Desc: Which filter in Wix App is used: Analytics/posts/drafts
 *
 * filter_name - Type: string. Desc: "My Posts"/"Posts by Others"/"All Posts"
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppManageFilterPostsSaveClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageFilterPostsSaveClick = function(params) {
    return {
        evid: 1306,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesPostTemplateFirstViewParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 **/
/**
 * Name: Post templates: Post template first view. Evid: 429.
 * Event description: triggered when user comes to PostTemplate.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 * @param {postTemplatesPostTemplateFirstViewParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesPostTemplateFirstView = function(params) {
    return {
        evid: 429,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppBlogPageSettingsChangedParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - from where did the user get to this screen
 * @property {string} property - property
 * @property {string} property_value - property value
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tab_name - Post or Category
 **/
/**
 * Name: OneApp - Blog Page settings changed. Evid: 1332.
 * Event description: User opens the blog Page screen settings.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: from where did the user get to this screen
 *
 * property - Type: string. Desc: property
 *
 * property_value - Type: string. Desc: property value
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tab_name - Type: string. Desc: Post or Category
 * @param {oneAppBlogPageSettingsChangedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppBlogPageSettingsChanged = function(params) {
    return {
        evid: 1332,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} dotsClickPostEditorParams
 * @property {GUID} instance_id - instance
 * @property {boolean} is_published - Is post published
 * @property {GUID} biToken - null
 * @property {string} origin - origin
 * @property {string} post_id - post id
 * @property {string} role - role
 **/
/**
 * Name: 3 dots click - post editor. Evid: 339.
 * Event description: Triggered when the user clicks on the 3 dots menu that sits next to the publish button, within the Post Editor.

 * instance_id - Type: guid. Desc: instance
 *
 * is_published - Type: bool. Desc: Is post published
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: origin
 *
 * post_id - Type: string. Desc: post id
 *
 * role - Type: string. Desc: role
 * @param {dotsClickPostEditorParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var dotsClickPostEditor = function(params) {
    return {
        evid: 339,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postEditorOpenedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {number} character_count - character count in post (sends only on Web)
 * @property {string} community_id - NOT IN USE: community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {string} language - to be used in multilingual context.
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - NOT IN USE: in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - stable id
 * @property {string} post_title - post title
 * @property {string} referral_info - NOT IN USE: external links - facebook, social networks. if from wix then null
 * @property {string} referrer - the place from which it was opened
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} translatation_id - the post_stable_id of the translated post
 **/
/**
 * Name: post editor opened. Evid: 307.
 * Event description: triggered when post editor opened.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * character_count - Type: numeric. Desc: character count in post (sends only on Web)
 *
 * community_id - Type: string. Desc: NOT IN USE: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * language - Type: string. Desc: to be used in multilingual context.
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: NOT IN USE: in the members app events. holds the child app (forum/blog) instance_id
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: stable id
 *
 * post_title - Type: string. Desc: post title
 *
 * referral_info - Type: string. Desc: NOT IN USE: external links - facebook, social networks. if from wix then null
 *
 * referrer - Type: string. Desc: the place from which it was opened
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * translatation_id - Type: string. Desc: the post_stable_id of the translated post
 * @param {postEditorOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postEditorOpened = function(params) {
    return {
        evid: 307,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageCategoriesThreeDotsClickParams
 * @property {string} category_id - category_id
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} translation_id - translation id
 **/
/**
 * Name: OneApp Manage Categories three dots click. Evid: 1310.
 * Event description: Number of posts found in search in OneApp Manage.

 * category_id - Type: string. Desc: category_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * translation_id - Type: string. Desc: translation id
 * @param {oneAppManageCategoriesThreeDotsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageCategoriesThreeDotsClick = function(params) {
    return {
        evid: 1310,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} multilingualLanguagePickerOpenParams
 * @property {GUID} instance_id - instance id
 * @property {boolean} isFilter - is the language picker a filter?
 * @property {GUID} biToken - instance id
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} tabName - tab name
 **/
/**
 * Name: Multilingual - language picker open. Evid: 415.
 * Event description: Triggered when the user clicks and opens on the language picker.

 * instance_id - Type: guid. Desc: instance id
 *
 * isFilter - Type: bool. Desc: is the language picker a filter?
 *
 * biToken - Type: guid. Desc: instance id
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * tabName - Type: string. Desc: tab name
 * @param {multilingualLanguagePickerOpenParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var multilingualLanguagePickerOpen = function(params) {
    return {
        evid: 415,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationUpdateAndPublishConfirmationClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Update and publish confirmation click. Evid: 392.
 * Event description: triggered when users click on Update and publish confirmation click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationUpdateAndPublishConfirmationClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationUpdateAndPublishConfirmationClick = function(params) {
    return {
        evid: 392,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} modalActionParams
 * @property {string} action - Action on modal (for Draft refresh - close/save this version/discard this version)
 * @property {string} available_languages - an array with the available languages
 * @property {string} dataJson - if the modal has selections for the user those selections will be stored here
 * @property {string} default_language - default language
 * @property {GUID} instance_id - null
 * @property {string} language_selected - In multilingual context stores the language that the user chose
 * @property {string} modal_name - modal name
 * @property {GUID} biToken - null
 * @property {string} origin - origin
 * @property {string} role - role
 **/
/**
 * Name: Modal action. Evid: 348.
 * Event description: Action on Modal - generic event for many different modals.

--Draft refresh:
Action on modal to refresh draft (there exists another version of the draft in another tab or Wix app).

 * action - Type: string. Desc: Action on modal (for Draft refresh - close/save this version/discard this version)
 *
 * available_languages - Type: string. Desc: an array with the available languages
 *
 * dataJson - Type: string. Desc: if the modal has selections for the user those selections will be stored here
 *
 * default_language - Type: string. Desc: default language
 *
 * instance_id - Type: guid.
 *
 * language_selected - Type: string. Desc: In multilingual context stores the language that the user chose
 *
 * modal_name - Type: string. Desc: modal name
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 * @param {modalActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var modalAction = function(params) {
    return {
        evid: 348,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationKeepGoingClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Keep going click. Evid: 387.
 * Event description: triggered when users click on Keep going click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationKeepGoingClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationKeepGoingClick = function(params) {
    return {
        evid: 387,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationDoneClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> done click. Evid: 394.
 * Event description: triggered when users click on done click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationDoneClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationDoneClick = function(params) {
    return {
        evid: 394,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppGenericModalShownParams
 * @property {GUID} instance_id - instance
 * @property {string} modal_name - modal name
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - the previous screen/modal
 * @property {string} role - role
 * @property {GUID} visitor_id - visitor
 **/
/**
 * Name: OneApp - Generic Modal shown. Evid: 1320.
 * Event description: Modal shown - generic event for many different modals..

 * instance_id - Type: guid. Desc: instance
 *
 * modal_name - Type: string. Desc: modal name
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - the previous screen/modal
 *
 * role - Type: string. Desc: role
 *
 * visitor_id - Type: guid. Desc: visitor
 * @param {oneAppGenericModalShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppGenericModalShown = function(params) {
    return {
        evid: 1320,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} fullstorySessionParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 **/
/**
 * Name: Fullstory session. Evid: 400.
 * Event description: triggered when a Fullstory session started.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 * @param {fullstorySessionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var fullstorySession = function(params) {
    return {
        evid: 400,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppBlogSearchResultClickedParams
 * @property {GUID} author_id - author id
 * @property {string} category_id - category id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} post_id - post id
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tagid - tag id
 **/
/**
 * Name: OneApp - Blog search result clicked. Evid: 1338.
 * Event description: After clicking on search in OneApp blog home.

 * author_id - Type: guid. Desc: author id
 *
 * category_id - Type: string. Desc: category id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * post_id - Type: string. Desc: post id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tagid - Type: string. Desc: tag id
 * @param {oneAppBlogSearchResultClickedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppBlogSearchResultClicked = function(params) {
    return {
        evid: 1338,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppCustomizeBlogSectionsParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Post Page Settings, app settings (feed)
 * @property {string} property - The setting name
 * @property {string} property_value - The setting value
 * @property {string} role - role
 * @property {string} section - which section is being edited. (header, navigation tabs, category list etc..)
 * @property {string} tab_name - tab name (member view or place card)
 **/
/**
 * Name: OneApp - Customize blog sections. Evid: 1327.
 * Event description: When a user clicks customize from the admin menu on the blog tab. One app only!.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Post Page Settings, app settings (feed)
 *
 * property - Type: string. Desc: The setting name
 *
 * property_value - Type: string. Desc: The setting value
 *
 * role - Type: string. Desc: role
 *
 * section - Type: string. Desc: which section is being edited. (header, navigation tabs, category list etc..)
 *
 * tab_name - Type: string. Desc: tab name (member view or place card)
 * @param {oneAppCustomizeBlogSectionsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppCustomizeBlogSections = function(params) {
    return {
        evid: 1327,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationCloseModalClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} modal_name - post transferred, success
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Close modal click. Evid: 388.
 * Event description: triggered when users click on Keep going click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * modal_name - Type: string. Desc: post transferred, success
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationCloseModalClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationCloseModalClick = function(params) {
    return {
        evid: 388,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppTabOpenedInManageParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tab_name - tab name opened in Manage
 **/
/**
 * Name: OneApp Tab opened in Manage. Evid: 1301.
 * Event description: User opened tab in OneApp Manage section.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tab_name - Type: string. Desc: tab name opened in Manage
 * @param {oneAppTabOpenedInManageParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppTabOpenedInManage = function(params) {
    return {
        evid: 1301,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationImportPageSecondStepOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} migration_status - First time, In progress, Done (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Import page second step opened. Evid: 389.
 * Event description: triggered when Migration Import page second step actually open.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * migration_status - Type: string. Desc: First time, In progress, Done (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationImportPageSecondStepOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationImportPageSecondStepOpened = function(params) {
    return {
        evid: 389,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} multilingualCategoryTranslateClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} category_id - category id
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} translation_id - the category id of the translated post
 **/
/**
 * Name: Multilingual - category translate click. Evid: 417.
 * Event description: triggered when click on translate CTA.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * category_id - Type: string. Desc: category id
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * translation_id - Type: string. Desc: the category id of the translated post
 * @param {multilingualCategoryTranslateClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var multilingualCategoryTranslateClick = function(params) {
    return {
        evid: 417,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} clickOnLinkParams
 * @property {Url} button_link - the link of the button( particular support page)
 * @property {string} button_name - How the button is named
 * @property {GUID} instance_id - null
 * @property {GUID} bi_token - msis
 * @property {GUID} biToken - null
 * @property {string} origin - For example: ‘Blog’ , ‘RSS Widget’ , ‘Post Page’ , ‘Post List’ and so on
 * @property {string} origin_name - null
 * @property {string} tab_name - null
 * @property {GUID} uuid - null
 **/
/**
 * Name: Click on Link. Evid: 441.


 * button_link - Type: url. Desc: the link of the button( particular support page)
 *
 * button_name - Type: string. Desc: How the button is named
 *
 * instance_id - Type: guid.
 *
 * bi_token - Type: guid. Desc: msis
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: For example: ‘Blog’ , ‘RSS Widget’ , ‘Post Page’ , ‘Post List’ and so on
 *
 * origin_name - Type: string.
 *
 * tab_name - Type: string.
 *
 * uuid - Type: guid.
 * @param {clickOnLinkParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var clickOnLink = function(params) {
    return {
        evid: 441,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogSettingsEditSeoBlogCategoriesClickParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} referrer - referrer
 * @property {string} role - role
 **/
/**
 * Name: Blog settings - Manage Notifications and emails click. Evid: 369.
 * Event description: triggered when the user clicks on the edit button on the Blog settings screen, under the SEO settings section..

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * referrer - Type: string. Desc: referrer
 *
 * role - Type: string. Desc: role
 * @param {blogSettingsEditSeoBlogCategoriesClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogSettingsEditSeoBlogCategoriesClick = function(params) {
    return {
        evid: 369,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postPublishedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} author_id - author id
 * @property {number} categories_count - NOT IN USE: categories_count that post was assigned to
 * @property {string} category_ids - category_ids. JSON array string
 * @property {number} character_count - The number of characters on the post
 * @property {string} community_id - NOT IN USE: community_id (instance of members app)
 * @property {string} galleries - will sent as array - [{ layout: 'masonry', count: 5}, { layout: 'whatever', count: 10 }]
 * @property {number} giphy_count - count of used  giphy gifs
 * @property {boolean} has_gallery - NOT IN USE: 0 - no gallery / 1 - published with gallery
 * @property {number} image_count - image_count in the post
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_edited - 0 - new post / 1 - edit (to know if its posted for first time)
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {string} language - for multilingual
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - Currently being used for wix reads posts.in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} original_post_id - the original post id
 * @property {string} paid_plan_id - Array of paid plan ids
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - stable id
 * @property {string} post_title - post title
 * @property {string} referral_info - NOT IN USE: external links - facebook, social networks. if from wix then null
 * @property {string} related_post_ids - array with related post Ids
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tag_ids - array of tags
 * @property {string} translation_id - the post_stable_id of the post that was translated
 * @property {string} url - the post url
 * @property {boolean} used_html - 0 - didnt used html component / 1 - used html component
 * @property {number} video_count - video_count in the post
 **/
/**
 * Name: post CRUD. Evid: 303.
 * Event description: triggered when post: Created(Published), Updated, Unpublished, Moved to trash, Deleted,.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * author_id - Type: guid. Desc: author id
 *
 * categories_count - Type: numeric. Desc: NOT IN USE: categories_count that post was assigned to
 *
 * category_ids - Type: string. Desc: category_ids. JSON array string
 *
 * character_count - Type: numeric. Desc: The number of characters on the post
 *
 * community_id - Type: string. Desc: NOT IN USE: community_id (instance of members app)
 *
 * galleries - Type: string. Desc: will sent as array - [{ layout: 'masonry', count: 5}, { layout: 'whatever', count: 10 }]
 *
 * giphy_count - Type: numeric. Desc: count of used  giphy gifs
 *
 * has_gallery - Type: bool. Desc: NOT IN USE: 0 - no gallery / 1 - published with gallery
 *
 * image_count - Type: numeric. Desc: image_count in the post
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_edited - Type: bool. Desc: 0 - new post / 1 - edit (to know if its posted for first time)
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * language - Type: string. Desc: for multilingual
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: Currently being used for wix reads posts.in the members app events. holds the child app (forum/blog) instance_id
 *
 * original_post_id - Type: string. Desc: the original post id
 *
 * paid_plan_id - Type: string. Desc: Array of paid plan ids
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: stable id
 *
 * post_title - Type: string. Desc: post title
 *
 * referral_info - Type: string. Desc: NOT IN USE: external links - facebook, social networks. if from wix then null
 *
 * related_post_ids - Type: string. Desc: array with related post Ids
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tag_ids - Type: string. Desc: array of tags
 *
 * translation_id - Type: string. Desc: the post_stable_id of the post that was translated
 *
 * url - Type: string. Desc: the post url
 *
 * used_html - Type: bool. Desc: 0 - didnt used html component / 1 - used html component
 *
 * video_count - Type: numeric. Desc: video_count in the post
 * @param {postPublishedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postPublished = function(params) {
    return {
        evid: 303,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} wixPostImporterImportStartedParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {number} num_posts_total - the number of posts to be imported
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - the instance_id from which the posts were imported
 * @property {GUID} original_msid - the msid from which the posts were imported
 * @property {string} role - role
 **/
/**
 * Name: Wix post importer: Import Started. Evid: 421.


 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * num_posts_total - Type: numeric. Desc: the number of posts to be imported
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: the instance_id from which the posts were imported
 *
 * original_msid - Type: guid. Desc: the msid from which the posts were imported
 *
 * role - Type: string. Desc: role
 * @param {wixPostImporterImportStartedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var wixPostImporterImportStarted = function(params) {
    return {
        evid: 421,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} wixPostImporterImportFinishedParams
 * @property {string} fail_reason - if the import failed what was the reason
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_successful - was the import successful
 * @property {GUID} biToken - msid
 * @property {number} num_posts_total - the number of posts to be imported
 * @property {number} num_posts_unsucc - number of posts that failed to import
 * @property {string} origin - null
 * @property {GUID} original_instance_id - the instance_id from which the posts were imported
 * @property {GUID} original_msid - the msid from which the posts were imported
 * @property {string} role - role
 **/
/**
 * Name: Wix post importer: Import Finished. Evid: 422.
 * Event description: Triggered when the import wix posts process starts.

 * fail_reason - Type: string. Desc: if the import failed what was the reason
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_successful - Type: bool. Desc: was the import successful
 *
 * biToken - Type: guid. Desc: msid
 *
 * num_posts_total - Type: numeric. Desc: the number of posts to be imported
 *
 * num_posts_unsucc - Type: numeric. Desc: number of posts that failed to import
 *
 * origin - Type: string.
 *
 * original_instance_id - Type: guid. Desc: the instance_id from which the posts were imported
 *
 * original_msid - Type: guid. Desc: the msid from which the posts were imported
 *
 * role - Type: string. Desc: role
 * @param {wixPostImporterImportFinishedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var wixPostImporterImportFinished = function(params) {
    return {
        evid: 422,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppClickInsideSwipeActionParams
 * @property {string} action - Settings/Edit
 * @property {GUID} instance_id - null
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {GUID} biToken - msid
 * @property {string} origin - OneApp Manage
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - stable id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp click inside swipe action. Evid: 1304.
 * Event description: User chose action after swipe.

 * action - Type: string. Desc: Settings/Edit
 *
 * instance_id - Type: guid.
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: OneApp Manage
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: stable id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppClickInsideSwipeActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppClickInsideSwipeAction = function(params) {
    return {
        evid: 1304,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postHistoryPostHistoryScreenShownParams
 * @property {GUID} instance_id - instance
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - examples: related_posts, paid_plans etc..
 * @property {string} post_id - post_id if applicable
 * @property {GUID} post_stable_id - post stable id
 * @property {number} revision_count - the number of revisions displayed
 * @property {string} role - role
 * @property {string} translation_id - translation id
 **/
/**
 * Name: Post history - post history screen shown. Evid: 434.
 * Event description: When the user sees the post history screen.

 * instance_id - Type: guid. Desc: instance
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - examples: related_posts, paid_plans etc..
 *
 * post_id - Type: string. Desc: post_id if applicable
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * revision_count - Type: numeric. Desc: the number of revisions displayed
 *
 * role - Type: string. Desc: role
 *
 * translation_id - Type: string. Desc: translation id
 * @param {postHistoryPostHistoryScreenShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postHistoryPostHistoryScreenShown = function(params) {
    return {
        evid: 434,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppPreviousNextPostArrowClickParams
 * @property {string} action - previous or next post
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - post page
 * @property {string} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp - Previous/Next post arrow click. Evid: 1339.
 * Event description: the user clicked on the previous or next post within the post page.

 * action - Type: string. Desc: previous or next post
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: post page
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppPreviousNextPostArrowClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppPreviousNextPostArrowClick = function(params) {
    return {
        evid: 1339,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} followUnfollowCategoryClickWixReadsParams
 * @property {string} category_id - category id
 * @property {string} category_name - category name
 * @property {GUID} instance_id - instance
 * @property {boolean} is_followed - 1- followed, 0 - unfollowed
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: follow/unfollow category click (wix reads). Evid: 1328.
 * Event description: When the user clicks to follow or unfollow.

 * category_id - Type: string. Desc: category id
 *
 * category_name - Type: string. Desc: category name
 *
 * instance_id - Type: guid. Desc: instance
 *
 * is_followed - Type: bool. Desc: 1- followed, 0 - unfollowed
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {followUnfollowCategoryClickWixReadsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var followUnfollowCategoryClickWixReads = function(params) {
    return {
        evid: 1328,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationLearnHowToSwitchDeleteOldBlogParams
 * @property {string} action - switch, delete
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - old blog 6th button
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Learn How to Switch / Delete old blog. Evid: 398.
 * Event description: Whenever the user clicks on the learn how link from the old blog 6th button - learn how to delete, learn how to switch.

 * action - Type: string. Desc: switch, delete
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: old blog 6th button
 *
 * role - Type: string. Desc: role
 * @param {migrationLearnHowToSwitchDeleteOldBlogParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationLearnHowToSwitchDeleteOldBlog = function(params) {
    return {
        evid: 398,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppReportSelectedClickParams
 * @property {string} analytics_report_id - id of the report
 * @property {string} analytics_report_name - name of the report
 * @property {GUID} instance_id - instance id
 * @property {GUID} biToken - msisd
 * @property {string} origin - analytics page
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp report selected (click). Evid: 443.
 * Event description: user selected any report under analytics page.

 * analytics_report_id - Type: string. Desc: id of the report
 *
 * analytics_report_name - Type: string. Desc: name of the report
 *
 * instance_id - Type: guid. Desc: instance id
 *
 * biToken - Type: guid. Desc: msisd
 *
 * origin - Type: string. Desc: analytics page
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppReportSelectedClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppReportSelectedClick = function(params) {
    return {
        evid: 443,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogSettingsEditSeoBlogPostsClickParams
 * @property {string} click_name - which cta the user clicked: Posts, Categories or Tags
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} referrer - referrer
 * @property {string} role - role
 **/
/**
 * Name: Blog settings - SEO Patterns CTA click. Evid: 368.
 * Event description: triggered when the user clicks on the edit button on the Blog settings screen, under the SEO settings section..

 * click_name - Type: string. Desc: which cta the user clicked: Posts, Categories or Tags
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * referrer - Type: string. Desc: referrer
 *
 * role - Type: string. Desc: role
 * @param {blogSettingsEditSeoBlogPostsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogSettingsEditSeoBlogPostsClick = function(params) {
    return {
        evid: 368,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneappManageSearchTextEnteredParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} text - Text entered in a search
 **/
/**
 * Name: Oneapp Manage search text entered. Evid: 1308.
 * Event description: After text was entered in search.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * text - Type: string. Desc: Text entered in a search
 * @param {oneappManageSearchTextEnteredParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneappManageSearchTextEntered = function(params) {
    return {
        evid: 1308,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogTabInBmOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {string} language - the language that was rendered
 * @property {GUID} bi_token - msid
 * @property {GUID} biToken - null
 * @property {string} name - Opened Tab name in Blog Back Office
 * @property {string} place - Place where tab was opened (sidebar / blog posts list)
 * @property {string} referrer - from which place it was opened
 * @property {string} role - Role of user - writer or admin
 * @property {GUID} site_member_id - site_member_id
 * @property {string} tab_name - Opened Tab in Blog Back Office
 **/
/**
 * Name: Blog tab in BM opened. Evid: 325.
 * Event description: Tab in Blog Manager opened.

 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: the language that was rendered
 *
 * bi_token - Type: guid. Desc: msid
 *
 * biToken - Type: guid.
 *
 * name - Type: string. Desc: Opened Tab name in Blog Back Office
 *
 * place - Type: string. Desc: Place where tab was opened (sidebar / blog posts list)
 *
 * referrer - Type: string. Desc: from which place it was opened
 *
 * role - Type: string. Desc: Role of user - writer or admin
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * tab_name - Type: string. Desc: Opened Tab in Blog Back Office
 * @param {blogTabInBmOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogTabInBmOpened = function(params) {
    return {
        evid: 325,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postSelectorActionParams
 * @property {string} action - The button that the user clicked, Cancel, Done, 'X'
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} post_id - post_id if applicable
 * @property {string} post_ids - array of post_id
 * @property {string} role - role
 **/
/**
 * Name: Post Selector Action. Evid: 359.
 * Event description: triggered when the user closes the post selector. Stores the.

 * action - Type: string. Desc: The button that the user clicked, Cancel, Done, 'X'
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * post_id - Type: string. Desc: post_id if applicable
 *
 * post_ids - Type: string. Desc: array of post_id
 *
 * role - Type: string. Desc: role
 * @param {postSelectorActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postSelectorAction = function(params) {
    return {
        evid: 359,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogWidgetElementRemovedParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - examples: related_posts, paid_plans etc..
 * @property {string} post_id - post_id if applicable
 * @property {string} role - role
 **/
/**
 * Name: Post Selector Shown. Evid: 358.
 * Event description: Triggered when the user clicks on a CTA that requires selecting multiple posts..

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - examples: related_posts, paid_plans etc..
 *
 * post_id - Type: string. Desc: post_id if applicable
 *
 * role - Type: string. Desc: role
 * @param {blogWidgetElementRemovedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogWidgetElementRemoved = function(params) {
    return {
        evid: 358,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationCopyPostsClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Copy posts click. Evid: 385.
 * Event description: triggered when users click on Copy posts.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationCopyPostsClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationCopyPostsClick = function(params) {
    return {
        evid: 385,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppBlogSearchClickedParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp - Blog search clicked. Evid: 1335.
 * Event description: After clicking on search in OneApp blog home.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppBlogSearchClickedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppBlogSearchClicked = function(params) {
    return {
        evid: 1335,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blog6thButtonBlogElementAddedParams
 * @property {string} editor_working_mode - dummy
 * @property {string} element_type - recent post, custom feed
 * @property {GUID} esi - dummy
 * @property {GUID} id - unique id of a widget to connect to other events
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first_time_view - dummy
 * @property {string} layout - layout of the element that was added
 * @property {GUID} biToken - msid
 * @property {string} origin - 6th button or Add panel
 * @property {string} pageType - the page the widget was added on. Home, Post, other
 * @property {number} ts - dummy
 * @property {string} viewmode - dummy
 * @property {string} widget_id - widget_id
 **/
/**
 * Name: blog widget (element) added. Evid: 322.
 * Event description: triggered when adding blog element from the blog 6th button.

 * editor_working_mode - Type: string. Desc: dummy
 *
 * element_type - Type: string. Desc: recent post, custom feed
 *
 * esi - Type: guid. Desc: dummy
 *
 * id - Type: guid. Desc: unique id of a widget to connect to other events
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first_time_view - Type: bool. Desc: dummy
 *
 * layout - Type: string. Desc: layout of the element that was added
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: 6th button or Add panel
 *
 * pageType - Type: string. Desc: the page the widget was added on. Home, Post, other
 *
 * ts - Type: numeric. Desc: dummy
 *
 * viewmode - Type: string. Desc: dummy
 *
 * widget_id - Type: string. Desc: widget_id
 * @param {blog6thButtonBlogElementAddedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blog6thButtonBlogElementAdded = function(params) {
    return {
        evid: 322,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationUpdateAndPublishClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Update and publish click. Evid: 390.
 * Event description: triggered when users click on Update and publish click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationUpdateAndPublishClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationUpdateAndPublishClick = function(params) {
    return {
        evid: 390,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppGenericActionSheetShownParams
 * @property {string} action_sheet_name - action sheet name
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin - the previous screen/modal
 * @property {string} role - role
 * @property {GUID} visitor_id - visitor
 **/
/**
 * Name: OneApp - Generic action sheet shown. Evid: 1324.
 * Event description: Action sheet showed - a generic event for many different action sheets..

 * action_sheet_name - Type: string. Desc: action sheet name
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin - the previous screen/modal
 *
 * role - Type: string. Desc: role
 *
 * visitor_id - Type: guid. Desc: visitor
 * @param {oneAppGenericActionSheetShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppGenericActionSheetShown = function(params) {
    return {
        evid: 1324,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} authorEditedParams
 * @property {GUID} author_id - Author id = site member id
 * @property {string} author_role - Currently just "Offline/Owner" - might be reused later
 * @property {boolean} cover_changed - cover has changed
 * @property {boolean} has_cover - does have a cover image
 * @property {boolean} has_picture - TRUE if author already has a picture (nice to have)
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} new_author_name - new name after edit
 * @property {string} new_author_title - new title after edit
 * @property {string} origin - origin
 * @property {boolean} was_name_changed - null
 * @property {boolean} was_picture_changed - if picture was changed on editing author
 **/
/**
 * Name: Author edited. Evid: 366.


 * author_id - Type: guid. Desc: Author id = site member id
 *
 * author_role - Type: string. Desc: Currently just "Offline/Owner" - might be reused later
 *
 * cover_changed - Type: bool. Desc: cover has changed
 *
 * has_cover - Type: bool. Desc: does have a cover image
 *
 * has_picture - Type: bool. Desc: TRUE if author already has a picture (nice to have)
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * new_author_name - Type: string. Desc: new name after edit
 *
 * new_author_title - Type: string. Desc: new title after edit
 *
 * origin - Type: string. Desc: origin
 *
 * was_name_changed - Type: bool.
 *
 * was_picture_changed - Type: bool. Desc: if picture was changed on editing author
 * @param {authorEditedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var authorEdited = function(params) {
    return {
        evid: 366,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogSettingsOpenedInBmParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - BM_posts
 * @property {string} role - role
 **/
/**
 * Name: Blog settings opened (in BM). Evid: 360.
 * Event description: Blog settings opened (in BM).

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: BM_posts
 *
 * role - Type: string. Desc: role
 * @param {blogSettingsOpenedInBmParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogSettingsOpenedInBm = function(params) {
    return {
        evid: 360,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postPageMigrationSuccessParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} role - role
 **/
/**
 * Name: Post page Migration success. Evid: 355.
 * Event description: triggered when users successfully migrated.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * role - Type: string. Desc: role
 * @param {postPageMigrationSuccessParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postPageMigrationSuccess = function(params) {
    return {
        evid: 355,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} errorMessageShowCtaClickParams
 * @property {string} action - the cta clicked - customer care, cancel ... others
 * @property {number} error_code - http error code
 * @property {string} error_message - error message
 * @property {string} error_type - error type
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} type - The way it was displayed: Tooltip, Modal, toast etc..
 **/
/**
 * Name: error message show cta click. Evid: 373.
 * Event description: whenever an error msg cta is clicked (customer care, cancel etc..).

 * action - Type: string. Desc: the cta clicked - customer care, cancel ... others
 *
 * error_code - Type: numeric. Desc: http error code
 *
 * error_message - Type: string. Desc: error message
 *
 * error_type - Type: string. Desc: error type
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * type - Type: string. Desc: The way it was displayed: Tooltip, Modal, toast etc..
 * @param {errorMessageShowCtaClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var errorMessageShowCtaClick = function(params) {
    return {
        evid: 373,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} modalShownParams
 * @property {GUID} instance_id - null
 * @property {string} modal_name - modal name
 * @property {GUID} biToken - null
 * @property {string} origin - origin
 * @property {string} role - role
 **/
/**
 * Name: Modal shown. Evid: 347.
 * Event description: Modal shown - generic event for many different modals.

--Draft refresh:
Modal to refresh draft shown (there exists another version of the draft in another tab or Wix app).

 * instance_id - Type: guid.
 *
 * modal_name - Type: string. Desc: modal name
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 * @param {modalShownParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var modalShown = function(params) {
    return {
        evid: 347,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postPagePostPageSettingsDisplayTabParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Post Page Settings, app settings (feed)
 * @property {string} property - the property that was changed
 * @property {string} property_value - the value of the property
 * @property {string} role - role
 * @property {string} section - setting name, i.e. author name and picture, date and reading time, login from blog menu,  etc.
 * @property {boolean} toggle - toggle, 1 if checked, 0 if unchecked
 * @property {string} view_mode - desktop, mobile. NOTE: any Null values belong to desktop
 **/
/**
 * Name: editor - settings display tab. Evid: 353.
 * Event description: Tab inside post page opened.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Post Page Settings, app settings (feed)
 *
 * property - Type: string. Desc: the property that was changed
 *
 * property_value - Type: string. Desc: the value of the property
 *
 * role - Type: string. Desc: role
 *
 * section - Type: string. Desc: setting name, i.e. author name and picture, date and reading time, login from blog menu,  etc.
 *
 * toggle - Type: bool. Desc: toggle, 1 if checked, 0 if unchecked
 *
 * view_mode - Type: string. Desc: desktop, mobile. NOTE: any Null values belong to desktop
 * @param {postPagePostPageSettingsDisplayTabParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postPagePostPageSettingsDisplayTab = function(params) {
    return {
        evid: 353,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postFeedFilterSettingsCategoryAndTagsParams
 * @property {string} category_id - category Id
 * @property {string} category_name - category name
 * @property {GUID} category_stable_id - category stable id
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} role - role
 * @property {GUID} tag_guid - tag stable id
 * @property {string} tagid - tag_id, null if user selected all posts
 * @property {string} tag_name - tag label
 **/
/**
 * Name: Post feed filter settings - category and tags. Evid: 318.
 * Event description: Whenever a user selects a filter for the post list from the settings button..

 * category_id - Type: string. Desc: category Id
 *
 * category_name - Type: string. Desc: category name
 *
 * category_stable_id - Type: guid. Desc: category stable id
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * role - Type: string. Desc: role
 *
 * tag_guid - Type: guid. Desc: tag stable id
 *
 * tagid - Type: string. Desc: tag_id, null if user selected all posts
 *
 * tag_name - Type: string. Desc: tag label
 * @param {postFeedFilterSettingsCategoryAndTagsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postFeedFilterSettingsCategoryAndTags = function(params) {
    return {
        evid: 318,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} errorEventParams
 * @property {string} action - which action triggered the error ( e.g. scheduling a post, publishing a post etc)
 * @property {string} applicationCode - applicationCode
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} post_id - post id
 * @property {string} request_id - request_id (optional)
 **/
/**
 * Name: error event in post editor in BO. Evid: 338.
 * Event description: whenever the user sees an error message in post editor. Not sent if internet is gone for user, but user sees modal.

 * action - Type: string. Desc: which action triggered the error ( e.g. scheduling a post, publishing a post etc)
 *
 * applicationCode - Type: string. Desc: applicationCode
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post id
 *
 * request_id - Type: string. Desc: request_id (optional)
 * @param {errorEventParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var errorEvent = function(params) {
    return {
        evid: 338,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppBlogOnboardingStepsButtonClickParams
 * @property {string} button_name - add post, skip, undo etc...
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - manage blog
 * @property {string} role - member role (owner, writer, member)
 * @property {string} step_name - add your first post, invite members etc..
 **/
/**
 * Name: OneApp - Blog Onboarding steps button click. Evid: 1334.
 * Event description: The user clicked a button on the onboarding.

 * button_name - Type: string. Desc: add post, skip, undo etc...
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: manage blog
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * step_name - Type: string. Desc: add your first post, invite members etc..
 * @param {oneAppBlogOnboardingStepsButtonClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppBlogOnboardingStepsButtonClick = function(params) {
    return {
        evid: 1334,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} forumsSettingsChooseYourForumStructureParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} type - 'List of Categoire' or 'List of all posts'
 * @property {GUID} uuid - app_id (forum, blog, members)
 **/
/**
 * Name: Forums settings: choose your forum structure. Evid: 302.
 * Event description: triggered when forum structure options switched.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * type - Type: string. Desc: 'List of Categoire' or 'List of all posts'
 *
 * uuid - Type: guid. Desc: app_id (forum, blog, members)
 * @param {forumsSettingsChooseYourForumStructureParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var forumsSettingsChooseYourForumStructure = function(params) {
    return {
        evid: 302,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppManageCategoriesAddNewCategoryClickParams
 * @property {GUID} instance_id - instance_id
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp Manage Categories Add new category click. Evid: 1312.
 * Event description: Clicked on add new category button in OneApp.

 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppManageCategoriesAddNewCategoryClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppManageCategoriesAddNewCategoryClick = function(params) {
    return {
        evid: 1312,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} emailMarketingSelectPostParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} post_id - post id
 * @property {string} role - role
 **/
/**
 * Name: Email Marketing Select Post. Evid: 335.
 * Event description: Whenever the user selects a post from the Email marketing post selection modal..

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * post_id - Type: string. Desc: post id
 *
 * role - Type: string. Desc: role
 * @param {emailMarketingSelectPostParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var emailMarketingSelectPost = function(params) {
    return {
        evid: 335,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogSettingsBackToBlogSettingsToastClickParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} referrer - referrer
 * @property {string} role - role
 **/
/**
 * Name: Blog settings - Back to blog settings toast click. Evid: 370.
 * Event description: triggered when the user clicks on the back to blog settings toast on the SEO patterns screens.

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * referrer - Type: string. Desc: referrer
 *
 * role - Type: string. Desc: role
 * @param {blogSettingsBackToBlogSettingsToastClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogSettingsBackToBlogSettingsToastClick = function(params) {
    return {
        evid: 370,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postEditorHoverOnUpgradeParams
 * @property {string} button_name - button name which was hovered on
 * @property {GUID} instance_id - instance
 * @property {boolean} is_edited - is_edited
 * @property {boolean} is_published - Is post published
 * @property {string} language - Multilingual language
 * @property {GUID} biToken - null
 * @property {string} origin - origin
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post_stable_id
 * @property {string} role - role
 * @property {boolean} title_ok - is title set
 * @property {string} translation_id - translation_id
 **/
/**
 * Name: Post Editor: hover on a button. Evid: 342.
 * Event description: User hover on a button in post editor.

 * button_name - Type: string. Desc: button name which was hovered on
 *
 * instance_id - Type: guid. Desc: instance
 *
 * is_edited - Type: bool. Desc: is_edited
 *
 * is_published - Type: bool. Desc: Is post published
 *
 * language - Type: string. Desc: Multilingual language
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: origin
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post_stable_id
 *
 * role - Type: string. Desc: role
 *
 * title_ok - Type: bool. Desc: is title set
 *
 * translation_id - Type: string. Desc: translation_id
 * @param {postEditorHoverOnUpgradeParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postEditorHoverOnUpgrade = function(params) {
    return {
        evid: 342,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} advancedPostSettingsDoneClickParams
 * @property {string} button_name - Save, Save and Publish
 * @property {number} categories_chosen - How many categories was chosen
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_author_changed - User changed author
 * @property {boolean} is_category_changed - if the user added or removed categories from the post
 * @property {boolean} is_changed_excerpt - If excerpt was changed
 * @property {boolean} is_changed_search_engine_title - Changed search engine title
 * @property {boolean} is_changed_url - Changed URL
 * @property {boolean} is_cover_image_changed - Changed cover image
 * @property {boolean} is_display_cover_toggle_changed - If toggle was changed
 * @property {boolean} is_excerpt_written - 1 - added text, 0 - didn't
 * @property {boolean} is_feature_post_toggle_changed - If toggle was changed
 * @property {boolean} is_main_category_changed - if user changed the main category
 * @property {boolean} is_on_feature_post_toggle - 1 - on, 0 - off
 * @property {boolean} is_publish_date_edited - Post publish date edited
 * @property {boolean} is_published - Is post published (1-published)
 * @property {boolean} is_written_description - Written a description
 * @property {string} language_id - language
 * @property {GUID} bi_token - MSID
 * @property {GUID} biToken - null
 * @property {string} platform - Was opened in back office/live site
 * @property {string} post_id - null
 * @property {GUID} post_stable_id - null
 * @property {string} role - Role of user - writer or admin
 * @property {boolean} is_on_display_cover_toggle - 1 - on, 0 - off
 * @property {string} translation_id - translation
 **/
/**
 * Name: Advanced post settings Done click. Evid: 323.
 * Event description: Clicking Done in advance post settings.

 * button_name - Type: string. Desc: Save, Save and Publish
 *
 * categories_chosen - Type: numeric. Desc: How many categories was chosen
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_author_changed - Type: bool. Desc: User changed author
 *
 * is_category_changed - Type: bool. Desc: if the user added or removed categories from the post
 *
 * is_changed_excerpt - Type: bool. Desc: If excerpt was changed
 *
 * is_changed_search_engine_title - Type: bool. Desc: Changed search engine title
 *
 * is_changed_url - Type: bool. Desc: Changed URL
 *
 * is_cover_image_changed - Type: bool. Desc: Changed cover image
 *
 * is_display_cover_toggle_changed - Type: bool. Desc: If toggle was changed
 *
 * is_excerpt_written - Type: bool. Desc: 1 - added text, 0 - didn't
 *
 * is_feature_post_toggle_changed - Type: bool. Desc: If toggle was changed
 *
 * is_main_category_changed - Type: bool. Desc: if user changed the main category
 *
 * is_on_feature_post_toggle - Type: bool. Desc: 1 - on, 0 - off
 *
 * is_publish_date_edited - Type: bool. Desc: Post publish date edited
 *
 * is_published - Type: bool. Desc: Is post published (1-published)
 *
 * is_written_description - Type: bool. Desc: Written a description
 *
 * language_id - Type: string. Desc: language
 *
 * bi_token - Type: guid. Desc: MSID
 *
 * biToken - Type: guid.
 *
 * platform - Type: string. Desc: Was opened in back office/live site
 *
 * post_id - Type: string.
 *
 * post_stable_id - Type: guid.
 *
 * role - Type: string. Desc: Role of user - writer or admin
 *
 * is_on_display_cover_toggle - Type: bool. Desc: 1 - on, 0 - off
 *
 * translation_id - Type: string. Desc: translation
 * @param {advancedPostSettingsDoneClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var advancedPostSettingsDoneClick = function(params) {
    return {
        evid: 323,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} tagDeletedParams
 * @property {GUID} instance_id - null
 * @property {string} language - language
 * @property {GUID} biToken - null
 * @property {string} origin - where did he deleted
 * @property {string} role - role
 * @property {GUID} tag_guid - tag stable id
 * @property {string} tagid - tag id
 * @property {string} tag_name - tag name
 * @property {string} translation_id - translation id
 **/
/**
 * Name: tag removed from post. Evid: 319.
 * Event description: Taga was removed from post.

 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: where did he deleted
 *
 * role - Type: string. Desc: role
 *
 * tag_guid - Type: guid. Desc: tag stable id
 *
 * tagid - Type: string. Desc: tag id
 *
 * tag_name - Type: string. Desc: tag name
 *
 * translation_id - Type: string. Desc: translation id
 * @param {tagDeletedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var tagDeleted = function(params) {
    return {
        evid: 319,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} currentlyNotActiveGoToLiveSiteClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: currently not active - go to live site click. Evid: 310.
 * Event description: triggered when click on "go to live site" CTA inside the blog manager.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {currentlyNotActiveGoToLiveSiteClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var currentlyNotActiveGoToLiveSiteClick = function(params) {
    return {
        evid: 310,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} dotsPostEditorOptionClickedParams
 * @property {string} action - Preview Post, Post Settings, Choose Category, Save as Draft, Schedule Post
 * @property {GUID} instance_id - instance
 * @property {boolean} is_edited - is_edited
 * @property {boolean} is_published - Is post published
 * @property {string} language - Language
 * @property {GUID} biToken - null
 * @property {string} origin - origin
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post. stable id
 * @property {string} role - role
 * @property {boolean} title_ok - is title set
 * @property {string} translation_id - translation_id
 **/
/**
 * Name: Post Editor: action click. Evid: 340.
 * Event description: Whenever a user clicks one of the options from the 3 dots menu, in the Post Editor.

 * action - Type: string. Desc: Preview Post, Post Settings, Choose Category, Save as Draft, Schedule Post
 *
 * instance_id - Type: guid. Desc: instance
 *
 * is_edited - Type: bool. Desc: is_edited
 *
 * is_published - Type: bool. Desc: Is post published
 *
 * language - Type: string. Desc: Language
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: origin
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post. stable id
 *
 * role - Type: string. Desc: role
 *
 * title_ok - Type: bool. Desc: is title set
 *
 * translation_id - Type: string. Desc: translation_id
 * @param {dotsPostEditorOptionClickedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var dotsPostEditorOptionClicked = function(params) {
    return {
        evid: 340,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneappManageSearchResultsParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {number} num_posts_found - Number of posts found in search
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} text - Text entered in a search
 **/
/**
 * Name: Oneapp Manage search results. Evid: 1309.
 * Event description: Number of posts found in search in OneApp Manage.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * num_posts_found - Type: numeric. Desc: Number of posts found in search
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * text - Type: string. Desc: Text entered in a search
 * @param {oneappManageSearchResultsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneappManageSearchResults = function(params) {
    return {
        evid: 1309,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} categoryDeletedParams
 * @property {string} category_id - category id
 * @property {GUID} instance_id - instance
 * @property {string} language - category language
 * @property {GUID} biToken - msid
 * @property {string} origin - post page, post editor, drafts
 * @property {string} translation_id - the id of the translated category
 **/
/**
 * Name: Category deleted. Evid: 376.
 * Event description: When a category is deleted.

 * category_id - Type: string. Desc: category id
 *
 * instance_id - Type: guid. Desc: instance
 *
 * language - Type: string. Desc: category language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: post page, post editor, drafts
 *
 * translation_id - Type: string. Desc: the id of the translated category
 * @param {categoryDeletedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var categoryDeleted = function(params) {
    return {
        evid: 376,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} multilingualLanguagePickerLanguageClickParams
 * @property {GUID} instance_id - instance id
 * @property {boolean} isFilter - is the language picker a filter?
 * @property {string} language_selected - language selected
 * @property {GUID} biToken - instance id
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} tabName - tab name
 **/
/**
 * Name: Multilingual - language picker language click. Evid: 416.
 * Event description: Triggered when the user chooses a language from the language picker.

 * instance_id - Type: guid. Desc: instance id
 *
 * isFilter - Type: bool. Desc: is the language picker a filter?
 *
 * language_selected - Type: string. Desc: language selected
 *
 * biToken - Type: guid. Desc: instance id
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * tabName - Type: string. Desc: tab name
 * @param {multilingualLanguagePickerLanguageClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var multilingualLanguagePickerLanguageClick = function(params) {
    return {
        evid: 416,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postDraftCreatedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - NOT IN USE: community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {string} language - for multilingual
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - NOT IN USE: in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - stable id
 * @property {string} referral_info - NOT IN USE: external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 * @property {string} template_id - post template id
 * @property {string} translation_id - the post_stable_id of the translated post
 **/
/**
 * Name: post draft created. Evid: 305.
 * Event description: triggered when a post draft is created (first save).

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: NOT IN USE: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * language - Type: string. Desc: for multilingual
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: NOT IN USE: in the members app events. holds the child app (forum/blog) instance_id
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: stable id
 *
 * referral_info - Type: string. Desc: NOT IN USE: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * template_id - Type: string. Desc: post template id
 *
 * translation_id - Type: string. Desc: the post_stable_id of the translated post
 * @param {postDraftCreatedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postDraftCreated = function(params) {
    return {
        evid: 305,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} hoverOnTooltipParams
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - origin
 * @property {string} role - role
 * @property {string} text - the tooltip text
 * @property {string} tooltip_name - tooltip name
 **/
/**
 * Name: hover on tooltip. Evid: 413.
 * Event description: Fired when the user hovers a tooltip.

 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: origin
 *
 * role - Type: string. Desc: role
 *
 * text - Type: string. Desc: the tooltip text
 *
 * tooltip_name - Type: string. Desc: tooltip name
 * @param {hoverOnTooltipParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var hoverOnTooltip = function(params) {
    return {
        evid: 413,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppActionSheetOptionClickParams
 * @property {string} action_name - the option the user clicked / selected on the modal
 * @property {string} action_sheet_name - action name
 * @property {GUID} instance_id - instance
 * @property {GUID} biToken - msid
 * @property {string} origin - what triggered this action
 * @property {string} role - role
 * @property {GUID} visitor_id - visitor
 **/
/**
 * Name: OneApp - Action sheet option click. Evid: 1323.
 * Event description: Generic event to track clicks within an action sheet in OneApp.

 * action_name - Type: string. Desc: the option the user clicked / selected on the modal
 *
 * action_sheet_name - Type: string. Desc: action name
 *
 * instance_id - Type: guid. Desc: instance
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: what triggered this action
 *
 * role - Type: string. Desc: role
 *
 * visitor_id - Type: guid. Desc: visitor
 * @param {oneAppActionSheetOptionClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppActionSheetOptionClick = function(params) {
    return {
        evid: 1323,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationGiveFeedbackClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Give feedback click. Evid: 395.
 * Event description: triggered when users click on Give feedback.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationGiveFeedbackClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationGiveFeedbackClick = function(params) {
    return {
        evid: 395,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} appInstallAutopilotParams
 * @property {string} uuid - null
 * @property {string} app_id - installed app id
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 **/
/**
 * Name: app install autopilot. Evid: 402.
 * Event description: sends if app was installed, used for autopilot for post page migration.

 * uuid - Type: string.
 *
 * app_id - Type: string. Desc: installed app id
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 * @param {appInstallAutopilotParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var appInstallAutopilot = function(params) {
    return {
        evid: 402,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} clickingOnPostParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - msid
 * @property {string} origin - Where the post was clicked from ( in this case Comments)
 * @property {string} post_id - The post that was clicked
 * @property {GUID} post_stable_id - post_stable_id
 * @property {string} role - member role
 **/
/**
 * Name: Clicking on Post. Evid: 440.
 * Event description: Sending an event when clicking on Post from Owner App, Comments section.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Where the post was clicked from ( in this case Comments)
 *
 * post_id - Type: string. Desc: The post that was clicked
 *
 * post_stable_id - Type: guid. Desc: post_stable_id
 *
 * role - Type: string. Desc: member role
 * @param {clickingOnPostParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var clickingOnPost = function(params) {
    return {
        evid: 440,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationUpdateSuccessModalOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {string} migration_status - First time, In progress, Done (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Update success modal opened. Evid: 393.
 * Event description: triggered when Migration Update URLs modal actually open.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * migration_status - Type: string. Desc: First time, In progress, Done (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationUpdateSuccessModalOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationUpdateSuccessModalOpened = function(params) {
    return {
        evid: 393,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationQuickMigrationAdParams
 * @property {string} action - switch, find out more, later, close
 * @property {boolean} do_not_show_again - do not show again flag
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - new blog 6th button, old blog 6th button, old blog manager, add panel
 * @property {string} post_id - post id
 **/
/**
 * Name: Migration -> Quick Migration ad action. Evid: 397.
 * Event description: Whenever the user clicks one option from the switch to new blog ad. The ad appears within the editor, on the new and old blog 6th button and on the old blog manager..

 * action - Type: string. Desc: switch, find out more, later, close
 *
 * do_not_show_again - Type: bool. Desc: do not show again flag
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: new blog 6th button, old blog 6th button, old blog manager, add panel
 *
 * post_id - Type: string. Desc: post id
 * @param {migrationQuickMigrationAdParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationQuickMigrationAd = function(params) {
    return {
        evid: 397,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} authorOfflineCreatedParams
 * @property {GUID} author_id - Author id which was created
 * @property {string} author_name - Author name
 * @property {string} author_role - Currently "Offline", might be reused later
 * @property {string} author_title - author title
 * @property {boolean} has_picture - TRUE if a picture is assigned for created author
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 **/
/**
 * Name: Author (offline) created. Evid: 365.
 * Event description: Created an offline author.

 * author_id - Type: guid. Desc: Author id which was created
 *
 * author_name - Type: string. Desc: Author name
 *
 * author_role - Type: string. Desc: Currently "Offline", might be reused later
 *
 * author_title - Type: string. Desc: author title
 *
 * has_picture - Type: bool. Desc: TRUE if a picture is assigned for created author
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 * @param {authorOfflineCreatedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var authorOfflineCreated = function(params) {
    return {
        evid: 365,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneappBlogSearchResultsParams
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {number} num_of_items - Number of items found
 * @property {string} origin - Where tabs was opened (Manage)
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tab_name - Posts, categories, Authors, Tags
 * @property {string} text - Text entered in a search
 **/
/**
 * Name: Oneapp - blog search results. Evid: 1337.
 * Event description: Number of posts found in search in OneApp Manage.

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * num_of_items - Type: numeric. Desc: Number of items found
 *
 * origin - Type: string. Desc: Where tabs was opened (Manage)
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tab_name - Type: string. Desc: Posts, categories, Authors, Tags
 *
 * text - Type: string. Desc: Text entered in a search
 * @param {oneappBlogSearchResultsParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneappBlogSearchResults = function(params) {
    return {
        evid: 1337,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogCategoryInfoChangedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {number} category_count - current amount of categories i the blog
 * @property {string} category_id - category_id
 * @property {boolean} category_label - category label was changed
 * @property {string} community_id - community_id (instance of members app)
 * @property {boolean} image - image was edited (OneApp only)
 * @property {GUID} instance_id - instance_id
 * @property {string} language - language
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 * @property {boolean} seo_description - seo_description was edited (OneApp only)
 * @property {boolean} seo_name - seo_name was changed
 * @property {string} translation_id - the id of the the translated category
 **/
/**
 * Name: blog category info changed. Evid: 312.
 * Event description: triggered when an exiting category edited in the app settings - title or description.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * category_count - Type: numeric. Desc: current amount of categories i the blog
 *
 * category_id - Type: string. Desc: category_id
 *
 * category_label - Type: bool. Desc: category label was changed
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * image - Type: bool. Desc: image was edited (OneApp only)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: language
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * seo_description - Type: bool. Desc: seo_description was edited (OneApp only)
 *
 * seo_name - Type: bool. Desc: seo_name was changed
 *
 * translation_id - Type: string. Desc: the id of the the translated category
 * @param {blogCategoryInfoChangedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogCategoryInfoChanged = function(params) {
    return {
        evid: 312,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} searchInBlogBoParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {number} num_posts_found - Number of posts found in search
 * @property {string} origin - Search origin
 * @property {string} role - member role (owner, writer, member)
 * @property {string} text - Text entered in a search
 **/
/**
 * Name: Search in Blog BO. Evid: 343.
 * Event description: Search in Blog BO.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * num_posts_found - Type: numeric. Desc: Number of posts found in search
 *
 * origin - Type: string. Desc: Search origin
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * text - Type: string. Desc: Text entered in a search
 * @param {searchInBlogBoParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var searchInBlogBo = function(params) {
    return {
        evid: 343,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} fileUploadedParams
 * @property {string} file_ext - File extension
 * @property {string} file_id - The file identifier (null if not successful)
 * @property {number} file_size - The size of the file being uploaded (in bytes)
 * @property {GUID} instance_id - null
 * @property {string} mime_type - File type
 * @property {GUID} biToken - metasite id
 * @property {string} origin - post (for now just post)
 * @property {string} post_id - post_id
 * @property {string} role - role
 * @property {boolean} success - 0 - upload failed / 1 - upload successful
 **/
/**
 * Name: File uploaded. Evid: 317.
 * Event description: Event triggered when a person tries to upload a file to a Blog post.

 * file_ext - Type: string. Desc: File extension
 *
 * file_id - Type: string. Desc: The file identifier (null if not successful)
 *
 * file_size - Type: numeric. Desc: The size of the file being uploaded (in bytes)
 *
 * instance_id - Type: guid.
 *
 * mime_type - Type: string. Desc: File type
 *
 * biToken - Type: guid. Desc: metasite id
 *
 * origin - Type: string. Desc: post (for now just post)
 *
 * post_id - Type: string. Desc: post_id
 *
 * role - Type: string. Desc: role
 *
 * success - Type: bool. Desc: 0 - upload failed / 1 - upload successful
 * @param {fileUploadedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var fileUploaded = function(params) {
    return {
        evid: 317,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogSettingsSavedInBmParams
 * @property {number} amp_changed - 1 - changed, 0 - didn't
 * @property {number} amp_enabled - 1 - enabled, 0 - didn't
 * @property {string} app_id - app_id
 * @property {number} emailmembers_changed - 1 - changed, 0 - didn't
 * @property {number} emailmembers_enabled - 1 - enabled, 0 - didn't
 * @property {number} emailsubscribers_changed - 1 - changed, 0 - didn't
 * @property {number} emailsubscribers_enabled - 1 - enabled, 0 - didn't
 * @property {GUID} instance_id - null
 * @property {number} logo_changed - 1 - added/changed, 0 - didn't
 * @property {GUID} biToken - null
 * @property {string} origin - BM_posts
 * @property {string} role - role
 * @property {number} schema_changed - 1 - changed, 0 - didn't
 * @property {number} schema_enabled - 1 - enabled, 0 - didn't
 * @property {string} settings - json string with values 0 - disabled, 1 - enabled, e.g. {AMP: 1, Schema: 0, logo : 0 }
 **/
/**
 * Name: Blog settings saved (in BM). Evid: 361.
 * Event description: Blog settings saved (in BM).

 * amp_changed - Type: numeric. Desc: 1 - changed, 0 - didn't
 *
 * amp_enabled - Type: numeric. Desc: 1 - enabled, 0 - didn't
 *
 * app_id - Type: string. Desc: app_id
 *
 * emailmembers_changed - Type: numeric. Desc: 1 - changed, 0 - didn't
 *
 * emailmembers_enabled - Type: numeric. Desc: 1 - enabled, 0 - didn't
 *
 * emailsubscribers_changed - Type: numeric. Desc: 1 - changed, 0 - didn't
 *
 * emailsubscribers_enabled - Type: numeric. Desc: 1 - enabled, 0 - didn't
 *
 * instance_id - Type: guid.
 *
 * logo_changed - Type: numeric. Desc: 1 - added/changed, 0 - didn't
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: BM_posts
 *
 * role - Type: string. Desc: role
 *
 * schema_changed - Type: numeric. Desc: 1 - changed, 0 - didn't
 *
 * schema_enabled - Type: numeric. Desc: 1 - enabled, 0 - didn't
 *
 * settings - Type: string. Desc: json string with values 0 - disabled, 1 - enabled, e.g. {AMP: 1, Schema: 0, logo : 0 }
 * @param {blogSettingsSavedInBmParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogSettingsSavedInBm = function(params) {
    return {
        evid: 361,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postDeletedParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} category_ids - category_ids. JSON array string
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_published - 0 - not published (draft) / 1 - published
 * @property {string} language - for multilingual
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - stable id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} translation_id - translation id
 **/
/**
 * Name: post deleted. Evid: 306.
 * Event description: triggered when post deleted.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * category_ids - Type: string. Desc: category_ids. JSON array string
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_published - Type: bool. Desc: 0 - not published (draft) / 1 - published
 *
 * language - Type: string. Desc: for multilingual
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: stable id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * translation_id - Type: string. Desc: translation id
 * @param {postDeletedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postDeleted = function(params) {
    return {
        evid: 306,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} unpublishPostParams
 * @property {string} action - revert to draft, move trash
 * @property {GUID} instance_id - null
 * @property {string} language - for multilingual
 * @property {GUID} biToken - null
 * @property {string} origin - post page, post editor
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post stable id
 * @property {string} translation_id - posts stable id of the original translated post
 **/
/**
 * Name: Unpublish post. Evid: 332.
 * Event description: When a post is unpublished..

 * action - Type: string. Desc: revert to draft, move trash
 *
 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: post page, post editor
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post stable id
 *
 * translation_id - Type: string. Desc: posts stable id of the original translated post
 * @param {unpublishPostParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var unpublishPost = function(params) {
    return {
        evid: 332,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} noteClickParams
 * @property {string} app_id - app_id
 * @property {GUID} instance_id - null
 * @property {GUID} bi_token - site id - msid
 * @property {GUID} biToken - null
 * @property {string} parent_resource_id - notes' parent entity GUID ( e.g. post, group, event, post etc)
 * @property {string} role - can be : owner , writer, editor
 * @property {GUID} site_member_id - member ID after logging to Wix site
 * @property {GUID} visitor_id - visitor ID
 **/
/**
 * Name: Note click. Evid: 439.
 * Event description: BI event firing when clicking on Note in Post Editor.

 * app_id - Type: string. Desc: app_id
 *
 * instance_id - Type: guid.
 *
 * bi_token - Type: guid. Desc: site id - msid
 *
 * biToken - Type: guid.
 *
 * parent_resource_id - Type: string. Desc: notes' parent entity GUID ( e.g. post, group, event, post etc)
 *
 * role - Type: string. Desc: can be : owner , writer, editor
 *
 * site_member_id - Type: guid. Desc: member ID after logging to Wix site
 *
 * visitor_id - Type: guid. Desc: visitor ID
 * @param {noteClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var noteClick = function(params) {
    return {
        evid: 439,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesStartFromABlankTemplateClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} templateCategory - template category
 * @property {string} template_id - template id
 * @property {string} template_name - template name
 **/
/**
 * Name: Post templates: Start from a Blank template click. Evid: 430.
 * Event description: triggered when click on use this template CTA.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * templateCategory - Type: string. Desc: template category
 *
 * template_id - Type: string. Desc: template id
 *
 * template_name - Type: string. Desc: template name
 * @param {postTemplatesStartFromABlankTemplateClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesStartFromABlankTemplateClick = function(params) {
    return {
        evid: 430,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppSharePostButtonClick304Params
 * @property {GUID} instance_id - instance_id
 * @property {GUID} biToken - msid
 * @property {string} origin - Instant after publish or later while reading (from banner)
 * @property {GUID} post_id - post_id
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: OneApp Share post button click. Evid: 304.
 * Event description: User clicked on share post button (to copy url).

 * instance_id - Type: guid. Desc: instance_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Instant after publish or later while reading (from banner)
 *
 * post_id - Type: guid. Desc: post_id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {oneAppSharePostButtonClick304Params} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppSharePostButtonClick304 = function(params) {
    return {
        evid: 304,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} blogManagerOpenClickBoParams
 * @property {string} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {string} member_id - member_id
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {GUID} original_instance_id - in the members app events. holds the child app (forum/blog) instance_id
 * @property {string} referral_info - external links - facebook, social networks. if from wix then null
 * @property {string} role - member role (owner, writer, member)
 **/
/**
 * Name: blog manager open click (BO). Evid: 300.
 * Event description: triggered when click on Manage posts CTA.

 * app_id - Type: string. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * member_id - Type: string. Desc: member_id
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * original_instance_id - Type: guid. Desc: in the members app events. holds the child app (forum/blog) instance_id
 *
 * referral_info - Type: string. Desc: external links - facebook, social networks. if from wix then null
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 * @param {blogManagerOpenClickBoParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var blogManagerOpenClickBo = function(params) {
    return {
        evid: 300,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postEditorHelpPanelClickParams
 * @property {string} click_name - click name
 * @property {GUID} instance_id - null
 * @property {string} language - Language
 * @property {GUID} biToken - msid
 * @property {string} origin - null
 * @property {string} post_id - post id
 * @property {GUID} post_stable_id - post. stable id
 * @property {string} role - role
 * @property {string} translation_id - translation_id
 **/
/**
 * Name: Post Editor: Help Panel click. Evid: 432.
 * Event description: Whenever a user clicks on any link on the help panel..

 * click_name - Type: string. Desc: click name
 *
 * instance_id - Type: guid.
 *
 * language - Type: string. Desc: Language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string.
 *
 * post_id - Type: string. Desc: post id
 *
 * post_stable_id - Type: guid. Desc: post. stable id
 *
 * role - Type: string. Desc: role
 *
 * translation_id - Type: string. Desc: translation_id
 * @param {postEditorHelpPanelClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postEditorHelpPanelClick = function(params) {
    return {
        evid: 432,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationHomePageOpenedParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {boolean} is_full_width - is_full_width (with left nav or not)
 * @property {string} migration_status - First time, In progress, Done (after finishing migration)
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> home page opened. Evid: 380.
 * Event description: triggered when Migration home page opened actually open.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * is_full_width - Type: bool. Desc: is_full_width (with left nav or not)
 *
 * migration_status - Type: string. Desc: First time, In progress, Done (after finishing migration)
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationHomePageOpenedParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationHomePageOpened = function(params) {
    return {
        evid: 380,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} editorSettingsLayoutTabParams
 * @property {string} app_id - app_id
 * @property {string} editor_layout - Computer/Mobile
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} origin - Post Page Settings, app settings (feed)
 * @property {string} role - role
 * @property {string} settings - setting name, i.e. layout, post load, posts per page
 * @property {string} tab_name - All poss feed/Category Page
 * @property {string} value - setting chosen, i.e. Tiled (for layout), On scroll down (for post load), 7 (for posts per page)
 * @property {number} value_pagination_size - number of posts per page/per load
 * @property {string} value_pagination_type - With page numbers, on scroll....
 * @property {string} view_mode - desktop, mobile. NOTE: any Null values belong to desktop
 * @property {string} widget_name - Feed, Custom Feed
 **/
/**
 * Name: editor - settings layout tab. Evid: 357.
 * Event description: Layout settings changed in editor. For custom feed all settings are returned in value field, for blog app it's spread to value, value_pagination_type, value_pagination_size. Use "settings" field to distinguish what was changed, origin - to identify blog app (main feed) and custom feed.

 * app_id - Type: string. Desc: app_id
 *
 * editor_layout - Type: string. Desc: Computer/Mobile
 *
 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * origin - Type: string. Desc: Post Page Settings, app settings (feed)
 *
 * role - Type: string. Desc: role
 *
 * settings - Type: string. Desc: setting name, i.e. layout, post load, posts per page
 *
 * tab_name - Type: string. Desc: All poss feed/Category Page
 *
 * value - Type: string. Desc: setting chosen, i.e. Tiled (for layout), On scroll down (for post load), 7 (for posts per page)
 *
 * value_pagination_size - Type: numeric. Desc: number of posts per page/per load
 *
 * value_pagination_type - Type: string. Desc: With page numbers, on scroll....
 *
 * view_mode - Type: string. Desc: desktop, mobile. NOTE: any Null values belong to desktop
 *
 * widget_name - Type: string. Desc: Feed, Custom Feed
 * @param {editorSettingsLayoutTabParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var editorSettingsLayoutTab = function(params) {
    return {
        evid: 357,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} oneAppPostSwipeActionParams
 * @property {GUID} instance_id - null
 * @property {boolean} is_published - is_published
 * @property {string} language - language
 * @property {GUID} biToken - msid
 * @property {string} origin - Manage
 * @property {string} post_id - post_id
 * @property {GUID} post_stable_id - stable id
 * @property {string} role - member role (owner, writer, member)
 * @property {string} tab_name - tab name in Manage (Published/Drafts)
 * @property {string} translation_id - translation_id
 **/
/**
 * Name: OneApp Post Swipe action. Evid: 1303.
 * Event description: User did a swipe action in OneApp.

 * instance_id - Type: guid.
 *
 * is_published - Type: bool. Desc: is_published
 *
 * language - Type: string. Desc: language
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: Manage
 *
 * post_id - Type: string. Desc: post_id
 *
 * post_stable_id - Type: guid. Desc: stable id
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * tab_name - Type: string. Desc: tab name in Manage (Published/Drafts)
 *
 * translation_id - Type: string. Desc: translation_id
 * @param {oneAppPostSwipeActionParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var oneAppPostSwipeAction = function(params) {
    return {
        evid: 1303,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} postTemplatesUseThisTemplateClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_offline - if the event happened offline
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 * @property {string} templateCategory - template category
 * @property {string} template_id - template id
 * @property {string} template_name - template name
 **/
/**
 * Name: Post templates: Use this template click. Evid: 426.
 * Event description: triggered when click on use this template CTA.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * is_offline - Type: bool. Desc: if the event happened offline
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 *
 * templateCategory - Type: string. Desc: template category
 *
 * template_id - Type: string. Desc: template id
 *
 * template_name - Type: string. Desc: template name
 * @param {postTemplatesUseThisTemplateClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var postTemplatesUseThisTemplateClick = function(params) {
    return {
        evid: 426,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} newCategoryClickParams
 * @property {GUID} app_id - app_id (forum, blog, members)
 * @property {string} community_id - community_id (instance of members app)
 * @property {GUID} instance_id - instance_id
 * @property {string} language - for multilingual
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} role - member role (owner, writer, member)
 * @property {GUID} site_member_id - site_member_id
 **/
/**
 * Name: new category click. Evid: 375.
 * Event description: triggered when click on "new category" CTA.

 * app_id - Type: guid. Desc: app_id (forum, blog, members)
 *
 * community_id - Type: string. Desc: community_id (instance of members app)
 *
 * instance_id - Type: guid. Desc: instance_id
 *
 * language - Type: string. Desc: for multilingual
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * role - Type: string. Desc: member role (owner, writer, member)
 *
 * site_member_id - Type: guid. Desc: site_member_id
 * @param {newCategoryClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var newCategoryClick = function(params) {
    return {
        evid: 375,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} paidPostInsidePostEditorSidebarParams
 * @property {GUID} instance_id - null
 * @property {GUID} biToken - null
 * @property {string} option - Get Started/Learn More
 * @property {string} role - role
 **/
/**
 * Name: Paid Post inside post editor sidebar. Evid: 377.
 * Event description: Option chosen inside Paid Post in post editor sidebar.

 * instance_id - Type: guid.
 *
 * biToken - Type: guid.
 *
 * option - Type: string. Desc: Get Started/Learn More
 *
 * role - Type: string. Desc: role
 * @param {paidPostInsidePostEditorSidebarParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var paidPostInsidePostEditorSidebar = function(params) {
    return {
        evid: 377,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
/**
 * @typedef {Object} migrationMaybeLaterClickParams
 * @property {GUID} instance_id - instance_id
 * @property {boolean} is_first - is it the first time the user opens this tab?
 * @property {GUID} biToken - msid
 * @property {string} origin - which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 * @property {string} referral_info - referral_info
 * @property {string} role - role
 **/
/**
 * Name: Migration -> Maybe later click. Evid: 382.
 * Event description: triggered when users click on Maybe later click.

 * instance_id - Type: guid. Desc: instance_id
 *
 * is_first - Type: bool. Desc: is it the first time the user opens this tab?
 *
 * biToken - Type: guid. Desc: msid
 *
 * origin - Type: string. Desc: which page the action took place in - home_page, category_page, post_page, members_page, recent_posts, mega_menu, post_editor
 *
 * referral_info - Type: string. Desc: referral_info
 *
 * role - Type: string. Desc: role
 * @param {migrationMaybeLaterClickParams} params The parameters for this event.
 * @return {Object} LogObject
**/
export var migrationMaybeLaterClick = function(params) {
    return {
        evid: 382,
        src: 69,
        endpoint: 'blog-app-users',
        params: params
    };
};
//# sourceMappingURL=index.js.map