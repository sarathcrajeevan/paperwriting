import {
    ScheduleStatus,
} from '@wix/ambassador-services-catalog-server/types';
import {
    PaymentType
} from '@wix/bookings-uou-types';
export function oneTimePricing(paymentOptions, rate) {
    var paymentFromRate = mapPaymentFromRate(rate, paymentOptions);
    return {
        isFree: paymentFromRate.isFree,
        priceText: paymentFromRate.priceText,
        paymentType: paymentFromRate.paymentType,
        currency: paymentFromRate.currency,
        price: paymentFromRate.price,
        deposit: paymentFromRate.minCharge,
    };
}
export function mapServicePaymentDto(serviceResponse) {
    var rate = serviceResponse.schedules.find(function(serviceSchedule) {
        return serviceSchedule.status === ScheduleStatus.CREATED;
    }).rate;
    var _a = oneTimePricing(serviceResponse.service.paymentOptions, rate),
        isFree = _a.isFree,
        priceText = _a.priceText,
        paymentType = _a.paymentType,
        currency = _a.currency,
        price = _a.price,
        deposit = _a.deposit;
    return {
        currency: currency,
        price: price,
        isFree: isFree,
        priceText: priceText,
        minCharge: deposit,
        paymentType: paymentType,
    };
}
export function mapPaymentOptionsToPaymentType(paymentOptions) {
    if (paymentOptions.wixPayOnline && !paymentOptions.wixPayInPerson) {
        return PaymentType.ONLINE;
    }
    if (!paymentOptions.wixPayOnline && paymentOptions.wixPayInPerson) {
        return PaymentType.OFFLINE;
    }
    return PaymentType.BOTH;
}
export function mapPaymentFromRate(rate, paymentOptions) {
    var _a;
    var currency = null,
        price = 0,
        minCharge = 0;
    var priceText = rate === null || rate === void 0 ? void 0 : rate.priceText;
    if ((_a = rate === null || rate === void 0 ? void 0 : rate.labeledPriceOptions) === null || _a === void 0 ? void 0 : _a.general) {
        currency = rate.labeledPriceOptions.general.currency;
        price = Number(rate.labeledPriceOptions.general.amount);
        minCharge = Number(rate.labeledPriceOptions.general.downPayAmount);
    }
    var isFree = isFreeService(paymentOptions, price);
    price = isFree ? 0 : price;
    var paymentType = paymentOptions && !isFree ?
        mapPaymentOptionsToPaymentType(paymentOptions) :
        PaymentType.OFFLINE;
    return {
        isFree: isFree,
        priceText: priceText,
        paymentType: paymentType,
        currency: currency,
        price: price,
        minCharge: minCharge
    };
}
export function isFreeService(paymentOptions, price) {
    return !!(paymentOptions === null || paymentOptions === void 0 ? void 0 : paymentOptions.custom) || (!price && !(paymentOptions === null || paymentOptions === void 0 ? void 0 : paymentOptions.wixPaidPlan));
}
//# sourceMappingURL=service-payment.mapper.js.map