var DurationFormatter = /** @class */ (function() {
    function DurationFormatter(t) {
        this.t = t;
    }
    /**
     * @param {string} rfcStartTime - example 2020-05-16T13:00:00.000+03:00
     * @param {string} rfcEndTime - example 2020-05-16T14:00:00.000+03:00
     * @returns {number} 3600000
     */
    DurationFormatter.prototype.getDurationInMs = function(rfcStartTime, rfcEndTime) {
        var startDate = new Date(rfcStartTime).getTime();
        var endDate = new Date(rfcEndTime).getTime();
        return Math.abs(endDate - startDate);
    };
    /**
     * @param {number} durationInMs - example 5400000
     * @param {DurationMapperOptions} durationMapperOptions - example { hourUnit: 'duration.units.hours', minuteUnit: 'duration.units.minutes' }
     * @returns {number} example 1 hr 30 min
     */
    DurationFormatter.prototype.formatDurationFromMS = function(durationInMs, durationMapperOptions) {
        var secondsInMinutes = 60;
        var minutesInHour = 60;
        var hoursInADay = 24;
        var msInSecond = 1000;
        var msInMinute = secondsInMinutes * msInSecond;
        var msInHour = minutesInHour * msInMinute;
        var hours = Math.floor((durationInMs / msInHour) %
            hoursInADay);
        var minutes = Math.floor((durationInMs / msInMinute) % minutesInHour);
        var hourText = this.t(durationMapperOptions.hourUnit, {
            hours: hours
        });
        var minuteText = this.t(durationMapperOptions.minuteUnit, {
            minutes: minutes
        });
        return hours ? hourText + (minutes ? " " + minuteText : '') : minuteText;
    };
    return DurationFormatter;
}());
export default DurationFormatter;
//# sourceMappingURL=durationFormatter.js.map