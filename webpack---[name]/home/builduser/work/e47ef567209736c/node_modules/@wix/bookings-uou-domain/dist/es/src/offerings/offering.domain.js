import {
    OfferedAsType,
    OfferingType,
} from './offering.dto';
export {
    OfferedAsType
};
var simpleStaffMembersExtractor = function(dto) {
    return dto.schedulePolicy.staffMembersIds;
};
var classHoursStaffMembersExtractor = function(dto) {
    var classHours = dto.schedule.classHours;
    var relevantStaffIds = Object.keys(classHours)
        .map(function(dayOfWeek) {
            return classHours[dayOfWeek];
        })
        .reduce(function(map, dayIntervals) {
            if (dayIntervals && dayIntervals.workingHours) {
                dayIntervals.workingHours.forEach(function(workingHour) {
                    if (workingHour.staffId) {
                        map[workingHour.staffId] = true;
                    }
                });
            }
            return map;
        }, {});
    return Object.keys(relevantStaffIds);
};
var StaffMembersExtractorFactory = /** @class */ (function() {
    function StaffMembersExtractorFactory() {}
    StaffMembersExtractorFactory.fromDto = function(dto) {
        switch (dto.type) {
            case OfferingType.INDIVIDUAL:
                return simpleStaffMembersExtractor;
            case OfferingType.COURSE:
            case OfferingType.GROUP:
                return classHoursStaffMembersExtractor;
            default:
                return function() {
                    return null;
                };
        }
    };
    return StaffMembersExtractorFactory;
}());
var OfferingFactory = /** @class */ (function() {
    function OfferingFactory() {}
    OfferingFactory.fromDto = function(dto) {
        return dto ?
            new Offering(dto, StaffMembersExtractorFactory.fromDto(dto)) :
            null;
    };
    return OfferingFactory;
}());
export {
    OfferingFactory
};
var Offering = /** @class */ (function() {
    function Offering(dto, staffMembersExtractor) {
        this.dto = dto;
        this.staffMembersExtractor = staffMembersExtractor;
        //
    }
    Offering.prototype.toDto = function() {
        return this.dto;
    };
    Object.defineProperty(Offering.prototype, "staffMemberIds", {
        get: function() {
            return this.staffMembersExtractor(this.dto);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "id", {
        get: function() {
            return this.dto.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "type", {
        get: function() {
            return this.dto.type;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "categoryId", {
        get: function() {
            return this.dto.categoryId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "order", {
        get: function() {
            return this.dto.order;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "name", {
        get: function() {
            return this.dto.info.name;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "description", {
        get: function() {
            return this.dto.info.description;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "tagLine", {
        get: function() {
            return this.dto.info.tagLine;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "images", {
        get: function() {
            return this.dto.info.images;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "urlName", {
        get: function() {
            return this.dto.urlName;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "capacity", {
        get: function() {
            return this.dto.schedulePolicy.capacity;
        },
        enumerable: false,
        configurable: true
    });
    Offering.prototype.hasDuration = function() {
        return 'durationInMinutes' in this.dto.schedule;
    };
    Offering.prototype.hasRepeatEveryXWeeks = function() {
        return 'repeatEveryXWeeks' in this.dto.schedule;
    };
    Object.defineProperty(Offering.prototype, "duration", {
        get: function() {
            return this.hasDuration() ?
                this.dto.schedule.durationInMinutes :
                null;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "currency", {
        get: function() {
            return this.dto.payment.currency;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "startDate", {
        get: function() {
            return this.dto.schedule.startDate;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "endDate", {
        get: function() {
            return this.dto.schedule.endDate;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "price", {
        get: function() {
            return this.dto.payment.price;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "isFree", {
        get: function() {
            return this.dto.payment.isFree;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "priceText", {
        get: function() {
            return this.dto.payment.priceText;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "paymentType", {
        get: function() {
            return this.dto.payment.paymentType;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "isHidden", {
        get: function() {
            return this.dto.schedulePolicy.uouHidden;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "dummy", {
        get: function() {
            return !!this.dto.dummy;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Offering.prototype, "offeredAs", {
        get: function() {
            return this.dto.offeredAs;
        },
        enumerable: false,
        configurable: true
    });
    return Offering;
}());
export {
    Offering
};
//# sourceMappingURL=offering.domain.js.map