"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CatalogOfferingDtoBuilder = void 0;
var offering_dto_1 = require("./offering.dto");
var offering_info_dto_builder_1 = require("../entities/offering-info/offering-info.dto.builder");
var offering_payment_dto_buillder_1 = require("../entities/offering-payment/offering-payment.dto.buillder");
var offering_schedule_policy_dto_builder_1 = require("../entities/offering-schedule-policy/offering-schedule-policy.dto.builder");
var offering_schedule_header_dto_builder_1 = require("../entities/offering-schedule-header/offering-schedule-header.dto.builder");
var CatalogOfferingDtoBuilder = /** @class */ (function() {
    function CatalogOfferingDtoBuilder() {
        this.idGenerator = function() {
            return "offering-id-" + Math.random();
        };
        this.offering = this.validCatalogOffering();
    }
    CatalogOfferingDtoBuilder.prototype.validCatalogOffering = function() {
        return {
            id: this.idGenerator(),
            categoryId: this.idGenerator(),
            order: 0,
            type: offering_dto_1.OfferingType.INDIVIDUAL,
            urlName: 'offering-id-0',
            fullUrl: 'https://kaki.com/offering-id-0',
            offeredAs: [offering_dto_1.OfferedAsType.ONE_TIME],
            pricingPlanInfo: {
                displayText: null,
                pricingPlans: [],
            },
            info: new offering_info_dto_builder_1.OfferingInfoDtoBuilder().build(),
            payment: new offering_payment_dto_buillder_1.OfferingPaymentDtoBuilder().build(),
            schedulePolicy: new offering_schedule_policy_dto_builder_1.OfferingSchedulePolicyDtoBuilder().build(),
            scheduleHeader: new offering_schedule_header_dto_builder_1.OfferingScheduleHeaderDtoBuilder().build(),
        };
    };
    CatalogOfferingDtoBuilder.prototype.withId = function(id) {
        this.offering.id = id;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withDummyIndication = function() {
        this.offering.dummy = true;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withPricingPlanDisplayText = function(displayText) {
        this.offering.pricingPlanInfo.displayText = displayText;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withUrlName = function(urlName) {
        this.offering.urlName = urlName;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withFullUrl = function(fullUrl) {
        this.offering.fullUrl = fullUrl;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withType = function(offeringType) {
        this.offering.type = offeringType;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withCategoryId = function(cid) {
        this.offering.categoryId = cid;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withName = function(name) {
        this.offering.info.name = name;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withPricePlan = function(pricingPlanName) {
        this.offering.offeredAs = [offering_dto_1.OfferedAsType.PRICING_PLAN];
        this.offering.pricingPlanInfo = {
            displayText: "in pricing plan: " + pricingPlanName,
            pricingPlans: [{
                id: '1',
                name: pricingPlanName
            }],
        };
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withDescription = function(description) {
        this.offering.info.description = description;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withTagLine = function(tagLine) {
        this.offering.info.tagLine = tagLine;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withCapacity = function(capacity) {
        this.offering.schedulePolicy.capacity = capacity;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withInfo = function(info) {
        this.offering.info = info;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withOrder = function(order) {
        this.offering.order = order;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withPayment = function(payment) {
        this.offering.payment = payment;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withSchedulePolicy = function(schedulePolicy) {
        this.offering.schedulePolicy = schedulePolicy;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.withScheduleHeader = function(scheduleHeader) {
        this.offering.scheduleHeader = scheduleHeader;
        return this;
    };
    CatalogOfferingDtoBuilder.prototype.build = function() {
        return this.offering;
    };
    return CatalogOfferingDtoBuilder;
}());
exports.CatalogOfferingDtoBuilder = CatalogOfferingDtoBuilder;
//# sourceMappingURL=catalog-offering.dto.builder.js.map