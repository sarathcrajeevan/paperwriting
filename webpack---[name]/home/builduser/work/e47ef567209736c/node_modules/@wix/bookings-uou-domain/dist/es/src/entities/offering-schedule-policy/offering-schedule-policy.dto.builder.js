var OfferingSchedulePolicyDtoBuilder = /** @class */ (function() {
    function OfferingSchedulePolicyDtoBuilder() {
        this.schedulePolicy = {
            bookUpToXMinutesBefore: 0,
            maxParticipantsPerOrder: 1,
            capacity: 1,
            uouHidden: false,
            displayOnlyNoBookFlow: false,
            futureBookingsPolicy: {
                shouldLimit: false,
                limitXMinutesToTheFuture: 60,
            },
            isPendingApprovalFlow: false,
            isPassedStartDate: false,
            isPassedEndDate: false,
        };
    }
    OfferingSchedulePolicyDtoBuilder.prototype.withMaxParticipantsPerOrder = function(maxParticipantsPerOrder) {
        this.schedulePolicy.maxParticipantsPerOrder = maxParticipantsPerOrder;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withCapacity = function(capacity) {
        this.schedulePolicy.capacity = capacity;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withUouHidden = function(uouHidden) {
        this.schedulePolicy.uouHidden = uouHidden;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withFutureBookingsPolicy = function(futureBookingsPolicy) {
        this.schedulePolicy.futureBookingsPolicy = futureBookingsPolicy;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withBookUpToXMinutesBefore = function(bookUpToXMinutesBefore) {
        this.schedulePolicy.bookUpToXMinutesBefore = bookUpToXMinutesBefore;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withDisplayOnlyNoBookFlow = function(displayOnlyNoBookFlow) {
        this.schedulePolicy.displayOnlyNoBookFlow = displayOnlyNoBookFlow;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withIsPendingApprovalFlow = function(isPendingApprovalFlow) {
        this.schedulePolicy.isPendingApprovalFlow = isPendingApprovalFlow;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withIsPassedStartDate = function(isPassedStartDate) {
        this.schedulePolicy.isPassedStartDate = isPassedStartDate;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.withIsPassedEndDate = function(isPassedEndDate) {
        this.schedulePolicy.isPassedEndDate = isPassedEndDate;
        return this;
    };
    OfferingSchedulePolicyDtoBuilder.prototype.build = function() {
        return this.schedulePolicy;
    };
    return OfferingSchedulePolicyDtoBuilder;
}());
export {
    OfferingSchedulePolicyDtoBuilder
};
//# sourceMappingURL=offering-schedule-policy.dto.builder.js.map