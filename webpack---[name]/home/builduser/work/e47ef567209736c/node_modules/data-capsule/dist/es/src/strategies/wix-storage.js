import {
    __assign,
    __extends
} from "tslib";
import axios from 'axios';
import {
    BaseStorage
} from '../base-storage';
import {
    NOT_FOUND,
    SERVER_ERROR
} from '../utils/constants';

function getCookieValue(name) {
    if (typeof document === 'undefined') {
        return '';
    } else {
        return (document.cookie.match(name + "=([^;]*)") || ['']).pop();
    }
}
export function getUserId() {
    var wixClient = getCookieValue('wixClient').split('|');
    return wixClient[6] || getCookieValue('_wixCIDX');
}
var WixStorageStrategy = /** @class */ (function(_super) {
    __extends(WixStorageStrategy, _super);

    function WixStorageStrategy(_a) {
        var signedInstance = (_a === void 0 ? {} : _a).signedInstance;
        var _this = _super.call(this) || this;
        _this.axiosInstance = axios.create({
            headers: headers({
                signedInstance: signedInstance
            }),
        });
        return _this;
    }
    WixStorageStrategy.prototype.extendScope = function(scope) {
        return __assign({
            userId: getUserId()
        }, (typeof scope === 'string' ? {
            siteId: scope
        } : scope));
    };
    WixStorageStrategy.prototype.setItem = function(key, value, options) {
        var payload = {
            nameSpace: options.namespace,
            key: key,
            blob: value,
        };
        if (typeof options.scope === 'object' && options.scope.siteId) {
            payload.siteId = options.scope.siteId;
        }
        if (options.expiration) {
            payload.TTLInDays = Math.ceil(options.expiration / (60 * 60 * 24));
        }
        return this.axiosInstance
            .post('/_api/wix-user-preferences-webapp/set', payload)
            .then(function() {
                return undefined;
            })
            .catch(function() {
                throw SERVER_ERROR;
            });
    };
    WixStorageStrategy.prototype.removeItem = function(key, options) {
        var payload = {
            nameSpace: options.namespace,
            key: key,
        };
        if (typeof options.scope === 'object' && options.scope.siteId) {
            payload.siteId = options.scope.siteId;
        }
        return this.axiosInstance
            .post('/_api/wix-user-preferences-webapp/delete', payload)
            .then(function() {
                return undefined;
            })
            .catch(function() {
                throw SERVER_ERROR;
            });
    };
    WixStorageStrategy.prototype.getItem = function(key, options) {
        var siteId = typeof options.scope === 'object' ? options.scope.siteId : undefined;
        var path = siteId ? 'getVolatilePrefForSite' : 'getVolatilePrefForKey';
        var url = [
                '/_api/wix-user-preferences-webapp',
                path,
                options.namespace,
                siteId,
                key,
            ]
            .filter(function(x) {
                return x;
            })
            .join('/');
        return this.axiosInstance
            .get(url)
            .then(function(res) {
                return res.data[key];
            })
            .catch(function(err) {
                var _a;
                throw ((_a = err === null || err === void 0 ? void 0 : err.response) === null || _a === void 0 ? void 0 : _a.status) === 404 ? NOT_FOUND : SERVER_ERROR;
            });
    };
    WixStorageStrategy.prototype.getAllItems = function(options) {
        var siteId = typeof options.scope === 'object' ? options.scope.siteId : undefined;
        var path = siteId ? 'getVolatilePrefsForSite' : 'getVolatilePrefs';
        var url = [
                '/_api/wix-user-preferences-webapp',
                path,
                options.namespace,
                siteId,
            ]
            .filter(function(x) {
                return x;
            })
            .join('/');
        return this.axiosInstance
            .get(url)
            .then(function(res) {
                return res.data;
            })
            .catch(function() {
                throw SERVER_ERROR;
            });
    };
    return WixStorageStrategy;
}(BaseStorage));
export {
    WixStorageStrategy
};

function headers(_a) {
    var signedInstance = _a.signedInstance;
    var headers = {}; // eslint-disable-line no-shadow
    if (signedInstance) {
        headers.authorization = signedInstance;
    }
    return headers;
}
//# sourceMappingURL=wix-storage.js.map