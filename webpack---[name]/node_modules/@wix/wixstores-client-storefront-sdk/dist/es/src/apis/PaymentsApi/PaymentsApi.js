import {
    __awaiter,
    __extends,
    __generator
} from "tslib";
import {
    BaseApi
} from '../BaseApi';
import {
    query as getPaymentsQuery
} from '../../graphql/getPayments.graphql';
import {
    GraphQLOperations,
    RemoteSourceTypes
} from '../constants';
var PaymentsApi = /** @class */ (function(_super) {
    __extends(PaymentsApi, _super);

    function PaymentsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PaymentsApi.prototype.fetchPayments = function(variables) {
        return __awaiter(this, void 0, void 0, function() {
            var response;
            return __generator(this, function(_a) {
                switch (_a.label) {
                    case 0:
                        return [4 /*yield*/ , this.fetch({
                            variables: variables,
                            query: getPaymentsQuery,
                            operationName: GraphQLOperations.GetPayments,
                        }, RemoteSourceTypes.NodeReadWrite, true)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/ , response.data.payments];
                }
            });
        });
    };
    return PaymentsApi;
}(BaseApi));
export {
    PaymentsApi
};
//# sourceMappingURL=PaymentsApi.js.map