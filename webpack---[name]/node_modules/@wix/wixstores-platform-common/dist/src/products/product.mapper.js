"use strict";
var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.productWithVariantsMapper = exports.productDbDriverMapper = exports.productMapper = void 0;
var utils_1 = require("./../utils");
var product_dto_1 = require("./product.dto");
var mappers_1 = require("./mappers");
var utils_2 = require("../utils");
var productVariants_mapper_1 = require("../productVariants/productVariants.mapper");
exports.productMapper = function(item) {
    return __assign(__assign({
        _id: item.id,
        _updatedDate: new Date(item.lastUpdated),
        name: item.name,
        description: item.description
    }, mappers_1.mediaMapper(item.media)), {
        sku: item.sku,
        ribbons: item.ribbons,
        currency: item.priceData.currency,
        price: item.priceData.price,
        discountedPrice: item.priceData.discountedPrice,
        formattedPrice: item.priceData.formatted.price,
        formattedDiscountedPrice: item.priceData.formatted.discountedPrice,
        pricePerUnit: item.priceData.pricePerUnit,
        formattedPricePerUnit: item.priceData.formatted.pricePerUnit,
        pricePerUnitData: item.pricePerUnitData,
        inventoryItemId: item.inventoryItemId,
        discount: {
            type: item.discount ? item.discount.type : product_dto_1.DiscountType.undefined,
            value: item.discount ? item.discount.value : null,
        },
        trackInventory: item.stock.trackInventory,
        inStock: item.stock.inStock,
        quantityInStock: item.stock.quantity,
        additionalInfoSections: item.additionalInfoSections,
        productOptions: (item.productOptions || []).reduce(function(options, option) {
            var _a;
            return (__assign(__assign({}, options), (_a = {}, _a[option.name] = __assign(__assign({}, utils_2.omitMedia(option)), {
                choices: option.choices.map(function(choice) {
                    return (__assign(__assign({}, utils_2.omitMedia(choice)), mappers_1.mediaMapper(choice.media)));
                })
            }), _a)));
        }, {}),
        productPageUrl: item.productPageUrl.path,
        customTextFields: item.customTextFields,
        manageVariants: item.manageVariants,
        productType: item.productType,
        slug: item.slug,
        weight: item.weight,
        collections: item.collections ? item.collections : undefined,
        seoData: item.seoData,
        ribbon: item.ribbon,
        brand: item.brand
    });
};
exports.productDbDriverMapper = function(item) {
    var _a = exports.productWithVariantsMapper(item),
        _ = _a.inventoryItemId,
        mappedProduct = __rest(_a, ["inventoryItemId"]);
    var product = __assign(__assign({}, mappedProduct), {
        inventoryItem: item.inventoryItemId,
        _updatedDate: utils_1.createWixCodeDateTimeObject.fromISODate(item.lastUpdated)
    });
    if (!product.variants.length) {
        delete product.variants;
    }
    return product;
};
exports.productWithVariantsMapper = function(item) {
    return __assign(__assign({}, exports.productMapper(item)), {
        variants: item.variants ? productVariants_mapper_1.productVariantsMapper(item) : []
    });
};
//# sourceMappingURL=product.mapper.js.map