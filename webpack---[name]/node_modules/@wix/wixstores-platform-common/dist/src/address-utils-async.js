"use strict";
var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new(P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }

        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }

        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function(thisArg, body) {
    var _ = {
            label: 0,
            sent: function() {
                if (t[0] & 1) throw t[1];
                return t[1];
            },
            trys: [],
            ops: []
        },
        f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;

    function verb(n) {
        return function(v) {
            return step([n, v]);
        };
    }

    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [0];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [6, e];
            y = 0;
        } finally {
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createPlatformizedWixCodeAddressObject = void 0;
var node_fetch_1 = require("node-fetch");
var locale_dataset_javascript_1 = require("@wix/locale-dataset-javascript");
var translateAddress = function(countryKey, regionKey, instanceResolver) {
    return __awaiter(void 0, void 0, void 0, function() {
        var instance, url, q, query;
        return __generator(this, function(_a) {
            instance = instanceResolver();
            url = 'https://www.wix.com/_api/wix-ecommerce-graphql-web/api';
            q = "\n  query getLocaleData($language: String!, $countryKeys: [String!], $regionKeys: [String!]) {\n    localeData(language: $language) {\n      countries(keys: $countryKeys) {\n        displayName\n        subdivisions {\n          regions(keys: $regionKeys) {\n            displayName\n          }\n        }\n      }\n    }\n  }\n  ";
            query = {
                query: q,
                source: 'ecom-mapper',
                variables: {
                    language: 'en',
                    countryKeys: [countryKey],
                    regionKeys: [regionKey],
                },
                operationName: 'getLocaleData',
            };
            return [2 /*return*/ , node_fetch_1.default(url, {
                    credentials: 'include',
                    headers: {
                        accept: '*/*',
                        Authorization: instance,
                        'content-type': 'application/json',
                    },
                    body: JSON.stringify(query),
                    method: 'POST',
                })
                .then(function(res) {
                    return res.json();
                })
                .then(function(res) {
                    return res.data && __assign({}, res.data.localeData);
                })
            ];
        });
    });
};
var extractSubdivisionCode = function(subdivision) {
    var subdivisions = subdivision.split('-');
    if (subdivisions && subdivisions.length > 1) {
        return subdivisions[1];
    }
    return subdivision;
};
exports.createPlatformizedWixCodeAddressObject = function(address, instance) {
    return __awaiter(void 0, void 0, void 0, function() {
        var countryDisplayName, subdivisionDisplayName, addressLine1, localizedAddress, countryData, countryKey, subdivisionData, res, translatedCountry;
        return __generator(this, function(_a) {
            switch (_a.label) {
                case 0:
                    if (!address) {
                        return [2 /*return*/ , ''];
                    }
                    countryDisplayName = null, subdivisionDisplayName = null;
                    addressLine1 = address.addressLine ||
                        (address.streetAddress && address.streetAddress.name + " " + address.streetAddress.number) ||
                        '';
                    localizedAddress = __assign(__assign({}, address), {
                        addressLine1: addressLine1,
                        zipCode: address.postalCode
                    });
                    countryData = null;
                    if (address.country) {
                        countryData = locale_dataset_javascript_1.default.getCountryByShortKey(address.country);
                        if (countryData) {
                            countryDisplayName = countryData.displayName;
                        }
                    } else {
                        return [2 /*return*/ , ''];
                    }
                    if (address.subdivision) {
                        countryKey = countryData ? countryData.key : address.country;
                        subdivisionData = locale_dataset_javascript_1.default.getStateByKey(countryKey, extractSubdivisionCode(address.subdivision));
                        if (subdivisionData) {
                            subdivisionDisplayName = subdivisionData.displayName;
                        }
                    }
                    return [4 /*yield*/ , translateAddress(countryDisplayName, subdivisionDisplayName, instance)];
                case 1:
                    res = _a.sent();
                    translatedCountry = res && res.countries[0];
                    if (translatedCountry) {
                        localizedAddress.country = translatedCountry.displayName;
                        if (translatedCountry.subdivisions && translatedCountry.subdivisions.regions.length) {
                            localizedAddress.subdivision = translatedCountry.subdivisions.regions[0].displayName;
                        }
                    }
                    return [2 /*return*/ , locale_dataset_javascript_1.default.getFormattedAddress(localizedAddress, localizedAddress.country).trim()];
            }
        });
    });
};
//# sourceMappingURL=address-utils-async.js.map