"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getFormattedAddress = void 0;
var ADDRESS_PARTS = {
    country: 'country',
    subdivision: 'subdivision',
    addressLine1: 'addressLine1',
    addressLine2: 'addressLine2',
    city: 'city',
    zipCode: 'zipCode',
    firstName: 'firstName',
    lastName: 'lastName',
    company: 'company',
    phone: 'phone',
};
var DEFAULT_FORMAT = '{{firstName}} {{lastName}}\n{{company}}\n{{addressLine1}}, {{addressLine2}}\n{{city}}, {{subdivision}} {{zipCode}}\n{{country}}\n{{phone}}';
exports.getFormattedAddress = function(addressParts, formatPattern) {
    var address = formatPattern ? formatPattern : DEFAULT_FORMAT;
    var emptyParts = address
        .split('\n')
        .map(function(line) {
            return line.split(',').map(function(commaSection) {
                return commaSection.replace(/{{[^}]+}}/g, '');
            });
        });
    return address
        .split('\n')
        .map(function(line, lineIndex) {
            return line
                .split(',')
                .map(function(lineSection, commaIndex) {
                    if (lineSection === '') {
                        return lineSection;
                    }
                    var replacedLineSection = lineSection;
                    Object.keys(ADDRESS_PARTS).forEach(function(key) {
                        replacedLineSection = replacedLineSection.replace("{{" + key + "}}", addressParts[key] || '');
                    });
                    if (emptyParts[lineIndex][commaIndex] === replacedLineSection) {
                        return null;
                    }
                    return replacedLineSection;
                })
                .filter(function(lineSectionAfterReplace) {
                    return lineSectionAfterReplace !== null;
                })
                .join(',');
        })
        .join('\n')
        .replace(/\n+\s*/g, '\n');
};
//# sourceMappingURL=addressFormat.js.map