var __extends = (this && this.__extends) || (function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({
                    __proto__: []
                }
                instanceof Array && function(d, b) {
                    d.__proto__ = b;
                }) ||
            function(d, b) {
                for (var p in b)
                    if (b.hasOwnProperty(p)) d[p] = b[p];
            };
        return extendStatics(d, b);
    };
    return function(d, b) {
        extendStatics(d, b);

        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new(P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }

        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }

        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function(thisArg, body) {
    var _ = {
            label: 0,
            sent: function() {
                if (t[0] & 1) throw t[1];
                return t[1];
            },
            trys: [],
            ops: []
        },
        f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;

    function verb(n) {
        return function(v) {
            return step([n, v]);
        };
    }

    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [0];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [6, e];
            y = 0;
        } finally {
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import {
    getSettingsValue
} from '@wix/tpa-settings';
import {
    getSiteLanguage,
    isSSR
} from '../helpers';
import {
    buildSentryOptions,
    getArtifact,
    getMultilingualLanguage,
} from '../utils';
import Translations from '../i18next/Translations';
import {
    ViewerScriptEnvironment
} from '../environment/ViewerScript';
import {
    ControllerEnvironment
} from '../environment/Controller';
import {
    FlowAPI
} from './Base';
var ControllerFlowAPI = /** @class */ (function(_super) {
    __extends(ControllerFlowAPI, _super);

    function ControllerFlowAPI(_a) {
        var viewerScriptFlowAPI = _a.viewerScriptFlowAPI,
            controllerConfig = _a.controllerConfig,
            appDefinitionId = _a.appDefinitionId,
            translationsConfig = _a.translationsConfig,
            widgetId = _a.widgetId,
            biLogger = _a.biLogger,
            prepopulatedData = _a.prepopulatedData;
        var _b, _c, _d, _e, _f, _g;
        var _this = _super.call(this, {
            experimentsConfig: null,
            httpClient: viewerScriptFlowAPI._httpClient,
        }) || this;
        _this.appLoadStarted = function() {
            var appLoadStarted = _this.fedopsLogger.appLoadStarted;
            appLoadStarted.call(_this.fedopsLogger);
            _this.fedopsLogger.appLoadStarted = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                console.warn("ðŸ¥º Seems like you're trying to call `fedopsLogger.appLoadStarted` and `fedopsLogger.appLoaded` in your controller.\nWe are already logging load events for SSR and CSR environments, so you can remove these calls from your project.");
                appLoadStarted.call.apply(appLoadStarted, __spreadArrays([_this.fedopsLogger], args));
            };
        };
        /**
         * @deprecated
         * "isSSR()" method is deprecated and moved to flowAPI.environment.isSSR
         */
        _this.isSSR = function() {
            return _this.environment.isSSR;
        };
        /**
         * @deprecated
         * "isMobile()" method is deprecated and moved to flowAPI.environment.isSSR
         */
        _this.isMobile = function() {
            return _this.environment.isMobile;
        };
        /**
         * @deprecated
         * "isRTL()" method is deprecated and moved to flowAPI.environment.isSSR
         */
        _this.isRTL = function() {
            return _this.environment.isRTL;
        };
        _this.controllerConfig = controllerConfig;
        _this.getExperiments = viewerScriptFlowAPI.getExperiments;
        _this.sentryMonitor = viewerScriptFlowAPI.sentryMonitor;
        _this.translationsConfig = translationsConfig;
        var platformAPIs = controllerConfig.platformAPIs;
        _this.biLogger = viewerScriptFlowAPI.biLogger;
        _this.widgetId = widgetId;
        /**
         * @deprecated
         * "flowAPI.multilingual" is deprecated and moved to flowAPI.environment.multilingual
         */
        _this.multilingual = viewerScriptFlowAPI.multilingual;
        /**
         * @deprecated
         * "flowAPI.inEditor" is deprecated and moved to flowAPI.environment.isEditor
         */
        _this.inEditor = viewerScriptFlowAPI.inEditor;
        _this.environment = new ControllerEnvironment({
            wixAPI: controllerConfig.wixCodeApi,
            appData: controllerConfig.appParams,
            config: controllerConfig.config,
            widgetId: widgetId,
        });
        // If viewer script bi logger wasn't initialized (in case viewer script is external or some error appear here),
        // we still want to init bi logger in controller.
        if (!viewerScriptFlowAPI.biLogger &&
            biLogger && ((_b = controllerConfig.platformAPIs) === null || _b === void 0 ? void 0 : _b.biLoggerFactory)) {
            var biFactory = (_c = controllerConfig.platformAPIs) === null || _c === void 0 ? void 0 : _c.biLoggerFactory();
            var biOptions = {
                visitor_id: (_d = controllerConfig.platformAPIs.bi) === null || _d === void 0 ? void 0 : _d.visitorId,
                token: (_e = controllerConfig.platformAPIs.bi) === null || _e === void 0 ? void 0 : _e.biToken,
                origin: 'viewer',
                appName: viewerScriptFlowAPI.appName,
                projectName: viewerScriptFlowAPI.projectName,
                _msid: (_f = controllerConfig.platformAPIs.bi) === null || _f === void 0 ? void 0 : _f.metaSiteId,
            };
            _this.biLogger = biLogger(biFactory)({});
            _this.biLogger.util.updateDefaults(biOptions);
        }
        _this.fedopsLogger = (_g = prepopulatedData === null || prepopulatedData === void 0 ? void 0 : prepopulatedData.fedopsLogger) !== null && _g !== void 0 ? _g : platformAPIs.fedOpsLoggerFactory.getLoggerForWidget({
            appId: appDefinitionId,
            widgetId: widgetId,
        });
        if (_this.sentryMonitor) {
            _this.reportError = _this.sentryMonitor.captureException.bind(_this.sentryMonitor);
        }
        _this.appLoadStarted();
        _this.getSiteLanguage = viewerScriptFlowAPI.getSiteLanguage.bind(viewerScriptFlowAPI);
        _this.getTranslations = viewerScriptFlowAPI.getTranslations.bind(_this);
        _this.translations = viewerScriptFlowAPI.translations;
        _this.settings = {
            get: function(param) {
                return getSettingsValue(_this.controllerConfig.config.publicData, param, {
                    t: _this.translations.t,
                    isMobile: _this.environment.isMobile,
                    language: getMultilingualLanguage(_this.multilingual),
                });
            },
        };
        return _this;
    }
    ControllerFlowAPI.prototype.updateControllerConfig = function(config) {
        this.controllerConfig.config = config;
    };
    return ControllerFlowAPI;
}(FlowAPI));
export {
    ControllerFlowAPI
};
var ViewerScriptFlowAPI = /** @class */ (function(_super) {
    __extends(ViewerScriptFlowAPI, _super);

    function ViewerScriptFlowAPI(_a) {
        var experimentsConfig = _a.experimentsConfig,
            platformServices = _a.platformServices,
            sentryConfig = _a.sentryConfig,
            wixAPI = _a.wixAPI,
            appData = _a.appData,
            translationsConfig = _a.translationsConfig,
            _b = _a.defaultTranslations,
            defaultTranslations = _b === void 0 ? null : _b,
            biConfig = _a.biConfig,
            biLogger = _a.biLogger,
            inEditor = _a.inEditor,
            projectName = _a.projectName,
            appName = _a.appName,
            prepopulatedData = _a.prepopulatedData,
            createHttpClient = _a.optionalDeps.createHttpClient;
        var _this = _super.call(this, {
            experimentsConfig: experimentsConfig,
            prepopulatedData: prepopulatedData,
            httpClient: createHttpClient === null || createHttpClient === void 0 ? void 0 : createHttpClient({
                isSSR: isSSR(wixAPI)
            }),
        }) || this;
        _this.getTranslations = function() {
            return __awaiter(_this, void 0, void 0, function() {
                var _a;
                return __generator(this, function(_b) {
                    return [2 /*return*/ , (_a = this.translations) === null || _a === void 0 ? void 0 : _a.all];
                });
            });
        };
        /**
         * @deprecated
         * "inEditor" is deprecated and moved to flowAPI.environment.isEditor
         */
        _this.inEditor = inEditor;
        _this.appName = appName;
        _this.projectName = projectName;
        _this.environment = new ViewerScriptEnvironment({
            appData: appData,
            wixAPI: wixAPI,
        });
        /**
         * @deprecated
         * "flowAPI.getSiteLanugage" is deprecated and moved to flowAPI.environment.language
         */
        _this.getSiteLanguage = function(fallbackLanguage) {
            if (fallbackLanguage === void 0) {
                fallbackLanguage = 'en';
            }
            return getSiteLanguage(wixAPI, fallbackLanguage || (translationsConfig === null || translationsConfig === void 0 ? void 0 : translationsConfig.default), _this.environment.isEditor);
        };
        /**
         * @deprecated
         * "flowAPI.multilingual" is deprecated and moved to flowAPI.environment.multilingual
         */
        _this.multilingual = wixAPI.window.multilingual;
        var language = _this.getSiteLanguage(translationsConfig === null || translationsConfig === void 0 ? void 0 : translationsConfig.default);
        _this.translations = new Translations({
            language: language,
            defaultTranslations: defaultTranslations,
            prefix: translationsConfig === null || translationsConfig === void 0 ? void 0 : translationsConfig.prefix,
            defaultLanguage: translationsConfig === null || translationsConfig === void 0 ? void 0 : translationsConfig.default,
            autoFetchDisabled: !translationsConfig,
        });
        var platformBI = platformServices === null || platformServices === void 0 ? void 0 : platformServices.bi;
        if (prepopulatedData === null || prepopulatedData === void 0 ? void 0 : prepopulatedData.biLogger) {
            _this.biLogger = prepopulatedData === null || prepopulatedData === void 0 ? void 0 : prepopulatedData.biLogger;
        } else if ((biConfig === null || biConfig === void 0 ? void 0 : biConfig.visitor) &&
            platformBI && (platformServices === null || platformServices === void 0 ? void 0 : platformServices.biLoggerFactory) &&
            biLogger) {
            var biFactory = platformServices.biLoggerFactory();
            var biOptions = {
                visitor_id: platformBI.visitorId,
                token: platformBI.biToken,
                origin: 'viewer',
                appName: appName,
                projectName: projectName,
                _msid: platformBI.metaSiteId,
            };
            _this.biLogger = biLogger(biFactory)({});
            _this.biLogger.util.updateDefaults(biOptions);
        }
        if (prepopulatedData === null || prepopulatedData === void 0 ? void 0 : prepopulatedData.sentryMonitor) {
            _this.sentryMonitor = prepopulatedData === null || prepopulatedData === void 0 ? void 0 : prepopulatedData.sentryMonitor;
        } else if (sentryConfig) {
            var sentryOptions_1 = buildSentryOptions(sentryConfig.DSN, 'Viewer:Worker', getArtifact());
            _this.sentryMonitor = platformServices === null || platformServices === void 0 ? void 0 : platformServices.monitoring.createMonitor(sentryOptions_1.dsn, function(config) {
                return (__assign(__assign({}, config), sentryOptions_1.config));
            });
        }
        if (_this.sentryMonitor) {
            _this.reportError = _this.sentryMonitor.captureException.bind(_this.sentryMonitor);
        }
        return _this;
    }
    return ViewerScriptFlowAPI;
}(FlowAPI));
export {
    ViewerScriptFlowAPI
};
//# sourceMappingURL=ViewerScript.js.map