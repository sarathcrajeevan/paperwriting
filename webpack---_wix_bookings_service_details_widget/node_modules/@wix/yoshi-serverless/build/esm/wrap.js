export function method(__fn__) {
    // Explain that this is done in build-time
    return {
        __fn__: __fn__,
    };
}
export function route(_route_) {
    return _route_;
}

function joinUrls(baseUrl, relativeUrl) {
    return baseUrl.replace(/\/+$/, '') + '/' + relativeUrl.replace(/^\/+/, '');
}
var baseUrl = typeof window !== 'undefined' &&
    window.location.hostname === 'static.parastorage.com' ?
    "https://www.wix.com" :
    '';
export function dsl(_a) {
    var _b;
    var fileName = _a.fileName,
        functionName = _a.functionName;
    var base;
    // This imcludes isCI as well: when the define plugin is
    // setting EXPERIMENTAL_YOSHI_SERVERLESS_HASH, it is also checking for isCI.
    if (process.env.EXPERIMENTAL_YOSHI_SERVERLESS_HASH !== 'false') {
        // Server e2e tests, not need for base -
        // It is already set by setting baseUrl by the user
        if (process.env.NODE_ENV === 'test') {
            base = '';
        } else {
            // Will be replaced inside user's client bundle with actual base
            base = '/serverless-yoshi-sandbox3/bookings-service-details-widget-0a40c5a14c02cb55326fc8aed3d3c297';
        }
    } else {
        // This merging `EXPERIMENTAL_YOSHI_SERVERLESS_HASH`, this should be removed
        base = (_b = process.env.YOSHI_SERVERLESS_BASE) !== null && _b !== void 0 ? _b : '';
    }
    return function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return {
            url: joinUrls("" + baseUrl + base, "/_api_/" + fileName),
            method: 'POST',
            data: {
                fileName: fileName,
                functionName: functionName,
                args: args,
            },
            _pickResponseBody: '.payload',
            _logs: '.logs',
        };
    };
}
//# sourceMappingURL=wrap.js.map