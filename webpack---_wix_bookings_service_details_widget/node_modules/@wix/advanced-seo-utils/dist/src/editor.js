"use strict";
var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
        for (var k in mod)
            if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getIndexableValue = exports.updateSettingById = exports.getSettingValueById = exports.isRobotsTagValueSupported = exports.getRobotsTagValueWithoutDirective = exports.getRobotsTagValueWithDirective = exports.getDirectiveValue = exports.isRobotsDirectiveExists = exports.REMOVE_ROBOTS_DIRECTIVE_OVERRIDE_VALUE = exports.MAX_VIDEO_PREVIEW_DEFAULT_VALUE = exports.MAX_SNIPPET_DEFAULT_VALUE = exports.MAX_IMAGE_PREVIEW_VALUES = exports.ROBOTS_DIRECTIVES = exports.resolveLegacyCustomSd = exports.updateStructuredDataVariant = exports.deleteStructuredData = exports.updateStructuredData = exports.twitterCardSupportedTypes = exports.transformCustomTagsToIdentified = exports.createTranslateByItemType = exports.resolveIsIndexable = exports.updateCustomTagsArray = exports.validateCustomTagLegacy = exports.validateCustomTag = exports.getSimplifiedTag = exports.updateSimplifiedSeoTag = exports.getSimplifiedTagsArray = exports.getAdvancedSeoTags = exports.getAdapter = exports.resolveWithPatterns = exports.getValueByIdentifierFromContext = exports.fillPatternValue = exports.fillInPatternBlob = exports.getPatternBlob = exports.SCHEMA_PRESET_TYPES = exports.ITEM_TYPES = exports.sanitizeUrl = exports.convertTpaModel = exports.convertSeoModel = exports.convertPlatformMetaTagsModel = exports.convertDynamicPageModel = exports.filterUnidentifiedHtmlTags = exports.buildOgImageFullUrl = exports.buildOgImagePreview = exports.resolve = exports.substractSchemas = exports.parse = exports.filterBasicSeoTags = exports.renderToStaticMarkup = exports.applyDefaultTags = exports.compareCustomTags = exports.updateCustomTags = exports.updateValueByIdentifier = exports.validateCustomTags = exports.validateTagValueByIdentifier = exports.getCustomTagsArray = exports.getCustomTagsString = exports.getDefaultValueByIdentifier = exports.getValueFromHtmlTagLegacy = exports.getValueFromHtmlTag = exports.getMetaByIdentifier = exports.getSchemasArray = exports.getValueByIdentifier = exports.SETTING_IDS = exports.SD_STATUS = exports.GENERAL_IDENTIFIERS = exports.TWITTER_IDENTIFIERS = exports.IDENTIFIERS = exports.CONTEXT_PROPS = exports.VALIDATORS = exports.ERROR_NAMES = exports.ERRORS = void 0;
var render_to_static_markup_1 = require("./private/renderer/render-to-static-markup");
Object.defineProperty(exports, "renderToStaticMarkup", {
    enumerable: true,
    get: function() {
        return render_to_static_markup_1.renderToStaticMarkup;
    }
});
var resolve_1 = require("./private/renderer/resolve");
Object.defineProperty(exports, "resolve", {
    enumerable: true,
    get: function() {
        return resolve_1.resolve;
    }
});
var resolve_with_patterns_1 = require("./private/renderer/resolve-with-patterns");
Object.defineProperty(exports, "resolveWithPatterns", {
    enumerable: true,
    get: function() {
        return resolve_with_patterns_1.resolveWithPatterns;
    }
});
var resolve_is_indexable_1 = require("./private/renderer/utils/resolve-is-indexable");
Object.defineProperty(exports, "resolveIsIndexable", {
    enumerable: true,
    get: function() {
        return resolve_is_indexable_1.resolveIsIndexable;
    }
});
Object.defineProperty(exports, "getIndexableValue", {
    enumerable: true,
    get: function() {
        return resolve_is_indexable_1.getIndexableValue;
    }
});
var apply_default_tags_1 = require("./private/tags/defaults/apply-default-tags");
Object.defineProperty(exports, "applyDefaultTags", {
    enumerable: true,
    get: function() {
        return apply_default_tags_1.applyDefaultTags;
    }
});
var parse_1 = require("./private/renderer/utils/parse");
Object.defineProperty(exports, "parse", {
    enumerable: true,
    get: function() {
        return parse_1.parse;
    }
});
var substract_schemas_1 = require("./private/tags/filters/substract-schemas");
Object.defineProperty(exports, "substractSchemas", {
    enumerable: true,
    get: function() {
        return substract_schemas_1.substractSchemas;
    }
});
var filter_unidentified_html_tags_1 = require("./private/renderer/utils/filter-unidentified-html-tags");
Object.defineProperty(exports, "filterUnidentifiedHtmlTags", {
    enumerable: true,
    get: function() {
        return filter_unidentified_html_tags_1.filterUnidentifiedHtmlTags;
    }
});
var filter_basic_seo_tags_1 = require("./private/tags/filters/filter-basic-seo-tags");
Object.defineProperty(exports, "filterBasicSeoTags", {
    enumerable: true,
    get: function() {
        return filter_basic_seo_tags_1.filterBasicSeoTags;
    }
});
var sanitize_url_1 = require("./private/utils/sanitize-url");
Object.defineProperty(exports, "sanitizeUrl", {
    enumerable: true,
    get: function() {
        return sanitize_url_1.sanitizeUrl;
    }
});
var itemTypesTranslation_1 = require("./private/types/itemTypesTranslation");
Object.defineProperty(exports, "createTranslateByItemType", {
    enumerable: true,
    get: function() {
        return itemTypesTranslation_1.createTranslateByItemType;
    }
});
var tags_1 = require("./private/tags");
Object.defineProperty(exports, "getValueFromHtmlTag", {
    enumerable: true,
    get: function() {
        return tags_1.getValueFromHtmlTag;
    }
});
Object.defineProperty(exports, "getValueFromHtmlTagLegacy", {
    enumerable: true,
    get: function() {
        return tags_1.getValueFromHtmlTagLegacy;
    }
});
Object.defineProperty(exports, "validateCustomTags", {
    enumerable: true,
    get: function() {
        return tags_1.validateCustomTags;
    }
});
Object.defineProperty(exports, "validateTagValueByIdentifier", {
    enumerable: true,
    get: function() {
        return tags_1.validateTagValueByIdentifier;
    }
});
Object.defineProperty(exports, "getValueByIdentifierFromContext", {
    enumerable: true,
    get: function() {
        return tags_1.getValueByIdentifierFromContext;
    }
});
Object.defineProperty(exports, "getAdvancedSeoTags", {
    enumerable: true,
    get: function() {
        return tags_1.getAdvancedSeoTags;
    }
});
Object.defineProperty(exports, "getSimplifiedTagsArray", {
    enumerable: true,
    get: function() {
        return tags_1.getSimplifiedTagsArray;
    }
});
Object.defineProperty(exports, "updateSimplifiedSeoTag", {
    enumerable: true,
    get: function() {
        return tags_1.updateSimplifiedSeoTag;
    }
});
Object.defineProperty(exports, "getSimplifiedTag", {
    enumerable: true,
    get: function() {
        return tags_1.getSimplifiedTag;
    }
});
Object.defineProperty(exports, "validateCustomTag", {
    enumerable: true,
    get: function() {
        return tags_1.validateCustomTag;
    }
});
Object.defineProperty(exports, "validateCustomTagLegacy", {
    enumerable: true,
    get: function() {
        return tags_1.validateCustomTagLegacy;
    }
});
Object.defineProperty(exports, "updateCustomTagsArray", {
    enumerable: true,
    get: function() {
        return tags_1.updateCustomTagsArray;
    }
});
Object.defineProperty(exports, "compareCustomTags", {
    enumerable: true,
    get: function() {
        return tags_1.compareCustomTags;
    }
});
var robots_tag_1 = require("./private/tags/robots-tag/robots-tag");
Object.defineProperty(exports, "ROBOTS_DIRECTIVES", {
    enumerable: true,
    get: function() {
        return robots_tag_1.ROBOTS_DIRECTIVES;
    }
});
Object.defineProperty(exports, "MAX_IMAGE_PREVIEW_VALUES", {
    enumerable: true,
    get: function() {
        return robots_tag_1.MAX_IMAGE_PREVIEW_VALUES;
    }
});
Object.defineProperty(exports, "MAX_SNIPPET_DEFAULT_VALUE", {
    enumerable: true,
    get: function() {
        return robots_tag_1.MAX_SNIPPET_DEFAULT_VALUE;
    }
});
Object.defineProperty(exports, "MAX_VIDEO_PREVIEW_DEFAULT_VALUE", {
    enumerable: true,
    get: function() {
        return robots_tag_1.MAX_VIDEO_PREVIEW_DEFAULT_VALUE;
    }
});
Object.defineProperty(exports, "REMOVE_ROBOTS_DIRECTIVE_OVERRIDE_VALUE", {
    enumerable: true,
    get: function() {
        return robots_tag_1.REMOVE_ROBOTS_DIRECTIVE_OVERRIDE_VALUE;
    }
});
Object.defineProperty(exports, "isRobotsDirectiveExists", {
    enumerable: true,
    get: function() {
        return robots_tag_1.isRobotsDirectiveExists;
    }
});
Object.defineProperty(exports, "getDirectiveValue", {
    enumerable: true,
    get: function() {
        return robots_tag_1.getDirectiveValue;
    }
});
Object.defineProperty(exports, "getRobotsTagValueWithDirective", {
    enumerable: true,
    get: function() {
        return robots_tag_1.getRobotsTagValueWithDirective;
    }
});
Object.defineProperty(exports, "getRobotsTagValueWithoutDirective", {
    enumerable: true,
    get: function() {
        return robots_tag_1.getRobotsTagValueWithoutDirective;
    }
});
Object.defineProperty(exports, "isRobotsTagValueSupported", {
    enumerable: true,
    get: function() {
        return robots_tag_1.isRobotsTagValueSupported;
    }
});
var converters_1 = require("./private/converters");
Object.defineProperty(exports, "convertDynamicPageModel", {
    enumerable: true,
    get: function() {
        return converters_1.convertDynamicPageModel;
    }
});
Object.defineProperty(exports, "convertPlatformMetaTagsModel", {
    enumerable: true,
    get: function() {
        return converters_1.convertPlatformMetaTagsModel;
    }
});
Object.defineProperty(exports, "convertSeoModel", {
    enumerable: true,
    get: function() {
        return converters_1.convertSeoModel;
    }
});
Object.defineProperty(exports, "convertTpaModel", {
    enumerable: true,
    get: function() {
        return converters_1.convertTpaModel;
    }
});
var Errors_1 = require("./private/types/Errors");
Object.defineProperty(exports, "ERRORS", {
    enumerable: true,
    get: function() {
        return Errors_1.ERRORS;
    }
});
Object.defineProperty(exports, "ERROR_NAMES", {
    enumerable: true,
    get: function() {
        return Errors_1.ERROR_NAMES;
    }
});
var setting_ids_1 = require("./private/settings/setting-ids");
Object.defineProperty(exports, "SETTING_IDS", {
    enumerable: true,
    get: function() {
        return setting_ids_1.SETTING_IDS;
    }
});
var VALIDATORS = __importStar(require("./private/types/Validators"));
exports.VALIDATORS = VALIDATORS;
var ContextProps_1 = require("./private/types/ContextProps");
Object.defineProperty(exports, "CONTEXT_PROPS", {
    enumerable: true,
    get: function() {
        return ContextProps_1.CONTEXT_PROPS;
    }
});
var Identifiers_1 = require("./private/types/Identifiers");
Object.defineProperty(exports, "IDENTIFIERS", {
    enumerable: true,
    get: function() {
        return Identifiers_1.IDENTIFIERS;
    }
});
Object.defineProperty(exports, "TWITTER_IDENTIFIERS", {
    enumerable: true,
    get: function() {
        return Identifiers_1.TWITTER_IDENTIFIERS;
    }
});
Object.defineProperty(exports, "GENERAL_IDENTIFIERS", {
    enumerable: true,
    get: function() {
        return Identifiers_1.GENERAL_IDENTIFIERS;
    }
});
var build_og_image_1 = require("./private/utils/build-og-image");
Object.defineProperty(exports, "buildOgImageFullUrl", {
    enumerable: true,
    get: function() {
        return build_og_image_1.buildOgImageFullUrl;
    }
});
var build_og_image_preview_1 = require("./private/utils/build-og-image-preview");
Object.defineProperty(exports, "buildOgImagePreview", {
    enumerable: true,
    get: function() {
        return build_og_image_preview_1.buildOgImagePreview;
    }
});
var patterns_1 = require("./private/patterns");
Object.defineProperty(exports, "getPatternBlob", {
    enumerable: true,
    get: function() {
        return patterns_1.getPatternBlob;
    }
});
Object.defineProperty(exports, "fillInPatternBlob", {
    enumerable: true,
    get: function() {
        return patterns_1.fillInPatternBlob;
    }
});
Object.defineProperty(exports, "fillPatternValue", {
    enumerable: true,
    get: function() {
        return patterns_1.fillPatternValue;
    }
});
var ItemTypes_1 = require("./private/types/ItemTypes");
Object.defineProperty(exports, "ITEM_TYPES", {
    enumerable: true,
    get: function() {
        return ItemTypes_1.ITEM_TYPES;
    }
});
var SchemaPresetTypes_1 = require("./private/types/SchemaPresetTypes");
Object.defineProperty(exports, "SCHEMA_PRESET_TYPES", {
    enumerable: true,
    get: function() {
        return SchemaPresetTypes_1.SCHEMA_PRESET_TYPES;
    }
});
var consts_1 = require("./private/consts");
Object.defineProperty(exports, "SD_STATUS", {
    enumerable: true,
    get: function() {
        return consts_1.SD_STATUS;
    }
});
var adapters_1 = require("./private/adapters");
Object.defineProperty(exports, "getAdapter", {
    enumerable: true,
    get: function() {
        return adapters_1.getAdapter;
    }
});
var transform_custom_tags_to_identified_1 = require("./private/renderer/transform-custom-tags-to-identified");
Object.defineProperty(exports, "transformCustomTagsToIdentified", {
    enumerable: true,
    get: function() {
        return transform_custom_tags_to_identified_1.transformCustomTagsToIdentified;
    }
});
var twitterTagSchemas_1 = require("./private/types/twitterTagSchemas");
Object.defineProperty(exports, "twitterCardSupportedTypes", {
    enumerable: true,
    get: function() {
        return twitterTagSchemas_1.twitterCardSupportedTypes;
    }
});
var get_by_setting_id_1 = require("./private/settings/get-by-setting-id");
var update_by_setting_id_1 = require("./private/settings/update-by-setting-id");
var getMetaByIdentifier = function(_a, identifier) {
    var tags = (_a === void 0 ? {} : _a).tags;
    return tags_1.getMetaByIdentifier(tags, identifier);
};
exports.getMetaByIdentifier = getMetaByIdentifier;
var getDefaultValueByIdentifier = function(_a, identifier, context) {
    var tags = (_a === void 0 ? {} : _a).tags;
    return tags_1.getDefaultValueByIdentifier(tags, identifier, context);
};
exports.getDefaultValueByIdentifier = getDefaultValueByIdentifier;
var getValueByIdentifier = function(_a, identifier) {
    var tags = (_a === void 0 ? {} : _a).tags;
    return tags_1.getValueByIdentifier(tags, identifier);
};
exports.getValueByIdentifier = getValueByIdentifier;
var getSchemasArray = function(_a, options) {
    var tags = (_a === void 0 ? {} : _a).tags;
    return tags_1.getSchemasArray(tags, options);
};
exports.getSchemasArray = getSchemasArray;
var getCustomTagsString = function(_a) {
    var tags = (_a === void 0 ? {} : _a).tags;
    return tags_1.getCustomTagsString(tags);
};
exports.getCustomTagsString = getCustomTagsString;
var getCustomTagsArray = function(_a) {
    var tags = (_a === void 0 ? {} : _a).tags;
    return tags_1.getCustomTagsArray(tags);
};
exports.getCustomTagsArray = getCustomTagsArray;
var getSettingValueById = function(_a, settingId) {
    var settings = (_a === void 0 ? {} : _a).settings;
    return get_by_setting_id_1.getSettingValueById(settings, settingId);
};
exports.getSettingValueById = getSettingValueById;
var updateValueByIdentifier = function(data, identifier, value, meta, enableValidation, config) {
    if (data === void 0) {
        data = {};
    }
    var updatedTags = tags_1.updateValueByIdentifier((data && data.tags) || [], identifier, value, meta, enableValidation, config);
    return __assign(__assign({}, data), {
        tags: updatedTags
    });
};
exports.updateValueByIdentifier = updateValueByIdentifier;
var updateCustomTags = function(data, value) {
    if (data === void 0) {
        data = {};
    }
    var updatedTags = tags_1.updateCustomTags((data && data.tags) || [], value);
    return __assign(__assign({}, data), {
        tags: updatedTags
    });
};
exports.updateCustomTags = updateCustomTags;
var updateStructuredData = function(data, structuredData, options) {
    if (data === void 0) {
        data = {};
    }
    var updatedTags = tags_1.updateStructuredData(data.tags, structuredData, options);
    return __assign(__assign({}, data), {
        tags: updatedTags
    });
};
exports.updateStructuredData = updateStructuredData;
var deleteStructuredData = function(data, structuredData) {
    if (data === void 0) {
        data = {};
    }
    var updatedTags = tags_1.deleteStructuredData(data.tags, structuredData);
    return __assign(__assign({}, data), {
        tags: updatedTags
    });
};
exports.deleteStructuredData = deleteStructuredData;
var updateSettingById = function(data, settingId, value) {
    if (data === void 0) {
        data = {};
    }
    var updatedSettings = update_by_setting_id_1.updateSettingById(data.settings, settingId, value);
    return __assign(__assign({}, data), {
        settings: updatedSettings
    });
};
exports.updateSettingById = updateSettingById;
var resolveLegacyCustomSd = function(data, generator) {
    if (data === void 0) {
        data = {};
    }
    var updatedTags = tags_1.resolveLegacyCustomSd(data.tags, generator);
    return __assign(__assign({}, data), {
        tags: updatedTags
    });
};
exports.resolveLegacyCustomSd = resolveLegacyCustomSd;
var updateStructuredDataVariant = function(data, sourceSchemaType, selectedVariant) {
    if (data === void 0) {
        data = {};
    }
    var updatedTags = tags_1.updateVariant(data.tags, sourceSchemaType, selectedVariant);
    return __assign(__assign({}, data), {
        tags: updatedTags
    });
};
exports.updateStructuredDataVariant = updateStructuredDataVariant;