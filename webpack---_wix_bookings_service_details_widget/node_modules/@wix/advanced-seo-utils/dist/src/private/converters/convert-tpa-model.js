"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.convertTpaModel = void 0;
var TagTypes_1 = require("../types/TagTypes");

function convertTpaModel(payload) {
    if (!payload) {
        return {
            tags: [],
        };
    }
    var mergedTags = Object.keys(payload)
        .map(function(compId) {
            return ((payload[compId] || {}).compData || {}).meta || {};
        })
        .reduce(function(acc, curr) {
            return Object.assign(acc, curr);
        }, {});
    var linkTagRels = {
        canonical: 'canonical',
        prevLink: 'prev',
        nextLink: 'next',
    };
    return {
        tags: Object.keys(mergedTags)
            .map(function(tag) {
                return !mergedTags[tag] ?
                    false :
                    tag === 'title' ?
                    {
                        type: TagTypes_1.TAG_TYPES.TITLE,
                        children: mergedTags[tag],
                    } :
                    linkTagRels[tag] ?
                    {
                        type: TagTypes_1.TAG_TYPES.LINK,
                        props: {
                            rel: linkTagRels[tag],
                            href: mergedTags[tag],
                        },
                    } :
                    tag.indexOf('og') === 0 ?
                    {
                        type: TagTypes_1.TAG_TYPES.META,
                        props: {
                            property: tag.toLowerCase() === 'ogsitename' ?
                                'og:site_name' :
                                tag.replace(/([a-z])([A-Z])/g, '$1:$2').toLowerCase(),
                            content: mergedTags[tag],
                        },
                    } :
                    {
                        type: TagTypes_1.TAG_TYPES.META,
                        props: {
                            name: tag,
                            content: mergedTags[tag],
                        },
                    };
            })
            .filter(Boolean),
    };
}
exports.convertTpaModel = convertTpaModel;