"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function(mod) {
    return (mod && mod.__esModule) ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
var builders_1 = require("../../types/builders");
var adapter_groups_page_js_1 = __importDefault(require("./adapter-groups-page.js"));
var IDs = adapter_groups_page_js_1.default.IDs;
exports.default = {
    tags: __spreadArrays([
        builders_1.buildTitle("{{" + IDs.GROUP_TAB_TITLE + "}} - {{group.name}} | {{site.name}}"),
        builders_1.buildStandardMeta('description', "{{group.description}}"),
        builders_1.buildStandardMeta('robots', "{{" + IDs.GROUP_ROBOTS + "}}")
    ], builders_1.buildOgMetaRefs(), [
        builders_1.buildOgMeta('og:image', '{{group.image.url}}'),
        builders_1.buildOgMeta('og:image:width', '{{group.image.width}}'),
        builders_1.buildOgMeta('og:image:height', '{{group.image.height}}'),
        builders_1.buildOgMeta('og:site_name', '{{site.name}}'),
        builders_1.buildOgMeta('og:url', '{{group.tab.url}}'),
        builders_1.buildOgMeta('og:type', 'website')
    ], builders_1.buildTwitterMetaRefs(), [
        builders_1.buildLink({
            rel: 'canonical',
            href: '{{group.tab.url}}'
        }),
    ]),
};