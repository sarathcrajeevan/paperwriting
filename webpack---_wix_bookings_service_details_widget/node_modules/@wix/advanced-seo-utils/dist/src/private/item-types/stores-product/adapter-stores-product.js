"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var get_1 = require("../../utils/get");
var update_by_identifier_1 = require("../../tags/values/update-by-identifier");
var ContextProps_1 = require("../../types/ContextProps");
var Identifiers_1 = require("../../types/Identifiers");
var utils_1 = require("../../adapters/utils");
var get_product_full_url_1 = require("./calculated/get-product-full-url");
var consts_1 = require("../../consts");
var IDs = {
    SITE_NAME: 'site.name',
    SITE_URL: 'site.url',
    BUSINESS_NAME: 'site.business.name',
    INDEX_SITE: 'site.index',
    INDEX_PAGE: 'page.index',
    ID: 'product.id',
    SKU: 'product.sku',
    NAME: 'product.name',
    DESCRIPTION: 'product.description',
    BRAND: 'product.brand',
    PRICE: 'product.price',
    CURRENCY: 'product.currency',
    TYPE: 'product.type',
    WEIGHT: 'product.weight',
    AVAILABILITY_SCHEMA: 'product.availability.schema',
    AVAILABILITY_META_TAG: 'product.availability.metaTag',
    SLUG: 'product.slug',
    IMAGE_URL: 'product.image.url',
    IMAGE_WIDTH: 'product.image.width',
    IMAGE_HEIGHT: 'product.image.height',
    IMAGE_ALT: 'product.image.alt',
    THUMBNAIL_URL: 'product.thumbnail.url',
    THUMBNAIL_WIDTH: 'product.thumbnail.width',
    THUMBNAIL_HEIGHT: 'product.thumbnail.height',
    THUMBNAIL_ALT: 'product.thumbnail.alt',
    PRODUCT_PAGE_URL: 'product.url',
    PRODUCT_PAGE_BASE_URL: 'product.baseUrl',
    DISABLE_SCHEMA: 'product.disable-schema',
};
var userVisible = [
    IDs.SITE_NAME,
    IDs.SKU,
    IDs.NAME,
    IDs.DESCRIPTION,
    IDs.BRAND,
    IDs.PRICE,
    IDs.CURRENCY,
    IDs.AVAILABILITY_META_TAG,
    IDs.PRODUCT_PAGE_URL,
    IDs.IMAGE_URL,
];
var userVisibleSdOnly = [
    IDs.IMAGE_HEIGHT,
    IDs.IMAGE_WIDTH,
    IDs.IMAGE_ALT,
    IDs.THUMBNAIL_URL,
    IDs.THUMBNAIL_HEIGHT,
    IDs.THUMBNAIL_WIDTH,
    IDs.THUMBNAIL_ALT,
    IDs.AVAILABILITY_SCHEMA,
    IDs.SITE_URL,
];
var requiredSchemaVariables = [];
var SchemaTypes = {
    STORES_PRODUCT_PAGE: 'stores-product-page-preset',
};
var getSdStatus = function(item) {
    if (utils_1.hasMissingSchemaVariables(requiredSchemaVariables, item)) {
        return consts_1.SD_STATUS.DISABLED_DUE_TO_MISSING_INFO;
    }
    return consts_1.SD_STATUS.ENABLED;
};
exports.default = {
    IDs: IDs,
    SchemaTypes: SchemaTypes,
    requiredSchemaVariables: requiredSchemaVariables,
    getData: function(item) {
        var _a;
        return _a = {},
            _a[IDs.SITE_NAME] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.SITE_NAME),
            _a[IDs.SITE_URL] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.SITE_URL),
            _a[IDs.BUSINESS_NAME] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.BUSINESS_NAME),
            _a[IDs.INDEX_SITE] = get_1.getRawValue(item, "context." + ContextProps_1.CONTEXT_PROPS.INDEX_SITE),
            _a[IDs.INDEX_PAGE] = get_1.getRawValue(item, "context." + ContextProps_1.CONTEXT_PROPS.INDEX_PAGE),
            _a[IDs.ID] = get_1.get(item, 'product.id'),
            _a[IDs.SKU] = get_1.get(item, 'product.sku'),
            _a[IDs.NAME] = get_1.get(item, 'product.name'),
            _a[IDs.DESCRIPTION] = get_1.get(item, 'product.description'),
            _a[IDs.BRAND] = get_1.get(item, 'product.brand'),
            _a[IDs.PRICE] = get_1.get(item, 'product.price.discountedPrice') > 0 ?
            "" + get_1.get(item, 'product.price.discountedPrice') :
            "" + get_1.get(item, 'product.price.price'),
            _a[IDs.CURRENCY] = "" + get_1.get(item, 'product.price.currency'),
            _a[IDs.TYPE] = get_1.get(item, 'product.productType'),
            _a[IDs.WEIGHT] = get_1.get(item, 'product.weight'),
            _a[IDs.AVAILABILITY_SCHEMA] = "" + get_1.get(item, 'product.stock.inStock') === 'true' ?
            'https://schema.org/InStock' :
            'https://schema.org/OutOfStock',
            _a[IDs.AVAILABILITY_META_TAG] = "" + get_1.get(item, 'product.stock.inStock') === 'true' ?
            'InStock' :
            'out of stock',
            _a[IDs.SLUG] = get_1.get(item, 'product.slug'),
            _a[IDs.IMAGE_URL] = get_1.get(item, 'product.media.mainMedia.image.url'),
            _a[IDs.IMAGE_WIDTH] = get_1.get(item, 'product.media.mainMedia.image.width'),
            _a[IDs.IMAGE_HEIGHT] = get_1.get(item, 'product.media.mainMedia.image.height'),
            _a[IDs.IMAGE_ALT] = get_1.get(item, 'product.media.mainMedia.image.alt'),
            _a[IDs.THUMBNAIL_URL] = get_1.get(item, 'product.media.mainMedia.thumbnail.url'),
            _a[IDs.THUMBNAIL_WIDTH] = get_1.get(item, 'product.media.mainMedia.thumbnail.width'),
            _a[IDs.THUMBNAIL_HEIGHT] = get_1.get(item, 'product.media.mainMedia.thumbnail.height'),
            _a[IDs.THUMBNAIL_ALT] = get_1.get(item, 'product.media.mainMedia.thumbnail.alt'),
            _a[IDs.PRODUCT_PAGE_URL] = get_product_full_url_1.getProductFullUrl(item),
            _a[IDs.PRODUCT_PAGE_BASE_URL] = get_1.get(item, 'product.productPageUrl.base'),
            _a[IDs.DISABLE_SCHEMA] = utils_1.hasMissingSchemaVariables(requiredSchemaVariables, item),
            _a;
    },
    getSdStatus: getSdStatus,
    getLegacySeoBlob: function(item) {
        var tags = update_by_identifier_1.updateValueByIdentifier([], Identifiers_1.IDENTIFIERS.TITLE, get_1.get(item, 'legacySeoData.title'));
        tags = update_by_identifier_1.updateValueByIdentifier(tags, Identifiers_1.IDENTIFIERS.DESCRIPTION, get_1.get(item, 'legacySeoData.description'));
        return {
            tags: tags
        };
    },
    getBiData: function(item) {
        return {
            id: get_1.get(item, 'product.id'),
            name: get_1.get(item, 'product.name'),
        };
    },
    getKeys: function() {
        return utils_1.getKeys(IDs, userVisible);
    },
    getSdKeys: function() {
        return utils_1.getKeys(IDs, userVisibleSdOnly);
    },
    getSlug: function(item) {
        return get_1.get(item, 'product.slug');
    },
    setFullUrl: function(itemData, url) {
        if (url === void 0) {
            url = '';
        }
        itemData = JSON.parse(JSON.stringify(itemData));
        itemData.product.productPageUrl.path = url;
        return itemData;
    },
    getFullUrl: function(itemData) {
        return get_product_full_url_1.getProductFullUrl(itemData);
    },
    updateItemDataWithSlug: function(itemData, slugValue) {
        var updatedItemData = JSON.parse(JSON.stringify(itemData));
        if (get_1.get(updatedItemData, 'product.slug') !== '') {
            updatedItemData.product.slug = slugValue;
        }
        return updatedItemData;
    },
};