"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IDs = void 0;
var get_1 = require("../../utils/get");
var utils_1 = require("../../adapters/utils");
var consts_1 = require("../../consts");
var utils_2 = require("../utils");
var consts_2 = require("../consts");
exports.IDs = {
    NAME: 'blog-tag.name',
    PAGE_URL: 'blog-tag.fullUrl',
    POST_COUNT: 'blog-tag.postCount',
    CREATED_DATE: 'blog-tag.created.date',
    DESCRIPTION: 'blog-tag.description',
    PREV_LINK: 'blog-tag.prevLink',
    NEXT_LINK: 'blog-tag.nextLink',
    CURRENT_PAGE: 'blog-tag.currentPage',
    TOTAL_PAGE_COUNT: 'blog-tag.totalPageCount',
    SD_DISABLED: 'blog-tag.disable-schema',
    SD_ITEM_LIST_ELEMENT: 'blog-tag.structured-data.item-list-element',
    BLOG_FEED_ROUTE: 'blog-tag.blogFeedRoute',
};
var userVisible = [
    exports.IDs.NAME,
    exports.IDs.POST_COUNT,
    exports.IDs.PAGE_URL,
    exports.IDs.CURRENT_PAGE,
    exports.IDs.TOTAL_PAGE_COUNT,
];
var userVisibleSdOnly = [exports.IDs.SD_ITEM_LIST_ELEMENT];
var requiredSchemaVariables = [];
var SchemaTypes = {};
var getListItems = function(item) {
    return get_1.getRawValue(item, 'tag.listItems') || [];
};
var getSdStatus = function(item) {
    if (utils_1.hasMissingSchemaVariables(requiredSchemaVariables, item)) {
        return consts_1.SD_STATUS.DISABLED_DUE_TO_MISSING_INFO;
    }
    if (getListItems(item).length <= 1) {
        return consts_1.SD_STATUS.DISABLED_BY_VERTICAL_ITEM_DATA;
    }
    return consts_1.SD_STATUS.ENABLED;
};
exports.default = {
    IDs: exports.IDs,
    SchemaTypes: SchemaTypes,
    getData: function(item) {
        var _a;
        var _b;
        var sdStatusEnabled = getSdStatus(item) === consts_1.SD_STATUS.ENABLED;
        return _a = {},
            _a[exports.IDs.NAME] = get_1.get(item, 'tag.name'),
            _a[exports.IDs.PAGE_URL] = get_1.get(item, 'tag.fullUrl'),
            _a[exports.IDs.POST_COUNT] = get_1.get(item, 'tag.postCount'),
            _a[exports.IDs.CREATED_DATE] = get_1.get(item, 'tag.created'),
            _a[exports.IDs.DESCRIPTION] = get_1.get(item, 'tag.description'),
            _a[exports.IDs.PREV_LINK] = get_1.get(item, 'tag.pagination.prevUrl'),
            _a[exports.IDs.NEXT_LINK] = get_1.get(item, 'tag.pagination.nextUrl'),
            _a[exports.IDs.CURRENT_PAGE] = get_1.get(item, 'tag.pagination.currentPage'),
            _a[exports.IDs.TOTAL_PAGE_COUNT] = get_1.get(item, 'tag.pagination.totalPages'),
            _a[exports.IDs.SD_DISABLED] = !sdStatusEnabled,
            _a[exports.IDs.SD_ITEM_LIST_ELEMENT] = (_b = getListItems(item)) === null || _b === void 0 ? void 0 : _b.map(function(url, position) {
                return ({
                    '@type': 'ListItem',
                    position: position + 1,
                    url: url,
                });
            }),
            _a[exports.IDs.BLOG_FEED_ROUTE] = get_1.get(item, 'tag.blogFeedRoute') ||
            utils_2.getRssFullURL({
                siteUrl: get_1.get(item, 'context.siteUrl'),
                rssRoute: consts_2.RSS_ROUTES[consts_2.RSS_ROUTE_TYPES.BLOG],
            }),
            _a;
    },
    getSdStatus: getSdStatus,
    getLegacySeoBlob: function() {},
    getSlug: function() {
        return '';
    },
    updateItemDataWithSlug: function(item) {
        return item;
    },
    getBiData: function() {},
    getKeys: function() {
        return utils_1.getKeys(exports.IDs, userVisible);
    },
    getSdKeys: function() {
        return utils_1.getKeys(exports.IDs, userVisibleSdOnly);
    },
};