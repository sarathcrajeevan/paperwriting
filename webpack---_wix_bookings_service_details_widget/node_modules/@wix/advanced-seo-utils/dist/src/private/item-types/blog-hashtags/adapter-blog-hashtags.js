"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IDs = void 0;
var utils_1 = require("../../adapters/utils");
var get_1 = require("../../utils/get");
var consts_1 = require("../../consts");
var utils_2 = require("../utils");
var consts_2 = require("../consts");
exports.IDs = {
    TITLE: 'blog-hashtags.title',
    LABEL: 'blog-hashtags.label',
    URL: 'blog-hashtags.url',
    PREV_URL: 'blog-hashtags.pagination.prevUrl',
    NEXT_URL: 'blog-hashtags.pagination.nextUrl',
    PAGE_COUNT: 'blog-hashtags.pagination.totalPages',
    CURRENT_PAGE: 'blog-hashtags.pagination.currentPage',
    TOTAL_ITEMS: 'blog-hashtags.items.numberOfItems',
    BLOG_FEED_ROUTE: 'blog-hashtags.blogFeedRoute',
};
var SchemaTypes = {
    BLOG_HASHTAGS_ITEM_LIST: 'blog-hashtags-item-list-preset',
};
var userVisible = [
    exports.IDs.TITLE,
    exports.IDs.LABEL,
    exports.IDs.URL,
    exports.IDs.PAGE_COUNT,
    exports.IDs.TOTAL_ITEMS,
    exports.IDs.CURRENT_PAGE,
];
exports.default = {
    IDs: exports.IDs,
    SchemaTypes: SchemaTypes,
    getData: function(item) {
        var _a;
        return _a = {},
            _a[exports.IDs.TITLE] = get_1.get(item, 'hashtag.title'),
            _a[exports.IDs.LABEL] = get_1.get(item, 'hashtag.label'),
            _a[exports.IDs.URL] = get_1.get(item, 'hashtag.url'),
            _a[exports.IDs.PREV_URL] = get_1.get(item, 'hashtag.pagination.prevUrl'),
            _a[exports.IDs.NEXT_URL] = get_1.get(item, 'hashtag.pagination.nextUrl'),
            _a[exports.IDs.PAGE_COUNT] = get_1.get(item, 'hashtag.pagination.totalPages'),
            _a[exports.IDs.CURRENT_PAGE] = get_1.get(item, 'hashtag.pagination.currentPage'),
            _a[exports.IDs.TOTAL_ITEMS] = get_1.get(item, 'hashtag.items.numberOfItems'),
            _a[exports.IDs.BLOG_FEED_ROUTE] = get_1.get(item, 'hashtag.blogFeedRoute') ||
            utils_2.getRssFullURL({
                siteUrl: get_1.get(item, 'context.siteUrl'),
                rssRoute: consts_2.RSS_ROUTES[consts_2.RSS_ROUTE_TYPES.BLOG],
            }),
            _a;
    },
    getSdStatus: function() {
        return consts_1.SD_STATUS.DOES_NOT_EXIST;
    },
    getLegacySeoBlob: function() {},
    getSlug: function() {
        return '';
    },
    updateItemDataWithSlug: function(item) {
        return item;
    },
    getBiData: function() {},
    getKeys: function() {
        return utils_1.getKeys(exports.IDs, userVisible);
    },
    getSdKeys: function() {
        return [];
    },
};