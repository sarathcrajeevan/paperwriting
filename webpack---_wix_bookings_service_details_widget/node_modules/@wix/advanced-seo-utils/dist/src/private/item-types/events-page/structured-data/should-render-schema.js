"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.shouldRenderSchema = void 0;
var get_1 = require("../../../utils/get");
var get_location_type_1 = require("../calculated/get-location-type");
var get_online_conf_available_1 = require("../calculated/get-online-conf-available");
var get_attendence_mode_1 = require("../calculated/get-attendence-mode");
var get_event_url_1 = require("../calculated/get-event-url");
exports.shouldRenderSchema = function(item) {
    if (item === void 0) {
        item = {};
    }
    if (!item.event) {
        return false;
    }
    var url = !!get_event_url_1.getEventUrl(item);
    var titleExists = !!get_1.get(item, 'event.title');
    var isVenue = get_attendence_mode_1.getIsVenue(item);
    var locationExists = !!get_1.get(item, 'event.location.address');
    var isAddressEnteredIfPhysical = (!isVenue && url) || (locationExists && isVenue);
    var isEventScheduled = !get_1.getRawValue(item, 'event.scheduling.config.scheduleTbd');
    var startDateExists = !!get_1.get(item, 'event.scheduling.config.startDate');
    var isEventVirtual = get_location_type_1.getLocationType(item) === get_location_type_1.LOCATION_TYPES.VIRTUAL;
    var isOnlineConfAvailable = get_online_conf_available_1.getOnlineConfAvailable(item);
    var isAvailableIfVirtual = !isEventVirtual || isOnlineConfAvailable;
    return (url &&
        titleExists &&
        isAddressEnteredIfPhysical &&
        isEventScheduled &&
        startDateExists &&
        isAvailableIfVirtual);
};