"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IDs = void 0;
var utils_1 = require("../../adapters/utils");
var get_main_image_url_1 = require("./calculated/get-main-image-url");
var get_1 = require("../../utils/get");
var get_robots_1 = require("./calculated/get-robots");
var shorten_1 = require("../../utils/shorten");
var get_name_1 = require("./calculated/get-name");
var sanitize_url_1 = require("../../utils/sanitize-url");
var consts_1 = require("../../consts");
exports.IDs = {
    AVAILABILITY: 'challenge.registration.availability',
    CALCULATED_MAIN_IMAGE_URL: 'challenge.mainImage.url',
    CALCULATED_ROBOTS: 'challenge.robots',
    CREATED_DATE: 'challenge.created',
    CURRENCY: 'challenge.registration.currency',
    DESCRIPTION: 'challenge.description',
    DESCRIPTION_150: 'challenge.description.150',
    IMAGE_HEIGHT: 'challenge.mainImage.height',
    IMAGE_ID: 'challenge.mainImage.id',
    IMAGE_WIDTH: 'challenge.mainImage.width',
    LAST_MODIFIED_DATE: 'challenge.lastMod',
    NAME: 'challenge.name',
    CALCULATED_NAME: 'challenge.accessible.name',
    PRICE: 'challenge.registration.price',
    URL: 'challenge.url',
};
var userVisible = [
    exports.IDs.CALCULATED_NAME,
    exports.IDs.DESCRIPTION_150,
    exports.IDs.PRICE,
    exports.IDs.URL,
    exports.IDs.CALCULATED_MAIN_IMAGE_URL,
];
var requiredSchemaVariables = [utils_1.siteIDs.SITE_NAME, utils_1.siteIDs.BUSINESS_NAME];
var SchemaTypes = {
    CHALLENGES_PAGE: 'challenges-page-preset',
};
exports.default = {
    IDs: exports.IDs,
    SchemaTypes: SchemaTypes,
    requiredSchemaVariables: requiredSchemaVariables,
    getData: function(item) {
        var _a;
        var fullDescription = get_1.get(item, 'challenge.description');
        var data = (_a = {},
            _a[exports.IDs.AVAILABILITY] = get_1.get(item, 'challenge.registration.availability'),
            _a[exports.IDs.CALCULATED_MAIN_IMAGE_URL] = get_main_image_url_1.getMainImageUrl(item),
            _a[exports.IDs.CALCULATED_ROBOTS] = get_robots_1.getRobots(item),
            _a[exports.IDs.CREATED_DATE] = get_1.get(item, 'challenge.created'),
            _a[exports.IDs.CURRENCY] = get_1.get(item, 'challenge.registration.currency'),
            _a[exports.IDs.DESCRIPTION] = fullDescription,
            _a[exports.IDs.DESCRIPTION_150] = shorten_1.shorten(fullDescription, 150),
            _a[exports.IDs.IMAGE_HEIGHT] = get_1.get(item, 'challenge.mainImage.height'),
            _a[exports.IDs.IMAGE_ID] = get_1.get(item, 'challenge.mainImage.id'),
            _a[exports.IDs.IMAGE_WIDTH] = get_1.get(item, 'challenge.mainImage.width'),
            _a[exports.IDs.LAST_MODIFIED_DATE] = get_1.get(item, 'challenge.lastMod'),
            _a[exports.IDs.NAME] = get_1.get(item, 'challenge.name'),
            _a[exports.IDs.CALCULATED_NAME] = get_name_1.getName(item),
            _a[exports.IDs.PRICE] = get_1.get(item, 'challenge.registration.price'),
            _a[exports.IDs.URL] = sanitize_url_1.sanitizeUrl(get_1.get(item, 'challenge.url')),
            _a);
        return data;
    },
    getSdStatus: function() {
        return consts_1.SD_STATUS.DOES_NOT_EXIST;
    },
    getLegacySeoBlob: function() {},
    getSlug: function(item) {
        return get_1.get(item, 'challenge.slug');
    },
    getFullUrl: function(item) {
        return get_1.get(item, 'challenge.url');
    },
    setFullUrl: function(item, url) {
        if (url === void 0) {
            url = '';
        }
        item = JSON.parse(JSON.stringify(item));
        item.challenge.url = url;
        return item;
    },
    updateItemDataWithSlug: function(item) {
        return item;
    },
    getBiData: function(item) {
        return ({
            id: get_1.get(item, 'challenge.id'),
            name: get_1.get(item, 'challenge.name'),
        });
    },
    getKeys: function() {
        return utils_1.getKeys(exports.IDs, userVisible);
    },
    getSdKeys: function() {
        return [];
    },
};