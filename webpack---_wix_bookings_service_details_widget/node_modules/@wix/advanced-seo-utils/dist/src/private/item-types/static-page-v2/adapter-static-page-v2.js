"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.IDs = void 0;
var ContextProps_1 = require("../../types/ContextProps");
var get_1 = require("../../utils/get");
var utils_1 = require("../../adapters/utils");
var update_by_identifier_1 = require("../../tags/values/update-by-identifier");
var Identifiers_1 = require("../../types/Identifiers");
var adapter_utils_1 = require("./adapter-utils");
var consts_1 = require("../../consts");
var utils_2 = require("../utils");
var consts_2 = require("../consts");
exports.IDs = {
    PAGE_NAME: 'page.name',
    PAGE_URL: 'page.url',
    SITE_NAME: 'site.name',
    HOME_PAGE_TITLE: 'site.homePageTitle',
    INDEX_SITE: 'site.index',
    INDEX_PAGE: 'page.index',
    IS_HOME_PAGE: 'page.isHomePage',
    IMAGE: 'site.image',
    IMAGE_WIDTH: 'site.imageWidth',
    IMAGE_HEIGHT: 'site.imageHeight',
    FB_ADMINS: 'site.facebookAdminId',
    NEXT: 'site.nextLink',
    PREV: 'site.prevLink',
    BLOG_FEED_ROUTE: 'site.blogFeedRoute',
    TPA_PAGE_ID: 'page.tpaPageId',
};
var userVisible = [exports.IDs.PAGE_NAME, exports.IDs.PAGE_URL, exports.IDs.SITE_NAME, exports.IDs.IMAGE];
exports.default = {
    IDs: exports.IDs,
    getData: function(item) {
        var _a;
        return _a = {},
            _a[exports.IDs.PAGE_NAME] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.PAGE_NAME),
            _a[exports.IDs.PAGE_URL] = adapter_utils_1.getPageUrl(item),
            _a[exports.IDs.SITE_NAME] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.SITE_NAME),
            _a[exports.IDs.INDEX_SITE] = get_1.getRawValue(item, "context." + ContextProps_1.CONTEXT_PROPS.INDEX_SITE),
            _a[exports.IDs.INDEX_PAGE] = get_1.getRawValue(item, "context." + ContextProps_1.CONTEXT_PROPS.INDEX_PAGE),
            _a[exports.IDs.IS_HOME_PAGE] = get_1.getRawValue(item, "context." + ContextProps_1.CONTEXT_PROPS.IS_HOME_PAGE),
            _a[exports.IDs.IMAGE] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.SITE_OG_IMAGE),
            _a[exports.IDs.IMAGE_WIDTH] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.OG_IMAGE_WIDTH),
            _a[exports.IDs.IMAGE_HEIGHT] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.OG_IMAGE_HEIGHT),
            _a[exports.IDs.FB_ADMINS] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.FB_ADMINS),
            _a[exports.IDs.NEXT] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.NEXT),
            _a[exports.IDs.PREV] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.PREV),
            _a[exports.IDs.BLOG_FEED_ROUTE] = utils_2.getRssRoute({
                rssRouteType: consts_2.RSS_ROUTE_TYPES.BLOG,
                payload: {
                    item: item
                },
            }),
            _a[exports.IDs.TPA_PAGE_ID] = get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.TPA_PAGE_ID),
            _a;
    },
    getSdStatus: function() {
        return consts_1.SD_STATUS.DOES_NOT_EXIST;
    },
    getBiData: function() {
        return {
            id: null,
            name: null
        };
    },
    getSlug: function() {
        return '';
    },
    updateItemDataWithSlug: function(item) {
        return item;
    },
    getLegacySeoBlob: function(item) {
        var tags = update_by_identifier_1.updateValueByIdentifier([], Identifiers_1.IDENTIFIERS.TITLE, get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.TITLE));
        tags = update_by_identifier_1.updateValueByIdentifier(tags, Identifiers_1.IDENTIFIERS.DESCRIPTION, get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.DESCRIPTION));
        tags = update_by_identifier_1.updateValueByIdentifier(tags, Identifiers_1.IDENTIFIERS.OG_IMAGE, get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.OG_IMAGE));
        tags = update_by_identifier_1.updateValueByIdentifier(tags, Identifiers_1.IDENTIFIERS.ROBOTS, ['noindex', 'false'].includes(get_1.get(item, "context." + ContextProps_1.CONTEXT_PROPS.INDEX_PAGE)) ?
            'noindex' :
            '');
        return {
            tags: tags
        };
    },
    getKeys: function() {
        return utils_1.getKeys(exports.IDs, userVisible);
    },
    getSdKeys: function() {
        return [];
    },
};