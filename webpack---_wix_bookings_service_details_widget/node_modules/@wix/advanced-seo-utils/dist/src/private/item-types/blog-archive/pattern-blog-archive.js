"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function(mod) {
    return (mod && mod.__esModule) ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BLOG_ARCHIVE = void 0;
var builders_1 = require("../../types/builders");
var adapter_blog_archive_1 = __importDefault(require("./adapter-blog-archive"));
var utils_1 = require("../../adapters/utils");
var LinkTagTypes_1 = require("../../types/LinkTagTypes");
var utils_2 = require("../utils");
var IDs = adapter_blog_archive_1.default.IDs;
var SITE_NAME = utils_1.siteIDs.SITE_NAME;
var MONTH_NAME = IDs.MONTH_NAME,
    YEAR = IDs.YEAR,
    URL = IDs.URL,
    PREV_URL = IDs.PREV_URL,
    NEXT_URL = IDs.NEXT_URL;
exports.BLOG_ARCHIVE = {
    tags: __spreadArrays([
        builders_1.buildTitle("{{" + MONTH_NAME + "}} - {{" + YEAR + "}}"),
        builders_1.buildStandardMeta('robots', 'noindex'),
        builders_1.buildLink({
            rel: 'canonical',
            href: "{{" + URL + "}}"
        })
    ], builders_1.buildOgMetaRefs(), [
        builders_1.buildOgMeta('og:url', "{{" + URL + "}}"),
        builders_1.buildOgMeta('og:site_name', "{{" + SITE_NAME + "}}"),
        builders_1.buildOgMeta('og:type', 'website'),
        builders_1.buildLink({
            rel: 'prev',
            href: "{{" + PREV_URL + "}}"
        }),
        builders_1.buildLink({
            rel: 'next',
            href: "{{" + NEXT_URL + "}}"
        }),
        builders_1.buildLink({
            rel: 'alternate',
            type: LinkTagTypes_1.LINK_TAG_TYPES.RSS,
            href: "{{" + IDs.BLOG_FEED_ROUTE + "}}",
            title: utils_2.getRssTitle("{{" + SITE_NAME + "}}"),
        })
    ], builders_1.buildTwitterMetaRefs()),
};