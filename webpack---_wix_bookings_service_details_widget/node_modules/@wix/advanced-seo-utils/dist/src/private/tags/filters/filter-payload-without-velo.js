"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.filterPayloadWithoutVelo = void 0;
var resolve_payload_1 = require("../../renderer/resolve-payload");
var TagTypes_1 = require("../../types/TagTypes");
var setters_1 = require("../../renderer/setters");
var TAGS_EXCLUDE_BY_VELO = [TagTypes_1.TAG_TYPES.META, TagTypes_1.TAG_TYPES.LINK, TagTypes_1.TAG_TYPES.SCRIPT];
var hasType = function(tags, typeToCheck) {
    return tags.some(function(_a) {
        var type = _a.type;
        return type === typeToCheck;
    });
};
exports.filterPayloadWithoutVelo = function(payload, veloOverrides, options) {
    if (veloOverrides === void 0) {
        veloOverrides = {};
    }
    if (options === void 0) {
        options = {
            logError: function() {}
        };
    }
    var resolvedPayload = resolve_payload_1.resolvePayload(payload, options);
    var tags = veloOverrides.tags;
    if (!tags) {
        return resolvedPayload;
    }
    TAGS_EXCLUDE_BY_VELO.forEach(function(tagType) {
        if (hasType(tags, tagType)) {
            resolvedPayload = setters_1.removeTagsByType(resolvedPayload, tagType);
        }
    });
    return resolvedPayload;
};