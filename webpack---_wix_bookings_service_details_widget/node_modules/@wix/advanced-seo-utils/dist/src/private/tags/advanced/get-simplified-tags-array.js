"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getSimplifiedTagsArray = void 0;
var filter_custom_tags_1 = require("../filters/filter-custom-tags");
var filter_identified_tags_1 = require("../filters/filter-identified-tags");
var renderer_1 = require("../../../renderer");
var update_by_schema_1 = require("../values/update-by-schema");
var Identifiers_1 = require("../../types/Identifiers");
var get_simplified_tag_1 = require("./get-simplified-tag");
var TagSchemas_1 = require("../../types/TagSchemas");
var get_by_identifier_1 = require("../values/get-by-identifier");
exports.getSimplifiedTagsArray = function(advancedSeoData, _a) {
    var _b = _a === void 0 ? {} : _a,
        _c = _b.excludeCustomTags,
        excludeCustomTags = _c === void 0 ? true : _c,
        _d = _b.keepDefaultTags,
        keepDefaultTags = _d === void 0 ? false : _d;
    var url = renderer_1.getCanonical(advancedSeoData);
    var isCanonicalDisabled = get_by_identifier_1.getDisabledByIdentifier(advancedSeoData, Identifiers_1.IDENTIFIERS.CANONICAL);
    var unidentifiedBlob = filter_identified_tags_1.filterIdentifiedTags(advancedSeoData);
    var resolvedUnidentifiedBlob = excludeCustomTags ?
        filter_custom_tags_1.filterCustomTags(unidentifiedBlob, {
            keepDefaultTags: keepDefaultTags
        }) :
        unidentifiedBlob;
    var updatedTags = update_by_schema_1.updateValueBySchema({
        tags: resolvedUnidentifiedBlob.tags,
        tagSchema: TagSchemas_1.TAG_SCHEMAS[Identifiers_1.GENERAL_IDENTIFIERS.LINK]('canonical'),
        value: url,
        meta: false,
        isDisabled: isCanonicalDisabled,
    });
    var simplifiedTagsArray = updatedTags.map(get_simplified_tag_1.getSimplifiedTag);
    return simplifiedTagsArray;
};