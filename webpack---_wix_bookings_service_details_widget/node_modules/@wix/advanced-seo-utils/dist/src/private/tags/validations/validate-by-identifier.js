"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.validateTagValueByIdentifier = void 0;
var TagSchemas_1 = require("../../types/TagSchemas");
var Errors_1 = require("../../types/Errors");
var build_tag_by_value_1 = require("../utils/build-tag-by-value");
exports.validateTagValueByIdentifier = function(identifier, value, userValidators, tagLabel, enableSchemaValidation) {
    if (tagLabel === void 0) {
        tagLabel = null;
    }
    if (enableSchemaValidation === void 0) {
        enableSchemaValidation = true;
    }
    var tag = build_tag_by_value_1.buildTagByValueAndIdentifier(value, identifier, {
        enableValidation: enableSchemaValidation,
        tagLabel: tagLabel,
    });
    var tagSchemaValidator = function() {
        return tagLabel ?
            TagSchemas_1.TAG_SCHEMAS[identifier](tagLabel).setValue(tag, value, enableSchemaValidation) :
            TagSchemas_1.TAG_SCHEMAS[identifier].setValue(tag, value, enableSchemaValidation);
    };
    var validators = [].concat(userValidators || [], tagSchemaValidator);
    var invalidValidatorIndex = validators.findIndex(function(validator) {
        if (typeof validator === 'function') {
            var currentValidatorValue = validator(value);
            return (!currentValidatorValue ||
                (typeof currentValidatorValue === 'object' &&
                    !currentValidatorValue.isValid));
        }
        return true;
    });
    var invalidValidator = validators[invalidValidatorIndex];
    return invalidValidator ?
        {
            isValid: false,
            error: (typeof invalidValidator === 'function' &&
                    invalidValidator(value).error) ||
                new Errors_1.ERRORS.CUSTOM_VALIDATOR(invalidValidatorIndex),
        } :
        {
            isValid: true
        };
};