import * as React from 'react';
export var buildChildrenObject = function(children, childrenObject) {
    return React.Children.toArray(children).reduce(function(acc, child) {
        if (!React.isValidElement(child)) {
            return acc;
        }
        if (!child.type || !child.type.displayName) {
            return acc;
        }
        var name = child.type.displayName.split('.').pop();
        acc[name] = child;
        return acc;
    }, childrenObject || {});
};
export var createComponentThatRendersItsChildren = function(displayName) {
    var Element = function(_a) {
        var children = _a.children;
        return typeof children === 'string' ?
            React.createElement('div', {}, children) :
            children;
    };
    Element.displayName = displayName;
    return Element;
};
export var noop = function() {
    return null;
};
export var isReactElement = function(child, Element) {
    return child && child.type === Element;
};
export var isStatelessComponent = function(Component) {
    return !(Component.prototype && Component.prototype.render);
};
//# sourceMappingURL=index.js.map