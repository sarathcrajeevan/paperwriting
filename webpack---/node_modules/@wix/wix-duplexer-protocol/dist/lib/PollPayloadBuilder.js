"use strict";
var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
var PollPayloadBuilder = /** @class */ (function() {
    function PollPayloadBuilder() {
        this.overrideRestoreStrategies = [];
    }
    PollPayloadBuilder.prototype.withOverrideRestoreStrategy = function(override) {
        this.overrideRestoreStrategies = this.overrideRestoreStrategies
            .filter(function(o) {
                return o.channel !== override.channel || o.ns !== override.ns;
            });
        this.overrideRestoreStrategies.push(override);
        return this;
    };
    PollPayloadBuilder.prototype.withDefaultRestoreStrategy = function(restoreStrategy) {
        this.defaultRestoreStrategy = restoreStrategy;
        return this;
    };
    PollPayloadBuilder.prototype.build = function() {
        return new PollPayload(this.defaultRestoreStrategy, this.overrideRestoreStrategies)
            .toProtocolFormat();
    };
    return PollPayloadBuilder;
}());
exports.default = PollPayloadBuilder;
var PollPayload = /** @class */ (function() {
    function PollPayload(defaultRestoreStrategy, overrideRestoreStrategies) {
        this.defaultRestoreStrategy = defaultRestoreStrategy;
        this.overrideRestoreStrategies = overrideRestoreStrategies;
    }
    PollPayload.prototype.toProtocolFormat = function() {
        var payload = {};
        if (this.defaultRestoreStrategy !== undefined) {
            payload.restore = {
                default: this.defaultRestoreStrategy
            };
        }
        if (this.hasOverrides()) {
            payload.restore = __assign(__assign({}, payload.restore), {
                overrides: this.overrideRestoreStrategies
            });
        }
        return payload;
    };
    PollPayload.prototype.hasOverrides = function() {
        return this.overrideRestoreStrategies.length > 0;
    };
    return PollPayload;
}());
//# sourceMappingURL=PollPayloadBuilder.js.map