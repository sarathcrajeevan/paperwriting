import {
    toURLSearchParams
} from '@wix/metro-runtime';
import {
    serializer
} from '@wix/metro-runtime/ambassador';
import {
    resolveUrl
} from '@wix/metro-runtime';
var _getPresenceRequest = {};
var _getPresenceResponse = {
    presence: '_presence'
};
var _payload = {
    sessionStartDate: 'google.protobuf.Timestamp',
    lastActiveDate: 'google.protobuf.Timestamp',
};
var _presence = {
    payload: '_payload'
};
var _setPresenceRequest = {
    presence: '_presence'
};
var _setPresenceResponse = {};
var _updatePresenceRequest = {
    mask: 'google.protobuf.FieldMask',
    presence: '_presence',
};
var _updatePresenceResponse = {};

function resolveComWixpressPresenceApiV2PresenceServiceUrl(opts) {
    var domainToMappings = {
        'www._base_domain_': [{
            srcPath: '/_api/chat-presence-server',
            destPath: '/api',
        }, ],
        'api._api_base_domain_': [{
            srcPath: '/presence-server',
            destPath: '',
        }, ],
        'engage.wixapps.net': [{
            srcPath: '/_api/chat-presence-server',
            destPath: '/api',
        }, ],
        'manage._base_domain_': [{
            srcPath: '/_api/chat-presence-server',
            destPath: '/api',
        }, ],
        _: [{
            srcPath: '/_api/chat-presence-server',
            destPath: '/api',
        }, ],
    };
    return resolveUrl(Object.assign(opts, {
        domainToMappings: domainToMappings
    }));
}
export function setPresence(payload) {
    return function __setPresence(_a) {
        var host = _a.host;
        var toJSON = serializer(_setPresenceRequest, {
            _payload: _payload,
            _presence: _presence
        }).toJSON;
        var fromJSON = serializer(_setPresenceResponse, {}).fromJSON;
        var serializedData = toJSON(payload);
        var metadata = {
            method: 'POST',
            url: resolveComWixpressPresenceApiV2PresenceServiceUrl({
                protoPath: '/api/v2/presences/{presence.scope}',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromJSON,
        };
        return metadata;
    };
}
/** Support presence payload update, where field mask of "payload" override the entire payload, and any payload first class entity, can be override with "payload.${path}" */
export function updatePresence(payload) {
    return function __updatePresence(_a) {
        var host = _a.host;
        var toJSON = serializer(_updatePresenceRequest, {
            _payload: _payload,
            _presence: _presence,
        }).toJSON;
        var fromJSON = serializer(_updatePresenceResponse, {}).fromJSON;
        var serializedData = toJSON(payload);
        var metadata = {
            method: 'PATCH',
            url: resolveComWixpressPresenceApiV2PresenceServiceUrl({
                protoPath: '/api/v2/presences/{presence.scope}',
                data: serializedData,
                host: host,
            }),
            data: serializedData,
            transformResponse: fromJSON,
        };
        return metadata;
    };
}
export function getPresence(payload) {
    return function __getPresence(_a) {
        var host = _a.host;
        var toJSON = serializer(_getPresenceRequest, {}).toJSON;
        var fromJSON = serializer(_getPresenceResponse, {
            _payload: _payload,
            _presence: _presence,
        }).fromJSON;
        var serializedData = toJSON(payload);
        var metadata = {
            method: 'GET',
            url: resolveComWixpressPresenceApiV2PresenceServiceUrl({
                protoPath: '/api/v2/presences/{scope}',
                data: serializedData,
                host: host,
            }),
            params: toURLSearchParams(serializedData),
            transformResponse: fromJSON,
        };
        return metadata;
    };
}
//# sourceMappingURL=http.js.map