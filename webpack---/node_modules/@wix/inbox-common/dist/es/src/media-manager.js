import {
    __awaiter,
    __generator
} from "tslib";
import {
    mediaProviders
} from './attachments';
export var wixMediaUploadedFileHost = 'https://static.wixstatic.com/';
export var mediaTypesTranslation = {
    image: 'picture',
    document: 'document',
};
export function uploadFileToMedia(_a) {
    var file = _a.file,
        token = _a.token,
        uploadUrlApi = _a.uploadUrlApi,
        folderId = _a.folderId;
    return __awaiter(this, void 0, void 0, function() {
        var mediaType, isNewGen, _b, uploadUrl, uploadToken, uploadResult, uploadedFile, response;
        return __generator(this, function(_c) {
            switch (_c.label) {
                case 0:
                    mediaType = translateToMediaType(file.type);
                    isNewGen = folderId !== undefined;
                    return [4 /*yield*/ , getUploadUrl(token, uploadUrlApi, isNewGen, file, mediaType)];
                case 1:
                    _b = _c.sent(), uploadUrl = _b.upload_url, uploadToken = _b.upload_token;
                    return [4 /*yield*/ , uploadToUrl({
                        uploadUrl: uploadUrl,
                        uploadToken: uploadToken,
                        mediaType: mediaType,
                        file: file,
                        folderId: folderId,
                    })];
                case 2:
                    uploadResult = _c.sent();
                    uploadedFile = uploadResult[0];
                    response = {
                        name: uploadedFile.original_file_name,
                        mediaFileId: uploadedFile.file_name,
                        url: "" + wixMediaUploadedFileHost + uploadedFile.file_url,
                        contentType: uploadedFile.mime_type,
                        fileSize: uploadedFile.file_size,
                        mediaProvider: mediaProviders.WIX_MEDIA_PUBLIC,
                    };
                    if (mediaType === mediaTypesTranslation.image) {
                        Object.assign(response, {
                            width: uploadedFile.width,
                            height: uploadedFile.height,
                        });
                    }
                    return [2 /*return*/ , response];
            }
        });
    });
}

function translateToMediaType(contentType) {
    if (contentType.startsWith('image')) {
        return mediaTypesTranslation.image;
    }
    return mediaTypesTranslation.document;
}

function getUploadUrl(uploadToken, uploadUrlApi, isNewGen, file, mediaType) {
    return fetch(uploadUrlApiWithParams(uploadUrlApi, isNewGen, file, mediaType), {
            method: 'get',
            headers: {
                Authorization: "APP " + uploadToken,
            },
        })
        .then(function(res) {
            if (!res.ok) {
                throw new Error("Error " + res.status);
            }
            return res;
        })
        .then(function(res) {
            return res.json();
        });
}

function uploadUrlApiWithParams(uploadUrlApi, isNewGen, file, mediaType) {
    return isNewGen ?
        uploadUrlApi + "?file_name=" + file.name + "&media_type=" + mediaType :
        uploadUrlApi;
}

function uploadToUrl(_a) {
    var uploadUrl = _a.uploadUrl,
        uploadToken = _a.uploadToken,
        mediaType = _a.mediaType,
        file = _a.file,
        folderId = _a.folderId;
    var data = new FormData();
    data.append('upload_token', uploadToken);
    data.append('file', file);
    if (folderId) {
        data.append('directory', folderId);
        data.append('siteMediaToken', uploadToken);
    } else {
        data.append('media_type', mediaType);
    }
    data.append('ns', 'engage');
    return fetch(uploadUrl, {
            method: 'post',
            body: data,
        })
        .then(function(res) {
            if (!res.ok) {
                throw new Error("Error " + res.status);
            }
            return res;
        })
        .then(function(res) {
            return res.json();
        });
}
export var mediaManager = {
    wixMediaUploadedFileHost: wixMediaUploadedFileHost,
    mediaTypesTranslation: mediaTypesTranslation,
    uploadFileToMedia: uploadFileToMedia,
};
//# sourceMappingURL=media-manager.js.map