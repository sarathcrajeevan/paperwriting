import {
    __extends
} from "tslib";
import React, {
    Component
} from 'react';
import styles from './TypingMessage.scss';
import withTheme from '../../providers/theme/withTheme';
import withAppMode from '../../providers/appMode/withAppMode';
import _get from 'lodash/get';
import {
    AppMode
} from '../..';
import {
    translate
} from 'react-i18next';
import AvatarWrapper from '../AvatarWrapper/AvatarWrapper';
export var MAX_NUMBER_OF_AVATARS_IN_TYPING_MESSAGE = 3;
var APP_AVATAR_SIZE_WSR = 'size30';
var WIDGET_AVATAR_SIZE_WSR = 'size30';
var TypingMessage = /** @class */ (function(_super) {
    __extends(TypingMessage, _super);

    function TypingMessage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isFullApp = function() {
            return _this.props.appMode === AppMode.FullApp;
        };
        return _this;
    }
    TypingMessage.prototype.render = function() {
        var _this = this;
        var _a = this.props,
            theme = _a.theme,
            t = _a.t,
            usersTyping = _a.usersTyping;
        var textColor = _get(theme, 'room.message.textColor');
        var fontFamily = _get(theme, 'room.fontFamily');
        var renderAvatar = function(userTyping) {
            var senderPicture = _get(userTyping, 'displayData.imageUrl', '');
            var avatar = (React.createElement("div", {
                    className: styles.typingAvatar,
                    "data-hook": "group-chat-typing-indication-avatar"
                },
                React.createElement(AvatarWrapper, {
                    size: _this.isFullApp() ? APP_AVATAR_SIZE_WSR : WIDGET_AVATAR_SIZE_WSR,
                    imgProps: {
                        src: senderPicture
                    }
                })));
            return avatar;
        };
        var renderAvatarPlusUsers = function(numberOfPlus) {
            var avatar = (React.createElement("div", {
                    className: styles.typingAvatarPlus,
                    "data-hook": "group-chat-typing-indication-plus-avatar"
                },
                React.createElement(AvatarWrapper, {
                    size: _this.isFullApp() ? APP_AVATAR_SIZE_WSR : WIDGET_AVATAR_SIZE_WSR,
                    text: "+" + numberOfPlus
                })));
            return avatar;
        };
        var numberOfAdditionalTypers = usersTyping.length - MAX_NUMBER_OF_AVATARS_IN_TYPING_MESSAGE;
        return (React.createElement("div", {
                "data-hook": "group-chat-typing-indication",
                className: styles.groupChatTypingWrapper
            },
            usersTyping.map(function(userTyping, index) {
                return index < MAX_NUMBER_OF_AVATARS_IN_TYPING_MESSAGE ?
                    renderAvatar(userTyping) :
                    null;
            }),
            usersTyping.length > MAX_NUMBER_OF_AVATARS_IN_TYPING_MESSAGE &&
            renderAvatarPlusUsers(numberOfAdditionalTypers),
            React.createElement("div", {
                "data-hook": "group-chat-typing-indication-message",
                style: {
                    color: textColor,
                    fontFamily: fontFamily
                },
                className: styles.groupChatTypingText
            }, t('message.indication.typing'))));
    };
    return TypingMessage;
}(Component));
export default withAppMode(withTheme(translate()(TypingMessage)));
//# sourceMappingURL=TypingMessage.js.map