import {
    __assign,
    __extends
} from "tslib";
import React, {
    Component
} from 'react';
import i18n from '../../i18n';
import {
    I18nextProvider
} from 'react-i18next';
import ThemeProvider from '../../providers/theme/ThemeProvider';
import AppModeProvider from '../../providers/appMode/AppModeProvider';
import {
    AppMode
} from '../..';
var withAppProviders = function(CompToWrap) {
    return /** @class */ (function(_super) {
        __extends(class_1, _super);

        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.render = function() {
            var _a = this.props,
                _b = _a.locale,
                locale = _b === void 0 ? 'en' : _b,
                theme = _a.theme,
                _c = _a.appMode,
                appMode = _c === void 0 ? AppMode.FullApp : _c;
            var props = __assign(__assign({}, this.props), {
                locale: locale,
                theme: theme,
                appMode: appMode
            });
            return (React.createElement(I18nextProvider, {
                    i18n: i18n({
                        locale: locale
                    })
                },
                React.createElement(ThemeProvider, {
                        theme: theme || {}
                    },
                    React.createElement(AppModeProvider, {
                            appMode: appMode
                        },
                        React.createElement(CompToWrap, __assign({}, props))))));
        };
        return class_1;
    }(Component));
};
export default withAppProviders;
//# sourceMappingURL=withAppProviders.js.map