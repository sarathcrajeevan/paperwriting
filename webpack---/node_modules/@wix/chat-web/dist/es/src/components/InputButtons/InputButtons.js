import {
    __assign
} from "tslib";
import React from 'react';
import styles from './InputButtons.scss';
import {
    Tooltip
} from 'wix-style-react';
import {
    AppMode
} from '../../constants/app-mode';
import withAppMode from '../../providers/appMode/withAppMode';
import classNames from 'classnames';
var InputButtons = function(_a) {
    var _b;
    var buttons = _a.buttons,
        disabled = _a.disabled,
        appMode = _a.appMode;
    var renderButton = function(button, i) {
        var _a;
        var isDisabled = button.disabled || disabled;
        return (React.createElement("button", {
            key: i,
            onClick: function() {
                var _a;
                if (!isDisabled) {
                    (_a = button.onClick) === null || _a === void 0 ? void 0 : _a.call(button);
                }
            },
            disabled: isDisabled,
            "data-hook": button.dataHook,
            className: classNames(styles.inputButton, button.className, (_a = {},
                _a[styles.disabled] = isDisabled,
                _a)),
            "aria-label": button.ariaLabel
        }, button.children ? button.children : null));
    };
    var fullApp = appMode === AppMode.FullApp;
    return (React.createElement("div", {
            className: classNames(styles.inputButtons, (_b = {},
                _b[styles.fullApp] = fullApp,
                _b)),
            "data-hook": "input-buttons"
        }, buttons &&
        buttons.map(function(button, i) {
            if (button.hide) {
                return null;
            }
            return button.tooltipContent ? (React.createElement(Tooltip, __assign({
                    key: "button-tooltip" + i,
                    dataHook: button.dataHook + "-tooltip",
                    content: button.tooltipContent,
                    textAlign: "center"
                }, (button.tooltipProps || {})),
                React.createElement("div", null, renderButton(button, i)))) : (renderButton(button, i));
        })));
};
export default withAppMode(InputButtons);
//# sourceMappingURL=InputButtons.js.map