import {
    __assign,
    __extends
} from "tslib";
import React, {
    Component
} from 'react';
import Dropzone from 'react-dropzone';
import {
    AppMode
} from '../../../constants/app-mode';
import {
    chatSdk,
    Constants
} from '@wix/chat-sdk';
var withDropzone = function(WrappedComponent) {
    return /** @class */ (function(_super) {
        __extends(class_1, _super);

        function class_1() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = {
                files: []
            };
            _this.handleDrop = function(files) {
                return _this.setState({
                    files: files
                });
            };
            _this.clearFileSelection = function() {
                return _this.setState({
                    files: []
                });
            };
            _this.isEnabled = function() {
                return _this.props.appMode === AppMode.Widget &&
                    chatSdk.isExperimentOn(Constants.experiments.DragNDropUpload);
            };
            return _this;
        }
        class_1.prototype.render = function() {
            var _this = this;
            return this.isEnabled() ? (React.createElement(Dropzone, {
                onDrop: this.handleDrop,
                noClick: true,
                noKeyboard: true
            }, function(_a) {
                var getRootProps = _a.getRootProps,
                    getInputProps = _a.getInputProps,
                    isDragActive = _a.isDragActive;
                return (React.createElement(WrappedComponent, __assign({}, _this.props, {
                    dropRootProps: getRootProps(),
                    dropInputProps: getInputProps(),
                    isDragActive: isDragActive,
                    droppedFiles: _this.state.files,
                    clearDroppedFiles: _this.clearFileSelection
                })));
            })) : (React.createElement(WrappedComponent, __assign({}, this.props)));
        };
        return class_1;
    }(Component));
};
export default withDropzone;
//# sourceMappingURL=withDropzone.js.map