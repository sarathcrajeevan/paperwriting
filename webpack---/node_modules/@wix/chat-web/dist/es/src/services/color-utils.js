var hexToRgbA = function(hex, opacity) {
    var c;
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
        c = hex.substring(1).split('');
        if (c.length === 3) {
            c = [c[0], c[0], c[1], c[1], c[2], c[2]];
        }
        c = "0x" + c.join('');
        return ('rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') +
            ("," + opacity + ")")); // eslint-disable-line no-bitwise
    }
    return '';
};
export var getRgbA = function(color, opacity) {
    if (color === void 0) {
        color = '#000000';
    }
    if (opacity === void 0) {
        opacity = 1;
    }
    if (color.startsWith('#')) {
        return hexToRgbA(color, opacity);
    }
    if (color.startsWith('rgb') && color.indexOf('a') !== 3) {
        return color.replace(')', ", " + opacity + ")").replace('rgb', 'rgba');
    }
    if (color.startsWith('rgba')) {
        return color.replace(/[\d\.]+\)$/g, opacity + ")"); // eslint-disable-line no-useless-escape
    }
    return '';
};
//# sourceMappingURL=color-utils.js.map