import i18next from 'i18next';
var DEFAULT_LANGUAGE = 'en';
var i18nInstances = {};
export default function i18n(_a) {
    var locale = _a.locale;
    if (i18nInstances[locale]) {
        return i18nInstances[locale];
    }
    i18nInstances[locale] = i18next
        .createInstance()
        .use({
            type: 'backend',
            read: function(language, namespace, callback) {
                return import (
                        /* webpackChunkName: "chat-web_translations_" */
                        "../src/assets/locale/messages_" + language + ".json")
                    .then(function(translation) {
                        return callback(null, translation);
                    })
                    .catch(function(error) {
                        return callback(error);
                    });
            },
        })
        .init({
            lng: locale,
            fallbackLng: DEFAULT_LANGUAGE,
            debug: false,
            keySeparator: '$',
            interpolation: {
                escapeValue: false,
            },
            react: {
                wait: true,
            },
        });
    return i18nInstances[locale];
}
//# sourceMappingURL=i18n.js.map