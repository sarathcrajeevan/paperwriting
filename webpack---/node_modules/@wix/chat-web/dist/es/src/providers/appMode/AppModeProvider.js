import {
    __extends
} from "tslib";
import {
    Children,
    Component
} from 'react';
import PropTypes from 'prop-types';
import {
    AppMode
} from '../../constants/app-mode';
var AppModeProvider = /** @class */ (function(_super) {
    __extends(AppModeProvider, _super);

    function AppModeProvider() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppModeProvider.prototype.getChildContext = function() {
        var _a = this.props.appMode,
            appMode = _a === void 0 ? AppMode.FullApp : _a;
        return {
            appMode: appMode
        };
    };
    AppModeProvider.prototype.render = function() {
        return Children.only(this.props.children);
    };
    AppModeProvider.childContextTypes = {
        appMode: PropTypes.oneOf([AppMode.FullApp, AppMode.Widget]),
    };
    return AppModeProvider;
}(Component));
export default AppModeProvider;
//# sourceMappingURL=AppModeProvider.js.map