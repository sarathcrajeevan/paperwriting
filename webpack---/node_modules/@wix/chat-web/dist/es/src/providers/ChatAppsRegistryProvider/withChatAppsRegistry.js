import {
    __assign,
    __extends
} from "tslib";
import React from 'react';
import PropTypes from 'prop-types';
import defaultChatAppsRegistry from '@wix/chat-apps-registry';
export var withChatAppsRegistry = function(Component) {
    var _a;
    return _a = /** @class */ (function(_super) {
            __extends(class_1, _super);

            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_1.prototype.render = function() {
                var _a = this.context.chatAppsRegistry,
                    chatAppsRegistry = _a === void 0 ? defaultChatAppsRegistry : _a;
                // `as P` can be removed once the following issue closes
                // https://github.com/Microsoft/TypeScript/issues/28884
                var injectedProps = __assign(__assign({}, this.props), {
                    chatAppsRegistry: chatAppsRegistry
                });
                return React.createElement(Component, __assign({}, injectedProps));
            };
            return class_1;
        }(React.Component)),
        _a.contextTypes = {
            chatAppsRegistry: PropTypes.object,
        },
        _a;
};
//# sourceMappingURL=withChatAppsRegistry.js.map