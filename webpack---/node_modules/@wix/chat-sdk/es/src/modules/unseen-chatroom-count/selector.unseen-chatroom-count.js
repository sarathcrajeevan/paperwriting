import config from '../../constants/unread-chatroom-count-config';
import {
    hashUnseenFilter
} from './reducer.unseen-chatroom-count';
import _get from 'lodash/get';
import _isEmpty from 'lodash/isEmpty';
export var isChatroomUnseen = function(chatroom) {
    var lastMessage = chatroom.lastMessage,
        _a = chatroom.lastReadMessageSequence,
        lastReadMessageSequence = _a === void 0 ? 0 : _a,
        _b = chatroom.lastSeenMessageSequence,
        lastSeenMessageSequence = _b === void 0 ? 0 : _b;
    if (!lastMessage) {
        return false;
    }
    return Math.max(lastReadMessageSequence, lastSeenMessageSequence) < lastMessage.sequence;
};
export var getUnseenChatroomCount = function(state, filter) {
    var filtered = _get(state, ['unseenChatroomCount', 'byFilter', hashUnseenFilter(filter)]);
    if (!filtered || _isEmpty(filtered)) {
        return null;
    }
    if ('resyncCountdown' in filtered) {
        return {
            count: config.maxUnreadsCount,
            overflow: true,
        };
    }
    return {
        count: Math.min(config.maxUnreadsCount, Object.keys(filtered.chatrooms).length),
        overflow: Object.keys(filtered.chatrooms).length > config.maxUnreadsCount,
    };
};