import types from '../../state/types';
import {
    UNREAD_CHATROOM_IDS_COUNT_LIMIT_PER_PARTICIPANT
} from '../../types/sdk-api.types';
var UnreadChatroomCountActions = /** @class */ (function() {
    function UnreadChatroomCountActions(serverApi) {
        this.serverApi = serverApi;
    }
    UnreadChatroomCountActions.prototype.fetchAndUpdateUnreadChatrooms = function(filter) {
        var _this = this;
        return function(dispatch) {
            var promise = _this.serverApi.http$fetchUnreadChatroomIdsMap({
                filter: filter,
                unreadChatroomLimit: UNREAD_CHATROOM_IDS_COUNT_LIMIT_PER_PARTICIPANT,
            });
            return dispatch({
                type: types.SET_UNREAD_CHATROOMS_MAP,
                payload: promise,
                meta: {
                    filter: filter,
                },
            });
        };
    };
    UnreadChatroomCountActions.prototype.markChatroomAsRead = function(chatroomId) {
        return function(dispatch, getState) {
            dispatch({
                type: types.MARK_CHATROOM_READ,
                payload: chatroomId,
                meta: {
                    chatroom: getState().chatrooms.byId[chatroomId],
                },
            });
        };
    };
    return UnreadChatroomCountActions;
}());
export default UnreadChatroomCountActions;