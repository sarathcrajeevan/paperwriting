import {
    getUnreadChatroomCount,
    getUnreadChatroomCountBreakdown
} from './selector.unread-chatroom-count';
import _isEqual from 'lodash/isEqual';
import ConnectivityService from '../../services/connectivity.service';
var UnreadChatroomCountApi = /** @class */ (function() {
    function UnreadChatroomCountApi(_a) {
        var store = _a.store,
            actions = _a.actions;
        this.store = store;
        this.actions = actions;
    }
    UnreadChatroomCountApi.prototype.subscribe = function(callback, filter) {
        var _this = this;
        var prevRes;
        var storeCallback = function() {
            var swallowFirstRedundantCall = function() {
                return (!prevRes && (res === null || res === void 0 ? void 0 : res.count) === 0 ? (prevRes = res) : undefined);
            };
            var state = _this.store.getState();
            var res = getUnreadChatroomCount(state, filter);
            swallowFirstRedundantCall();
            if (res && !_isEqual(prevRes, res)) {
                prevRes = res;
                callback(res);
            }
        };
        storeCallback();
        ConnectivityService.waitForOnline.then(function() {
            return _this.store.dispatch(_this.actions.fetchAndUpdateUnreadChatrooms(filter));
        });
        return {
            unsubscribe: this.store.subscribe(storeCallback),
        };
    };
    UnreadChatroomCountApi.prototype.subscribeToBreakdown = function(callback, filter) {
        var _this = this;
        var prevRes;
        var storeCallback = function() {
            var state = _this.store.getState();
            var res = getUnreadChatroomCountBreakdown(state);
            if (res && !_isEqual(prevRes, res)) {
                prevRes = res;
                callback(res);
            }
        };
        storeCallback();
        ConnectivityService.waitForOnline.then(function() {
            return _this.store.dispatch(_this.actions.fetchAndUpdateUnreadChatrooms(filter));
        });
        return {
            unsubscribe: this.store.subscribe(storeCallback),
        };
    };
    return UnreadChatroomCountApi;
}());
export default UnreadChatroomCountApi;