import {
    __extends
} from "tslib";
var ChatSdkError = /** @class */ (function(_super) {
    __extends(ChatSdkError, _super);

    function ChatSdkError(error, type) {
        var _a, _b, _c, _d, _e, _f, _g;
        var _this = _super.call(this, type) || this;
        Object.setPrototypeOf(_this, ChatSdkError.prototype);
        _this._error = error;
        _this.cause = error;
        _this._type = type;
        var url = ((_a = error.config) === null || _a === void 0 ? void 0 : _a.url) || ((_b = error.request) === null || _b === void 0 ? void 0 : _b.url) || ((_d = (_c = error === null || error === void 0 ? void 0 : error.response) === null || _c === void 0 ? void 0 : _c.config) === null || _d === void 0 ? void 0 : _d.url);
        var urlWithoutQuery = url && url.split('?')[0];
        var errorName = urlWithoutQuery ?
            urlWithoutQuery.replace(/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/, '{id}') :
            'General';
        var httpStatus = (_e = error === null || error === void 0 ? void 0 : error.response) === null || _e === void 0 ? void 0 : _e.status;
        _this._requestId = ((_f = error === null || error === void 0 ? void 0 : error.response) === null || _f === void 0 ? void 0 : _f.headers) && ((_g = error === null || error === void 0 ? void 0 : error.response) === null || _g === void 0 ? void 0 : _g.headers['x-wix-request-id']);
        _this.message = "Chat SDK Error of name '" + errorName + "'" + (httpStatus ? " " + httpStatus : '');
        _this._fingerprint = _this.message;
        return _this;
        // https://docs.sentry.io/data-management/event-grouping/
    }
    Object.defineProperty(ChatSdkError.prototype, "isHttpError", {
        get: function() {
            return this._type === ChatSdkError.TYPES.HTTP_REQUEST;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ChatSdkError.prototype, "fingerprint", {
        get: function() {
            return this._fingerprint;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ChatSdkError.prototype, "requestId", {
        get: function() {
            return this._requestId;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ChatSdkError.prototype, "httpError", {
        get: function() {
            if (this.isHttpError) {
                if (this._error.response) {
                    /*
                     * The request was made and the server responded with a
                     * status code that falls out of the range of 2xx
                     */
                    var _a = this._error.response,
                        config = _a.config,
                        data = _a.data,
                        status = _a.status;
                    return {
                        method: config && config.method.toUpperCase(),
                        url: config === null || config === void 0 ? void 0 : config.url,
                        status: status,
                        data: data,
                        error: this._error,
                    };
                } else if (this._error.request) {
                    /*
                     * The request was made but no response was received, `error.request`
                     * is an instance of XMLHttpRequest in the browser
                     */
                    var _b = this._error,
                        config = _b.config,
                        request = _b.request;
                    return {
                        method: (config === null || config === void 0 ? void 0 : config.method) && config.method.toUpperCase(),
                        url: config === null || config === void 0 ? void 0 : config.url,
                        status: 0,
                        data: request,
                        error: this._error,
                    };
                } else {
                    // Something happened in setting up the request and triggered an Error
                    var config = this._error.config;
                    return {
                        method: (config === null || config === void 0 ? void 0 : config.method) && config.method.toUpperCase(),
                        url: config === null || config === void 0 ? void 0 : config.url,
                        status: 0,
                        data: 'no response/request',
                        error: this._error,
                    };
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ChatSdkError.prototype, "is401Error", {
        get: function() {
            return this.isHttpError && this.httpError.status === 401;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ChatSdkError, "TYPES", {
        get: function() {
            return {
                HTTP_REQUEST: 'http-error',
            };
        },
        enumerable: false,
        configurable: true
    });
    return ChatSdkError;
}(Error));
export default ChatSdkError;