import moment from 'moment';
var TimeMillis = {
    now: 3 * 60 * 1000,
    hour: 60 * 60 * 1000,
    day: 24 * 60 * 60 * 1000,
    week: 7 * 24 * 60 * 60 * 1000,
    year: 364 * 24 * 60 * 60 * 1000,
};
export function forList(dateSrc) {
    var date = new Date(dateSrc);
    var diff = getDiffFromNowMillis(date);
    var presentDate = selectFirstMatch(diff, smallerThan, listDatePresenters, Display.fullDate);
    return presentDate(date);
}
export function forThread(dateSrc) {
    var date = new Date(dateSrc);
    var dateMillis = date.getTime();
    var threadDatePresenter = [{
            key: todayStartMillis(),
            val: displayHourMinutes
        },
        {
            key: yesterdayStartMillis(),
            val: Display.displayYesterday
        },
        {
            key: yearStartMillis(),
            val: Display.displayYearTime
        },
    ];
    var presentDate = selectFirstMatch(dateMillis, after, threadDatePresenter, Display.fullDateAndTime);
    return presentDate(date);
}

function getDiffFromNowMillis(date) {
    var dateMillis = date.getTime();
    var now = new Date().getTime();
    return now - dateMillis;
}
var Display = {
    fullDate: function(date) {
        return displayFullDate(date);
    },
    now: function() {
        return 'now';
    },
    xMinsAgo: function(date) {
        var diff = getDiffFromNowMillis(date);
        var minuetsDiff = Math.floor((diff + 37) / (60 * 1000));
        return minuetsDiff + " min";
    },
    today: function(date) {
        if (isSameWeekDayAsToday(date)) {
            return displayHourMinutes(date);
        } else {
            return 'Yesterday';
        }
    },
    thisWeek: function(date) {
        if (isSameWeekDayAsYesterday(date)) {
            return 'Yesterday';
        } else {
            return displayWeekdayName(date);
        }
    },
    thisYear: function(date) {
        if (isSameYearAsToday(date)) {
            return displayMonthAndDay(date);
        } else {
            return displayFullDate(date);
        }
    },
    displayYesterday: function(date) {
        return moment(date).calendar();
    },
    displayYearTime: function(date) {
        return moment(date).format('MMM D[, ]LT');
    },
    fullDateAndTime: function(date) {
        return moment(date).format('l[, ]LT');
    },
};
var listDatePresenters = [{
        key: TimeMillis.now,
        val: Display.now
    },
    {
        key: TimeMillis.hour,
        val: Display.xMinsAgo
    },
    {
        key: TimeMillis.day,
        val: Display.today
    },
    {
        key: TimeMillis.week,
        val: Display.thisWeek
    },
    {
        key: TimeMillis.year,
        val: Display.thisYear
    },
];

function selectFirstMatch(value, predicate, selectors, defaultSelector) {
    var len = selectors.length;
    for (var i = 0; i < len; i++) {
        var key = selectors[i].key;
        if (predicate(value, key)) {
            return selectors[i].val;
        }
    }
    return defaultSelector;
}
var smallerThan = function(a, b) {
    return a < b;
};
var after = function(a, b) {
    return a > b;
};

function isSameWeekDayAsToday(date) {
    return date.getDay() === new Date().getDay();
}

function displayHourMinutes(dateSrc) {
    var date = moment(dateSrc);
    return date.format('LT');
}

function isSameWeekDayAsYesterday(date) {
    return date.getDay() === new Date().getDay() - 1;
}

function isSameYearAsToday(date) {
    return date.getFullYear() === new Date().getFullYear();
}

function displayWeekdayName(date) {
    return moment(date).format('ddd');
}

function displayMonthAndDay(date) {
    return moment(date).format('MMM D');
}

function displayFullDate(date) {
    return moment(date).format('l');
}

function todayStartMillis() {
    return dayStartMillis(new Date());
}

function yesterdayStartMillis() {
    var nowMillis = new Date().getTime();
    var yesterdayMillis = nowMillis - TimeMillis.day;
    return dayStartMillis(new Date(yesterdayMillis));
}

function dayStartMillis(date) {
    var year = date.getFullYear();
    var month = date.getMonth();
    var day = date.getDate();
    var startOfDay = new Date(year, month, day);
    return startOfDay.getTime();
}

function yearStartMillis() {
    var year = new Date().getFullYear();
    var startOfDay = new Date(year, 0, 1);
    return startOfDay.getTime();
}