import {
    __assign
} from "tslib";
var generateFilterIdentifier = function(filter) {
    var filterWithExplicitArchive = _getFilterWithExplicitArchive(filter);
    var filterWithExplicitUnread = _getFilterWithExplicitUnread(filterWithExplicitArchive);
    var filterWithSortedParticipants = _getFilterWithSortedParticipants(filterWithExplicitUnread);
    var sortedFilterArray = _getSortedArrayFromObject(filterWithSortedParticipants);
    return JSON.stringify(sortedFilterArray);
};

function _getFilterWithExplicitArchive(filter) {
    return filter ? __assign(__assign({}, filter), {
        isArchived: !!filter.isArchived
    }) : {
        isArchived: false
    };
}

function _getFilterWithExplicitUnread(filter) {
    return __assign(__assign({}, filter), {
        isUnread: !!filter.isUnread
    });
}

function _getFilterWithSortedParticipants(filter) {
    if (filter.participantIds) {
        filter.participantIds.sort();
    }
    return filter;
}

function _getSortedArrayFromObject(obj) {
    return Object.keys(obj)
        .sort()
        .map(function(key) {
            return [key, obj[key]];
        });
}
export {
    generateFilterIdentifier
};