import _reduce from 'lodash/reduce';
import _isEmpty from 'lodash/isEmpty';
import {
    IndicationEvent
} from '../constants/constants';
/**
 * @function getSummarizedIndicationsForPrivateChat
 * Utility function that standardize a single use case of getting a summary indication out of indications array.
 * Logic is pretty straight forward:
 * If "seen" and "sent" indications exists, it would return the first "seen" indication, otherwise it would return the first "sent" indication.
 * @param indication - a single indication of type DomainMessageIndications, which is an object with 2 fields: participantId: string and details: object with event: IndicationEvent, method: string, formattedTimestamp: string
 * @returns SummarizedIndicationsForPrivateChat an object with 2 fields: event: IndicationEvent and method: string.
 */
export var getSummarizedIndicationsForPrivateChat = function(indication) {
    if (!indication) {
        return null;
    }
    var summarizedIndication = _reduce(indication.details, function(result, details) {
        return isTheFirstSeenIndication(details, result) ?
            {
                event: IndicationEvent.SEEN,
                method: details.method
            } :
            result;
    }, {});
    return _isEmpty(summarizedIndication) ? null : summarizedIndication;
};
var isTheFirstSeenIndication = function(details, result) {
    return details.event === IndicationEvent.SEEN && result.event !== IndicationEvent.SEEN;
};