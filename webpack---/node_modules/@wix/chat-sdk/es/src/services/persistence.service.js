import {
    __awaiter,
    __generator
} from "tslib";
var defaultPersistenceEngine = {
    setItem: function() {
        return Promise.resolve();
    },
    getItem: function() {
        return Promise.resolve(JSON.stringify({}));
    },
    removeItem: function() {
        return Promise.resolve('remove');
    },
};
var MESSAGE_DRAFT_PERSISTENCE_KEY = 'crm.chat.MESSAGE_DRAFT_PERSISTENCE_KEY';
export var CHAT_TOKEN_PERSISTENCE_KEY = 'crm.chat.CHAT_TOKEN_PERSISTENCE_KEY';
var parseStoredData = function(storedData) {
    return storedData ? JSON.parse(storedData) : storedData;
};
var PersistenceService = /** @class */ (function() {
    function PersistenceService(persistenceEngine, userId, participantIds) {
        if (persistenceEngine === void 0) {
            persistenceEngine = defaultPersistenceEngine;
        }
        if (userId === void 0) {
            userId = '';
        }
        if (participantIds === void 0) {
            participantIds = [];
        }
        this.persistenceEngine = persistenceEngine;
        this.userBasedPrefix = userId + "_" + participantIds.join('_');
    }
    PersistenceService.prototype.saveMessageDrafts = function(data) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [2 /*return*/ , this.setItemForUserId(MESSAGE_DRAFT_PERSISTENCE_KEY, JSON.stringify(data))];
            });
        });
    };
    PersistenceService.prototype.loadMessageDrafts = function() {
        return this.getItemForUserId(MESSAGE_DRAFT_PERSISTENCE_KEY)
            .then(parseStoredData)
            .catch(function(error) {
                console.warn("Error while loading message draft data from persistence " + error);
                return {};
            });
    };
    PersistenceService.prototype.clearMessageDrafts = function() {
        return this.removeItemForUserId(MESSAGE_DRAFT_PERSISTENCE_KEY).catch(function(error) {
            console.warn("Error while removing message draft from persistence " + error);
            return {};
        });
    };
    PersistenceService.prototype.saveToken = function(chatToken) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [2 /*return*/ , this.persistenceEngine.setItem(CHAT_TOKEN_PERSISTENCE_KEY, chatToken)];
            });
        });
    };
    PersistenceService.prototype.getChatToken = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [2 /*return*/ , this.persistenceEngine.getItem(CHAT_TOKEN_PERSISTENCE_KEY)];
            });
        });
    };
    PersistenceService.prototype.clearToken = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                return [2 /*return*/ , this.persistenceEngine.removeItem(CHAT_TOKEN_PERSISTENCE_KEY)];
            });
        });
    };
    PersistenceService.prototype.removeItemForUserId = function(key) {
        return this.persistenceEngine.removeItem(this.userBasedPrefix + "_" + key);
    };
    PersistenceService.prototype.getItemForUserId = function(key) {
        return this.persistenceEngine.getItem(this.userBasedPrefix + "_" + key);
    };
    PersistenceService.prototype.setItemForUserId = function(key, data) {
        return this.persistenceEngine.setItem(this.userBasedPrefix + "_" + key, data);
    };
    return PersistenceService;
}());
export default PersistenceService;