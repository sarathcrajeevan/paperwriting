'use strict'
const last_ = require('lodash/last')
const head_ = require('lodash/head')
const includes_ = require('lodash/includes')

const FIELD_PATH_SEPARATOR = '.'

const toFieldPath = (fieldName, referenceFieldName) =>
    referenceFieldName ?
    [referenceFieldName, fieldName].join(FIELD_PATH_SEPARATOR) :
    fieldName

const isFieldFromReferencedCollection = fieldPath =>
    includes_(fieldPath, FIELD_PATH_SEPARATOR)

const getFieldFromReferencedCollectionName = fieldPath =>
    last_(fieldPath.split(FIELD_PATH_SEPARATOR))

const getReferenceFieldName = fieldPath =>
    head_(fieldPath.split(FIELD_PATH_SEPARATOR))

const getFieldFromReferencedCollection = (
    dataPath,
    collection,
    allCollections,
) => {
    const referenceFieldName = getReferenceFieldName(dataPath)
    const fieldFromReferencedCollection =
        getFieldFromReferencedCollectionName(dataPath)
    const referencedCollection = collection.fields.find(
        field => field.name === referenceFieldName,
    ).referencedCollection

    return allCollections
        .find(col => col.id === referencedCollection)
        .fields.find(field => field.name === fieldFromReferencedCollection)
}

module.exports.FIELD_PATH_SEPARATOR = FIELD_PATH_SEPARATOR
module.exports.toFieldPath = toFieldPath
module.exports.isFieldFromReferencedCollection = isFieldFromReferencedCollection
module.exports.getFieldFromReferencedCollectionName =
    getFieldFromReferencedCollectionName
module.exports.getReferenceFieldName = getReferenceFieldName
module.exports.getFieldFromReferencedCollection =
    getFieldFromReferencedCollection