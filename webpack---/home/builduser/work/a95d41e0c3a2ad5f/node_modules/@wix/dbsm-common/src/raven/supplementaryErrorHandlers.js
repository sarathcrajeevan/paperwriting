const invoke_ = require('lodash/invoke')

// eslint-disable-next-line no-console
const theOneTrueConsoleError = console.error

module.exports.isAppInvolvedWithError = appName => err =>
    err.stack && err.stack.toString().includes(appName)

module.exports.addUnhandledRejectionListener = (workerGlobalScope, callback) =>
    invoke_(workerGlobalScope, 'addEventListener', 'unhandledrejection', callback)

module.exports.extendConsoleError = (workerGlobalScope, callback) => {
    const console = workerGlobalScope.console
    const originalConsoleError = console.error.bind(console)
    console.error = (...args) => {
        try {
            // eslint-disable-next-line standard/no-callback-literal
            callback(...args)
        } catch (e) {
            originalConsoleError(e)
        }
        originalConsoleError(...args)
    }

    return () => {
        console.error = theOneTrueConsoleError
    }
}

module.exports.shouldReportException = (error, ...functions) =>
    functions.reduce((res, func) => res && func(error), true)