'use strict'

const isError_ = require('lodash/isError')
const {
    isAppInvolvedWithError,
    extendConsoleError,
    addUnhandledRejectionListener,
    shouldReportException,
} = require('../raven/supplementaryErrorHandlers')

const registerToUnexpectedErrors = ({
    onError,
    appName,
    global
}) => {
    const handleException = error => {
        if (
            shouldReportException(error, isError_, isAppInvolvedWithError(appName))
        ) {
            onError(error)
        }
    }

    const resetConsoleError = extendConsoleError(global, error =>
        handleException(error),
    )
    const unhandledRejectionFn = evt => handleException(evt.reason)
    addUnhandledRejectionListener(global, unhandledRejectionFn)

    return () => {
        resetConsoleError()
        global.removeEventListener('unhandledrejection', unhandledRejectionFn)
    }
}

module.exports.registerToUnexpectedErrors = registerToUnexpectedErrors