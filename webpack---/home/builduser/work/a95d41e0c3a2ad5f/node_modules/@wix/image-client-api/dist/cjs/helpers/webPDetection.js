/*
web browsers that natively support WebP
https://developers.google.com/speed/webp/faq
 */
'use strict';

var globalFeatureSupportObject = require('./imageServiceFeatureSupportObject');

var constants = require('./imageServiceConstants');
/**
 * Check once for browser support and store on global features support object
 * https://developers.google.com/speed/webp/faq#how_can_i_detect_browser_support_using_javascript
 */


function checkWEBPSupport(type) {
    var webpTypes = {
        lossy: 'UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA',
        lossless: 'UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==',
        alpha: 'UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==',
        animation: 'UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA'
    };
    var isWebpFeature = globalFeatureSupportObject.getFeature('isWEBP');
    var webpImg = new window.Image();

    webpImg.onload = function() {
        isWebpFeature[type] = webpImg.width > 0 && webpImg.height > 0;
        globalFeatureSupportObject.setFeature('isWEBP', isWebpFeature);
    };

    webpImg.onerror = function() {
        isWebpFeature[type] = false;
        globalFeatureSupportObject.setFeature('isWEBP', isWebpFeature);
    };

    webpImg.src = "data:image/webp;base64," + webpTypes[type];
}

var isWebPLossy = function isWebPLossy(os, osVersion, browser, browserVersion, appleWebKitVersion) {
    var chrome_desktop_17 = !os.phone && !os.tablet && browser.chrome && browserVersion >= 17;
    var chrome_android_25 = os.android && (os.phone || os.tablet) && browser.webkit && browser.chrome && browserVersion >= 25;
    var native_android_4 = os.android && appleWebKitVersion < 535 && (os.phone || os.tablet) && osVersion >= 4 && browser.webkit;
    var edge_desktop_18 = browser.edge && browserVersion >= 18;
    var firefox_desktop_65 = !os.firefoxos && browser.firefox && !browser.webkit && browserVersion >= 65;
    return !!(chrome_desktop_17 || chrome_android_25 || native_android_4 || edge_desktop_18 || firefox_desktop_65);
};

var isWebPLosslessAndAlpha = function isWebPLosslessAndAlpha(os, osVersion, browser, browserVersion, appleWebKitVersion) {
    var chrome_desktop_23 = !os.phone && !os.tablet && browser.chrome && browserVersion >= 23;
    var chrome_android_25 = os.android && (os.phone || os.tablet) && browser.webkit && browser.chrome && browserVersion >= 25;
    var native_android_4_2 = os.android && appleWebKitVersion < 535 && (os.phone || os.tablet) && osVersion >= 4.2 && browser.webkit && !browser.safari;
    var edge_desktop_18 = browser.edge && browserVersion >= 18;
    var firefox_desktop_65 = !os.firefoxos && browser.firefox && !browser.webkit && browserVersion >= 65;
    return !!(chrome_desktop_23 || chrome_android_25 || native_android_4_2 || edge_desktop_18 || firefox_desktop_65);
};

var isWebPAnimation = function isWebPAnimation(os, osVersion, browser, browserVersion) {
    var chrome_32 = !os.ios && browser.chrome && browserVersion >= 32;
    var edge_desktop_18 = browser.edge && browserVersion >= 18;
    var firefox_desktop_65 = !os.firefoxos && browser.firefox && !browser.webkit && browserVersion >= 65;
    return !!(chrome_32 || edge_desktop_18 || firefox_desktop_65);
};
/**
 *
 * @param userAgent
 * @param browserDetect
 */


var checkSupportByUserAgent = function checkSupportByUserAgent(userAgent, _ref) {
    var browser = _ref.browser,
        os = _ref.os;

    if (userAgent) {
        var _globalFeatureSupport;

        var browserVersion = parseFloat(browser.version);
        var osVersion = parseFloat(os.version); // Apple webkit

        var regExAppleWebKit = new RegExp(/AppleWebKit\/([\d.]+)/);
        var resultAppleWebKitRegEx = regExAppleWebKit.exec(userAgent);
        var appleWebKitVersion = resultAppleWebKitRegEx === null ? null : parseFloat(regExAppleWebKit.exec(userAgent)[1]);
        var isLosslessAndAlpha = isWebPLosslessAndAlpha(os, osVersion, browser, browserVersion, appleWebKitVersion);
        globalFeatureSupportObject.setFeature('isWEBP', (_globalFeatureSupport = {}, _globalFeatureSupport[constants.webp.LOSSY] = isWebPLossy(os, osVersion, browser, browserVersion, appleWebKitVersion), _globalFeatureSupport[constants.webp.LOSSLESS] = isLosslessAndAlpha, _globalFeatureSupport[constants.webp.ALPHA] = isLosslessAndAlpha, _globalFeatureSupport[constants.webp.ANIMATION] = isWebPAnimation(os, osVersion, browser, browserVersion), _globalFeatureSupport));
    }
};

var checkSupportByFeatureDetection = function checkSupportByFeatureDetection() {
    // jpg 2 webp
    checkWEBPSupport(constants.webp.LOSSY); // png 2 webp

    checkWEBPSupport(constants.webp.LOSSLESS);
    checkWEBPSupport(constants.webp.ALPHA); // 2 animation

    checkWEBPSupport(constants.webp.ANIMATION);
};
/**
 * check if the browser supports webp image display
 * for the image source type
 * @param {string}    fileType
 * @returns {boolean}
 */


function isWEBPBrowserSupport(fileType) {
    var isWebpFeature = globalFeatureSupportObject.getFeature('isWEBP');
    var isLosssyJPG = fileType === constants.fileType.JPG && isWebpFeature[constants.webp.LOSSY];
    var isLosslessPNG = fileType === constants.fileType.PNG && isWebpFeature[constants.webp.LOSSLESS];
    var isAlphaPNG = fileType === constants.fileType.PNG && isWebpFeature[constants.webp.ALPHA];
    return isLosssyJPG || isLosslessPNG && isAlphaPNG;
}

module.exports.checkSupportByUserAgent = checkSupportByUserAgent;
module.exports.checkSupportByFeatureDetection = checkSupportByFeatureDetection;
module.exports.isWEBPBrowserSupport = isWEBPBrowserSupport;
//# sourceMappingURL=webPDetection.js.map