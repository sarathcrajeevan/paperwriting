import {
    get
} from 'lodash';
import {
    QuantityCalculator
} from '../quantity-calculator/quantityCalculator';
import {
    ProductInventoryStatus,
} from '../types/product';
export function last(array) {
    return array[array.length - 1];
}
export function first(array) {
    return array[0];
}
export function selectProductOptionItems(product) {
    return product.options;
}
export function selectProductOptionItemsByType(product, type) {
    return product.options.find(function(o) {
        return o.optionType === type;
    });
}
export function inStock(product, variant) {
    var ref = variant || product;
    if (product.isInStock === false) {
        return false;
    }
    if (!variant && product.isInStock !== undefined) {
        return product.isInStock;
    }
    if (product.isTrackingInventory) {
        if (variant) {
            return ref.inventory.quantity > 0;
        }
        return product.inventory.quantity > 0 || product.productItems.some(function(item) {
            return item.inventory.quantity > 0;
        });
    }
    return ref.inventory.status === ProductInventoryStatus.IN_STOCK;
}
export function userInputsFactory() {
    return {
        selection: [],
        text: [],
        quantity: [],
        subscriptionPlan: []
    };
}
export function validateUserInputs(product, userInputs) {
    var errors = userInputsFactory();
    var quantityRange = QuantityCalculator.getQuantitiesRange(product, userInputs.selection);
    var userQuantity = Number(userInputs.quantity[0]);
    product.options.forEach(function(_, i) {
        errors.selection[i] = !userInputs.selection[i];
    });
    if (product.customTextFields) {
        product.customTextFields.forEach(function(item, i) {
            errors.text[i] = item.isMandatory === true && !userInputs.text[i];
        });
    }
    errors.quantity = [
        (isNaN(userQuantity) || userQuantity < first(quantityRange) || userQuantity > last(quantityRange)) === true,
    ];
    var isProductSubscription = !!get(product.subscriptionPlans, ['list', '0']);
    var isSelectedPlan = !!get(userInputs.subscriptionPlan, ['0']);
    errors.subscriptionPlan = [isProductSubscription && !isSelectedPlan];
    return errors;
}
export function formatCustomTextFields(product, userInputs) {
    var customTextFields = [];
    return (product.customTextFields || []).reduce(function(acc, field, i) {
        acc.push({
            customText: {
                title: field.title,
                key: field.key,
                isMandatory: field.isMandatory
            },
            answer: userInputs.text[i] || '',
        });
        return acc;
    }, customTextFields);
}
export function hasVariantInStock(product) {
    return product.productItems.some(function(option) {
        return inStock(product, option);
    });
}
export function hasSubscriptionPlans(product) {
    var _a;
    return ((_a = product.subscriptionPlans) === null || _a === void 0 ? void 0 : _a.list.filter(function(subPlan) {
        return subPlan.visible === true;
    }).length) > 0;
}
export function isSelectedSubscriptionOneTimePurchase(selectedSubscriptionPlanId) {
    return selectedSubscriptionPlanId === 'one-time-purchase';
}
export function isSubscribeNow(product, selectedSubscriptionPlanId) {
    return !isSelectedSubscriptionOneTimePurchase(selectedSubscriptionPlanId) && hasSubscriptionPlans(product);
}
export function actualPrice(product, variant) {
    var isDiscounted = hasDiscount(product);
    var isSurcharged = hasSurcharge(variant);
    var ref = variant || product;
    if (isSurcharged) {
        return isDiscounted ? variant.comparePrice : variant.price;
    }
    return isDiscounted ? ref.comparePrice : ref.price;
}
export function hasDiscount(product) {
    var _a;
    return ((_a = product.discount) === null || _a === void 0 ? void 0 : _a.value) > 0;
}
export function hasSurcharge(variant) {
    return (variant === null || variant === void 0 ? void 0 : variant.surcharge) < 0;
}
export function actualSku(product, variant) {
    return (variant === null || variant === void 0 ? void 0 : variant.sku) || product.sku;
}
//# sourceMappingURL=productUtils.js.map