var BulkCommandsExecutor = /** @class */ (function() {
    function BulkCommandsExecutor(bulkExecutionUrl, http) {
        var _this = this;
        this.bulkExecutionUrl = bulkExecutionUrl;
        this.http = http;
        this.commands = [];
        this.bulkPromise = new Promise(function(resolve) {
            _this.bulkPromiseResolve = resolve;
        });
    }
    BulkCommandsExecutor.prototype.addCommand = function(commandName, data) {
        this.commands.push({
            name: commandName,
            data: data,
        });
        return this.bulkPromise;
    };
    BulkCommandsExecutor.prototype.flush = function() {
        var _this = this;
        if (!this.commands || this.commands.length === 0) {
            this.bulkPromiseResolve({
                data: null,
                status: 200
            });
            return this.bulkPromise;
        }
        return this.http.post(this.bulkExecutionUrl, {
            commands: this.commands
        }).then(function(res) {
            _this.bulkPromiseResolve(res);
            return _this.bulkPromise;
        });
    };
    return BulkCommandsExecutor;
}());
export {
    BulkCommandsExecutor
};
//# sourceMappingURL=bulk-commands-executor.js.map